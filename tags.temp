!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
runner	.\bin\cake.php	/^$runner = new CommandRunner(new Application(dirname(__DIR__) . '\/config'), 'cake');$/;"	v
based	.\config\app.default.php	/^     * - paths - Configure paths for non class based resources. Supports the$/;"	c
responsible	.\config\app.default.php	/^     * - `exceptionRenderer` - string - The class responsible for rendering$/;"	c
you	.\config\app.default.php	/^     *   uncaught exceptions. If you choose a custom class you should place$/;"	c
in	.\config\app.default.php	/^     *   the file for that class in src\/Error. This class needs to implement a$/;"	c
to	.\config\app.default.php	/^     *    class to use for managing the session. CakePHP bundles the `CacheSession`$/;"	c
to	.\config\app.default.php	/^     * - 'cache' - Use the Cache class to save sessions.$/;"	c
implements	.\config\app.default.php	/^     * Make sure the class implements PHP's `SessionHandlerInterface` and set$/;"	c
based	.\config\app.php	/^ * - paths - Configure paths for non class based resources. Supports the$/;"	c
responsible	.\config\app.php	/^ * - `exceptionRenderer` - string - The class responsible for rendering$/;"	c
you	.\config\app.php	/^ *   uncaught exceptions. If you choose a custom class you should place$/;"	c
in	.\config\app.php	/^ *   the file for that class in src\/Error. This class needs to implement a$/;"	c
to	.\config\app.php	/^ *    class to use for managing the session. CakePHP bundles the `CacheSession`$/;"	c
to	.\config\app.php	/^ * - 'cache' - Use the Cache class to save sessions.$/;"	c
implements	.\config\app.php	/^ * Make sure the class implements PHP's `SessionHandlerInterface` and set$/;"	c
array_key_last	.\config\appFunctions.php	/^    function array_key_last($array)$/;"	f
array_key_first	.\config\appFunctions.php	/^    function array_key_first($array)$/;"	f
array_value_last	.\config\appFunctions.php	/^    function array_value_last($array)$/;"	f
array_value_first	.\config\appFunctions.php	/^    function array_value_first($array)$/;"	f
dotenv	.\config\bootstrap.php	/^\/\/     $dotenv = new \\josegonzalez\\Dotenv\\Loader([CONFIG . '.env']);$/;"	v
isCli	.\config\bootstrap.php	/^$isCli = PHP_SAPI === 'cli';$/;"	v
s	.\config\bootstrap.php	/^    $s = null;$/;"	v
s	.\config\bootstrap.php	/^        $s = 's';$/;"	v
httpHost	.\config\bootstrap.php	/^    $httpHost = env('HTTP_HOST');$/;"	v
detector	.\config\bootstrap.php	/^    $detector = new \\Detection\\MobileDetect();$/;"	v
detector	.\config\bootstrap.php	/^    $detector = new \\Detection\\MobileDetect();$/;"	v
DS	.\config\paths.php	/^    define('DS', DIRECTORY_SEPARATOR);$/;"	d
ROOT	.\config\paths.php	/^define('ROOT', dirname(__DIR__));$/;"	d
APP_DIR	.\config\paths.php	/^define('APP_DIR', 'src');$/;"	d
APP	.\config\paths.php	/^define('APP', ROOT . DS . APP_DIR . DS);$/;"	d
CONFIG	.\config\paths.php	/^define('CONFIG', ROOT . DS . 'config' . DS);$/;"	d
WWW_ROOT	.\config\paths.php	/^define('WWW_ROOT', ROOT . DS . 'webroot' . DS);$/;"	d
TESTS	.\config\paths.php	/^define('TESTS', ROOT . DS . 'tests' . DS);$/;"	d
TMP	.\config\paths.php	/^define('TMP', ROOT . DS . 'tmp' . DS);$/;"	d
LOGS	.\config\paths.php	/^define('LOGS', ROOT . DS . 'logs' . DS);$/;"	d
CACHE	.\config\paths.php	/^define('CACHE', TMP . 'cache' . DS);$/;"	d
CAKE_CORE_INCLUDE_PATH	.\config\paths.php	/^define('CAKE_CORE_INCLUDE_PATH', ROOT . DS . 'vendor' . DS . 'cakephp' . DS . 'cakephp');$/;"	d
CORE_PATH	.\config\paths.php	/^define('CORE_PATH', CAKE_CORE_INCLUDE_PATH . DS);$/;"	d
CAKE	.\config\paths.php	/^define('CAKE', CORE_PATH . 'src' . DS);$/;"	d
to	.\config\routes.php	/^ * The default class to use for all routes$/;"	c
used	.\config\routes.php	/^ * If no call is made to `Router::defaultRouteClass()`, the class used is$/;"	c
can	.\config\routes.php	/^     * Any route class can be used with this method, such as:$/;"	c
i18n	.\config\schema\i18n.sql	/^CREATE TABLE i18n ($/;"	t
i18n.id	.\config\schema\i18n.sql	/^    id int NOT NULL auto_increment,$/;"	F
i18n.locale	.\config\schema\i18n.sql	/^    locale varchar(6) NOT NULL,$/;"	F
i18n.model	.\config\schema\i18n.sql	/^    model varchar(255) NOT NULL,$/;"	F
i18n.foreign_key	.\config\schema\i18n.sql	/^    foreign_key int(10) NOT NULL,$/;"	F
i18n.field	.\config\schema\i18n.sql	/^    field varchar(255) NOT NULL,$/;"	F
i18n.content	.\config\schema\i18n.sql	/^    content text,$/;"	F
Application	.\src\Application.php	/^class Application extends BaseApplication {$/;"	c
bootstrap	.\src\Application.php	/^    public function bootstrap()$/;"	f
middleware	.\src\Application.php	/^    public function middleware($middlewareQueue)$/;"	f
bootstrapCli	.\src\Application.php	/^    protected function bootstrapCli()$/;"	f
STDIN	.\src\Console\Installer.php	/^    define('STDIN', fopen('php:\/\/stdin', 'r'));$/;"	d
to	.\src\Console\Installer.php	/^ * composer. Customize this class to suit your needs.$/;"	c
Installer	.\src\Console\Installer.php	/^class Installer$/;"	c
postInstall	.\src\Console\Installer.php	/^    public static function postInstall(Event $event)$/;"	f
io	.\src\Console\Installer.php	/^        $io = $event->getIO();$/;"	v
rootDir	.\src\Console\Installer.php	/^        $rootDir = dirname(dirname(__DIR__));$/;"	v
validator	.\src\Console\Installer.php	/^            $validator = function ($arg) {$/;"	v
setFolderPermissions	.\src\Console\Installer.php	/^            $setFolderPermissions = $io->askAndValidate($/;"	v
class	.\src\Console\Installer.php	/^        $class = 'Cake\\Codeception\\Console\\Installer';$/;"	v
to	.\src\Console\Installer.php	/^     * @param \\Composer\\IO\\IOInterface $io IO interface to write to console.$/;"	i
createAppConfig	.\src\Console\Installer.php	/^    public static function createAppConfig($dir, $io)$/;"	f
appConfig	.\src\Console\Installer.php	/^        $appConfig = $dir . '\/config\/app.php';$/;"	v
defaultConfig	.\src\Console\Installer.php	/^        $defaultConfig = $dir . '\/config\/app.default.php';$/;"	v
to	.\src\Console\Installer.php	/^     * @param \\Composer\\IO\\IOInterface $io IO interface to write to console.$/;"	i
createWritableDirectories	.\src\Console\Installer.php	/^    public static function createWritableDirectories($dir, $io)$/;"	f
path	.\src\Console\Installer.php	/^            $path = $dir . '\/' . $path;$/;"	v
to	.\src\Console\Installer.php	/^     * @param \\Composer\\IO\\IOInterface $io IO interface to write to console.$/;"	i
setFolderPermissions	.\src\Console\Installer.php	/^    public static function setFolderPermissions($dir, $io)$/;"	f
changePerms	.\src\Console\Installer.php	/^        $changePerms = function ($path) use ($io) {$/;"	v
currentPerms	.\src\Console\Installer.php	/^            $currentPerms = fileperms($path) & 0777;$/;"	v
worldWritable	.\src\Console\Installer.php	/^            $worldWritable = $currentPerms | 0007;$/;"	v
res	.\src\Console\Installer.php	/^            $res = chmod($path, $worldWritable);$/;"	v
walker	.\src\Console\Installer.php	/^        $walker = function ($dir) use (&$walker, $changePerms) {$/;"	v
files	.\src\Console\Installer.php	/^            $files = array_diff(scandir($dir), ['.', '..']);$/;"	v
path	.\src\Console\Installer.php	/^                $path = $dir . '\/' . $file;$/;"	v
to	.\src\Console\Installer.php	/^     * @param \\Composer\\IO\\IOInterface $io IO interface to write to console.$/;"	i
setSecuritySalt	.\src\Console\Installer.php	/^    public static function setSecuritySalt($dir, $io)$/;"	f
newKey	.\src\Console\Installer.php	/^        $newKey = hash('sha256', Security::randomBytes(64));$/;"	v
to	.\src\Console\Installer.php	/^     * @param \\Composer\\IO\\IOInterface $io IO interface to write to console.$/;"	i
setSecuritySaltInFile	.\src\Console\Installer.php	/^    public static function setSecuritySaltInFile($dir, $io, $newKey, $file)$/;"	f
config	.\src\Console\Installer.php	/^        $config = $dir . '\/config\/' . $file;$/;"	v
content	.\src\Console\Installer.php	/^        $content = file_get_contents($config);$/;"	v
content	.\src\Console\Installer.php	/^        $content = str_replace('__SALT__', $newKey, $content, $count);$/;"	v
result	.\src\Console\Installer.php	/^        $result = file_put_contents($config, $content);$/;"	v
to	.\src\Console\Installer.php	/^     * @param \\Composer\\IO\\IOInterface $io IO interface to write to console.$/;"	i
setAppNameInFile	.\src\Console\Installer.php	/^    public static function setAppNameInFile($dir, $io, $appName, $file)$/;"	f
config	.\src\Console\Installer.php	/^        $config = $dir . '\/config\/' . $file;$/;"	v
content	.\src\Console\Installer.php	/^        $content = file_get_contents($config);$/;"	v
content	.\src\Console\Installer.php	/^        $content = str_replace('__APP_NAME__', $appName, $content, $count);$/;"	v
result	.\src\Console\Installer.php	/^        $result = file_put_contents($config, $content);$/;"	v
below	.\src\Controller\AppController.php	/^ * Add your application-wide methods in the class below, your controllers$/;"	c
AppController	.\src\Controller\AppController.php	/^class AppController extends Controller$/;"	c
defaultOptions	.\src\Controller\AppController.php	/^    public $defaultOptions = [$/;"	v
defaultOptions	.\src\Controller\AppController.php	/^    public $defaultOptions = [$/;"	v
index	.\src\Controller\AppController.php	/^    public function index()$/;"	f
egCandidature	.\src\Controller\AppController.php	/^          $egCandidature = $this->paginate($this->EgCandidature);$/;"	v
initialize	.\src\Controller\AppController.php	/^    public function initialize()$/;"	f
beforeRender	.\src\Controller\AppController.php	/^    public function beforeRender(Event $event)$/;"	f
koonexion	.\src\Controller\AppController.php	/^        \/\/        $koonexion = ConnectionManager::get($this->getActiveDataSourceName());$/;"	v
shortName	.\src\Controller\AppController.php	/^        $shortName = ConnectionManager::get($this->getActiveDataSourceName())$/;"	v
beforeFilter	.\src\Controller\AppController.php	/^    public function beforeFilter(Event $event)$/;"	f
message	.\src\Controller\AppController.php	/^                $message = __($/;"	v
connection	.\src\Controller\AppController.php	/^        $this->connection = $this->getActiveConnexion();$/;"	v
nonImplantee	.\src\Controller\AppController.php	/^    protected function nonImplantee(string $nomfunc, $pk)$/;"	f
duplicate	.\src\Controller\AppController.php	/^    public function duplicate($pk)$/;"	f
renderResultSet2EasyUIDatagrid	.\src\Controller\AppController.php	/^    public function renderResultSet2EasyUIDatagrid(\\Cake\\Datasource\\ResultSetInterface $resultSet)$/;"	f
rows	.\src\Controller\AppController.php	/^        $rows = [];$/;"	v
rows	.\src\Controller\AppController.php	/^            $rows = $resultSet->toArray();$/;"	v
total	.\src\Controller\AppController.php	/^        $total = count($rows); \/\/ forcément !$/;"	v
renderEasyUIDataGrid	.\src\Controller\AppController.php	/^    public function renderEasyUIDataGrid(int $total = 0, $rows = [])$/;"	f
total	.\src\Controller\AppController.php	/^    public function renderEasyUIDataGrid(int $total = 0, $rows = [])$/;"	v
data	.\src\Controller\AppController.php	/^        $data = ['total', 'rows'];$/;"	v
jsonOptions	.\src\Controller\AppController.php	/^        $jsonOptions = JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES$/;"	v
renderEasyUIComboBox	.\src\Controller\AppController.php	/^    public function renderEasyUIComboBox(array $rows = [])$/;"	f
rows	.\src\Controller\AppController.php	/^    public function renderEasyUIComboBox(array $rows = [])$/;"	v
data	.\src\Controller\AppController.php	/^        $data = ['rows'];$/;"	v
jsonOptions	.\src\Controller\AppController.php	/^        $jsonOptions = JSON_UNESCAPED_SLASHES \/\/Don't escape \/.$/;"	v
getDefaultSortController	.\src\Controller\AppController.php	/^    public function getDefaultSortController(string $tableName = "")$/;"	f
tableName	.\src\Controller\AppController.php	/^    public function getDefaultSortController(string $tableName = "")$/;"	v
nameCtl	.\src\Controller\AppController.php	/^        $nameCtl = ($tableName === "") ? $this->name : $tableName;$/;"	v
table	.\src\Controller\AppController.php	/^        $table = $this->getTableLocator()->get($/;"	v
k0	.\src\Controller\AppController.php	/^        $k0 = (array) $table->getPrimaryKey();$/;"	v
k	.\src\Controller\AppController.php	/^        $k = array_map([$this, 'univoque'], $k0);$/;"	v
v	.\src\Controller\AppController.php	/^        $v = array_fill(0, count($k), 'desc');$/;"	v
result	.\src\Controller\AppController.php	/^        $result = array_combine($k, $v);$/;"	v
univoque	.\src\Controller\AppController.php	/^    public function univoque($v)$/;"	f
nameCtl	.\src\Controller\AppController.php	/^        $nameCtl = $this->sessionCheck('ctlunivoque') ?$/;"	v
getSortController	.\src\Controller\AppController.php	/^    public function getSortController(array $gdata = [])$/;"	f
gdata	.\src\Controller\AppController.php	/^    public function getSortController(array $gdata = [])$/;"	v
result	.\src\Controller\AppController.php	/^        $result = [];$/;"	v
delimiter	.\src\Controller\AppController.php	/^                $delimiter = ",";$/;"	v
k0	.\src\Controller\AppController.php	/^                $k0 = explode($delimiter, $gdata['sort']);$/;"	v
k	.\src\Controller\AppController.php	/^                $k = array_map([$this, 'univoque'], $k0);$/;"	v
v	.\src\Controller\AppController.php	/^                $v = explode($delimiter, $gdata['order']);$/;"	v
result	.\src\Controller\AppController.php	/^                $result = array_combine($k, $v);$/;"	v
result	.\src\Controller\AppController.php	/^            $result = $this->getDefaultSortController();$/;"	v
getdatagrid	.\src\Controller\AppController.php	/^    public function getdatagrid(array $options = [])$/;"	f
options	.\src\Controller\AppController.php	/^    public function getdatagrid(array $options = [])$/;"	v
infoOpt	.\src\Controller\AppController.php	/^        $infoOpt = ['scope' => ['getdatagrid']];$/;"	v
ctrlName	.\src\Controller\AppController.php	/^        $ctrlName = $this->name;$/;"	v
gdata	.\src\Controller\AppController.php	/^        $gdata = array_merge($this->request->getData(), $options);$/;"	v
sdata	.\src\Controller\AppController.php	/^        $sdata = $this->sessionRead($this->name);$/;"	v
query	.\src\Controller\AppController.php	/^        $query = $this->$ctrlName$/;"	v
options	.\src\Controller\AppController.php	/^            $options = array_merge($options, $this->paginate);$/;"	v
rows	.\src\Controller\AppController.php	/^            $rows = $this->paginate($query, $options);$/;"	v
total	.\src\Controller\AppController.php	/^        $total = $query->count(); \/\/ttes les lignes du query.$/;"	v
hotGetGrid	.\src\Controller\AppController.php	/^    public function hotGetGrid(array $options = [])$/;"	f
options	.\src\Controller\AppController.php	/^    public function hotGetGrid(array $options = [])$/;"	v
keys	.\src\Controller\AppController.php	/^        $keys = [AppTable::ELECCLE, AppTable::SCRUTTOUR, AppTable::SCRUTDATE];$/;"	v
filtre	.\src\Controller\AppController.php	/^        $filtre = $this->modifScrutinExtractArrayScrutin($keys);$/;"	v
tmp	.\src\Controller\AppController.php	/^            $tmp = $this->stmtSelCandEgLst($filtre)->enableHydration(false)$/;"	v
url	.\src\Controller\AppController.php	/^            $url = ['controller' => $this->name, 'action' => 'index'];$/;"	v
rows	.\src\Controller\AppController.php	/^        $rows = [];$/;"	v
rows	.\src\Controller\AppController.php	/^            $rows = $tmp->toArray();$/;"	v
total	.\src\Controller\AppController.php	/^        $total = count($rows); \/\/ forcément !$/;"	v
_getAQuery4all	.\src\Controller\AppController.php	/^    private function _getAQuery4all(string $alias = "")$/;"	f
alias	.\src\Controller\AppController.php	/^    private function _getAQuery4all(string $alias = "")$/;"	v
table	.\src\Controller\AppController.php	/^        $table = TableRegistry::getTableLocator()->get($/;"	v
cbTyelCode	.\src\Controller\AppController.php	/^    public function cbTyelCode()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "typeElection";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = AppTable::TYELCODE;$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbTyclCode	.\src\Controller\AppController.php	/^    public function cbTyclCode()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "typeClassification";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = AppTable::TYCLCODE;$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbTyegCode	.\src\Controller\AppController.php	/^    public function cbTyegCode()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "typeEntiteGeo";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = AppTable::TYEGCODE;$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbVaclVale	.\src\Controller\AppController.php	/^    public function cbVaclVale()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "valeurClassifGeo";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = AppTable::VACLVALE;$/;"	v
query	.\src\Controller\AppController.php	/^        $query = $this->_getAQuery4all($alias);$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbEntgCle	.\src\Controller\AppController.php	/^    public function cbEntgCle()$/;"	f
cbIndiCle	.\src\Controller\AppController.php	/^    public function cbIndiCle($selected = null)$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "incan";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = self::INDICLE;$/;"	v
table	.\src\Controller\AppController.php	/^        $table = TableRegistry::getTableLocator()->get($/;"	v
defaut	.\src\Controller\AppController.php	/^        $defaut = $table->defautInCan();$/;"	v
query	.\src\Controller\AppController.php	/^        $query = $this->_getAQuery4all($alias);$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbQuery	.\src\Controller\AppController.php	/^     * nécessaire à la réalisation de la function cbQuery$/;"	f
_checkOptions	.\src\Controller\AppController.php	/^    private function _checkOptions(array $options = [])$/;"	f
options	.\src\Controller\AppController.php	/^    private function _checkOptions(array $options = [])$/;"	v
isOk	.\src\Controller\AppController.php	/^        $isOk = true;$/;"	v
options	.\src\Controller\AppController.php	/^            $options = array_merge($this->defaultOptions, $options);$/;"	v
msg	.\src\Controller\AppController.php	/^        $msg = [$/;"	v
message	.\src\Controller\AppController.php	/^            $message = __METHOD__ . "::" . __LINE__ . "::" .$/;"	v
valueField	.\src\Controller\AppController.php	/^        $valueField = !key_exists('valueField', $options) ? "id" :$/;"	v
textField	.\src\Controller\AppController.php	/^        $textField = !key_exists('textField', $options) ?$/;"	v
message	.\src\Controller\AppController.php	/^            $message = sprintf($msg[1], $valueField) . \\print_r($options, true);$/;"	v
id	.\src\Controller\AppController.php	/^        $id = $options[$valueField];$/;"	v
message	.\src\Controller\AppController.php	/^            $message = sprintf($msg[2], $valueField) . \\print_r($options, true);$/;"	v
message	.\src\Controller\AppController.php	/^            $message = sprintf($msg[3], $valueField) . \\print_r($options, true);$/;"	v
text	.\src\Controller\AppController.php	/^        $text = key_exists($textField, $options) ? $options[$textField] : $id;$/;"	v
text	.\src\Controller\AppController.php	/^            $text = $id;$/;"	v
options	.\src\Controller\AppController.php	/^        $options = array_merge($/;"	v
valueField	.\src\Controller\AppController.php	/^                $valueField => $id, \/\/ permet d'éviter les doublons$/;"	v
textField	.\src\Controller\AppController.php	/^                $textField => $text,$/;"	v
cbQuery	.\src\Controller\AppController.php	/^    public function cbQuery(array $options = [])$/;"	f
options	.\src\Controller\AppController.php	/^    public function cbQuery(array $options = [])$/;"	v
verif	.\src\Controller\AppController.php	/^        $verif = $this->_checkOptions($options);$/;"	v
query	.\src\Controller\AppController.php	/^        $query = $verif[self::OPTQUERY];$/;"	v
textField	.\src\Controller\AppController.php	/^        $textField = $verif[self::OPTTXTFD];$/;"	v
ns	.\src\Controller\AppController.php	/^        $ns = $this->name . "." . $verif[$textField];$/;"	v
records	.\src\Controller\AppController.php	/^        $records = $this->Query2Combobox($query, $verif);$/;"	v
jsonv	.\src\Controller\AppController.php	/^        $jsonv = $verif[self::OPTJSONP];$/;"	v
toto	.\src\Controller\AppController.php	/^        $toto = json_encode($records, $jsonv);$/;"	v
cbTyscCode	.\src\Controller\AppController.php	/^    public function cbTyscCode()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "typeScrutin";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = AppTable::TYSCCODE;$/;"	v
npoint	.\src\Controller\AppController.php	/^        $npoint = $alias . "." . $nchp;$/;"	v
valDefaut	.\src\Controller\AppController.php	/^        $valDefaut = $this->sessionCheck($npoint) ?$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbEtPolCle	.\src\Controller\AppController.php	/^    public function cbEtPolCle()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "etPol";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = "ETIQ_CLE";$/;"	v
query	.\src\Controller\AppController.php	/^        $query = $this->_getAQuery4all($alias);$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbTyrtCode	.\src\Controller\AppController.php	/^    public function cbTyrtCode()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "TRatt";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = AppTable::TYRTCODE;$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbVentCode	.\src\Controller\AppController.php	/^    public function cbVentCode()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "Venti";$/;"	v
table	.\src\Controller\AppController.php	/^        $table = TableRegistry::getTableLocator()->get($/;"	v
query	.\src\Controller\AppController.php	/^        $query = $table->find();$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbScruTour	.\src\Controller\AppController.php	/^    public function cbScruTour()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = "Scrutin";$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = AppTable::SCRUTTOUR;$/;"	v
npoint	.\src\Controller\AppController.php	/^        $npoint = $alias . "." . $nchp;$/;"	v
valDefaut	.\src\Controller\AppController.php	/^        $valDefaut = $this->sessionCheck($npoint) ?$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
cbSelect	.\src\Controller\AppController.php	/^    public function cbSelect()$/;"	f
alias	.\src\Controller\AppController.php	/^        $alias = AppTable::EGCAN;$/;"	v
nchp	.\src\Controller\AppController.php	/^        $nchp = AppTable::EGCANSEL;$/;"	v
npoint	.\src\Controller\AppController.php	/^        $npoint = $alias . "." . $nchp;$/;"	v
valDefaut	.\src\Controller\AppController.php	/^        $valDefaut = $this->sessionCheck($npoint) ?$/;"	v
query	.\src\Controller\AppController.php	/^        $query = $this->_getAQuery4all($alias);$/;"	v
options	.\src\Controller\AppController.php	/^        $options = [$/;"	v
options	.\src\Controller\AppController.php	/^     *  $options = [$/;"	v
Query2Combobox	.\src\Controller\AppController.php	/^    protected function Query2Combobox(Query $query, array $options = [])$/;"	f
options	.\src\Controller\AppController.php	/^    protected function Query2Combobox(Query $query, array $options = [])$/;"	v
records	.\src\Controller\AppController.php	/^        $records = [];$/;"	v
valueField	.\src\Controller\AppController.php	/^        $valueField = 'id';$/;"	v
valueField	.\src\Controller\AppController.php	/^            $valueField = $options['valueField'];$/;"	v
textField	.\src\Controller\AppController.php	/^        $textField = 'text';$/;"	v
textField	.\src\Controller\AppController.php	/^            $textField = $options['textField'];$/;"	v
rows	.\src\Controller\AppController.php	/^            $rows = $query->all();$/;"	v
colText	.\src\Controller\AppController.php	/^            $colText = $options[$textField];$/;"	v
colValue	.\src\Controller\AppController.php	/^            $colValue = in_array($valueField, $options) ?$/;"	v
data	.\src\Controller\AppController.php	/^              $data = array_column($rows->toArray(), $colText, $colValue);$/;"	v
data	.\src\Controller\AppController.php	/^            $data = [];$/;"	v
toto	.\src\Controller\AppController.php	/^            $toto = (array) $rows->toArray();$/;"	v
selected	.\src\Controller\AppController.php	/^            $selected = key_exists("selected", $options) ?$/;"	v
v	.\src\Controller\AppController.php	/^            $v = ['id' => "", 'text' => "Tout"];$/;"	v
key	.\src\Controller\AppController.php	/^            foreach ($data as $key => $value) {$/;"	v
v	.\src\Controller\AppController.php	/^                $v = ['id' => (string) $key, 'text' => $value];$/;"	v
isInProd	.\src\Controller\AppController.php	/^    public function isInProd()$/;"	f
compteDansUnetable	.\src\Controller\AppController.php	/^    protected function compteDansUnetable(string $nomTable, array $conds)$/;"	f
table	.\src\Controller\AppController.php	/^        $table = $this->getTableLocator()->get($/;"	v
records	.\src\Controller\AppController.php	/^        $records = $table->find()->where($conds);$/;"	v
isArrayAssoc	.\src\Controller\AppController.php	/^    public function isArrayAssoc(array $arr)$/;"	f
key	.\src\Controller\AppController.php	/^        foreach ($arr as $key => $value) {$/;"	v
isArraySequential	.\src\Controller\AppController.php	/^    public function isArraySequential(array $arr)$/;"	f
arrayFilterByKeysWanted	.\src\Controller\AppController.php	/^    public function arrayFilterByKeysWanted(array $source, array $kWanted)$/;"	f
result	.\src\Controller\AppController.php	/^        $result = [];$/;"	v
key	.\src\Controller\AppController.php	/^        foreach ($kWanted as $key => $value) {$/;"	v
arrayFilterByKeysRejected	.\src\Controller\AppController.php	/^    public function arrayFilterByKeysRejected(array $source, array $kRejected)$/;"	f
result	.\src\Controller\AppController.php	/^        $result = [];$/;"	v
key	.\src\Controller\AppController.php	/^        foreach ($source as $key => $value) {$/;"	v
isAllKeysPresentInArray	.\src\Controller\AppController.php	/^    public function isAllKeysPresentInArray(array $source, array $kWanted)$/;"	f
isAllPresent	.\src\Controller\AppController.php	/^        $isAllPresent = true;$/;"	v
key	.\src\Controller\AppController.php	/^        foreach ($kWanted as $key => $value) {$/;"	v
isAllPresent	.\src\Controller\AppController.php	/^                $isAllPresent = false;$/;"	v
isAutoRefresh	.\src\Controller\AppController.php	/^    public function isAutoRefresh()$/;"	f
getActiveDataSourceName	.\src\Controller\AppController.php	/^    protected function getActiveDataSourceName()$/;"	f
return	.\src\Controller\AppController.php	/^        $return = 'default'; \/\/#GUH20190517 \/\/ ttere par défaut$/;"	v
return	.\src\Controller\AppController.php	/^         * #GUH20190517 $return = 'ptere';   \/\/ Commenter Hors élections.$/;"	v
nameDS	.\src\Controller\AppController.php	/^        $nameDS = $this->request->getSession()->read("nameDataSource");$/;"	v
return	.\src\Controller\AppController.php	/^            $return = $nameDS;$/;"	v
getActiveConnexion	.\src\Controller\AppController.php	/^    protected function getActiveConnexion()$/;"	f
setActiveDataSourceName	.\src\Controller\AppController.php	/^    protected function setActiveDataSourceName($param = null)$/;"	f
param	.\src\Controller\AppController.php	/^            $param = 'default';$/;"	v
param	.\src\Controller\AppController.php	/^            $param = 'default';$/;"	v
lanceChoix	.\src\Controller\AppController.php	/^    public function lanceChoix($/;"	f
filtre	.\src\Controller\AppController.php	/^        array $filtre = [],$/;"	v
nFncNo	.\src\Controller\AppController.php	/^        string $nFncNo = "index"$/;"	v
nom	.\src\Controller\AppController.php	/^        $nom = $CtlCible . ".";$/;"	v
key	.\src\Controller\AppController.php	/^            foreach ($filtre as $key => $value) {$/;"	v
url	.\src\Controller\AppController.php	/^        $url = [$/;"	v
chxCtlRet	.\src\Controller\AppController.php	/^        $chxCtlRet = $nom . self::CHXCTLRET;$/;"	v
chxActOk	.\src\Controller\AppController.php	/^        $chxActOk = $nom . self::CHXACTOK;$/;"	v
chxActNo	.\src\Controller\AppController.php	/^        $chxActNo = $nom . self::CHXACTNO;$/;"	v
choix	.\src\Controller\AppController.php	/^    public function choix()$/;"	f
choix	.\src\Controller\AppController.php	/^          $choix = $this->name . "." . self::CHXCLE;$/;"	v
ctl	.\src\Controller\AppController.php	/^        $ctl = $this->name . "." . self::CHXCTLRET;$/;"	v
actok	.\src\Controller\AppController.php	/^        $actok = $this->name . "." . self::CHXACTOK;$/;"	v
actno	.\src\Controller\AppController.php	/^        $actno = $this->name . "." . self::CHXACTNO;$/;"	v
msg	.\src\Controller\AppController.php	/^          $msg = ($this->sessionCheck($ctl) ?$/;"	v
choixFait	.\src\Controller\AppController.php	/^    public function choixFait($id = null)$/;"	f
chxCtl	.\src\Controller\AppController.php	/^        $chxCtl = $this->name . "." . self::CHXCTLRET;$/;"	v
Ctl	.\src\Controller\AppController.php	/^        $Ctl = $this->sessionRead($chxCtl)[0];$/;"	v
chxAct	.\src\Controller\AppController.php	/^        $chxAct = $this->name . "." . self::CHXACTOK;$/;"	v
Act	.\src\Controller\AppController.php	/^        $Act = $this->sessionRead($chxAct)[0];$/;"	v
arr_action	.\src\Controller\AppController.php	/^        $arr_action = ['action' => $Act, $id];$/;"	v
url	.\src\Controller\AppController.php	/^        $url = ["controller" => $Ctl, 'action' => $Act, $id];$/;"	v
choixFaitNo	.\src\Controller\AppController.php	/^    public function choixFaitNo()$/;"	f
chxCtl	.\src\Controller\AppController.php	/^        $chxCtl = $this->name . "." . self::CHXCTLRET;$/;"	v
chxAct	.\src\Controller\AppController.php	/^        $chxAct = $this->name . "." . self::CHXACTNO;$/;"	v
Ctl	.\src\Controller\AppController.php	/^         *            $Ctl = $this->sessionRead($chxCtl)[0];$/;"	v
Ctl	.\src\Controller\AppController.php	/^         *             $Ctl = 'Scrut';$/;"	v
Ctl	.\src\Controller\AppController.php	/^        $Ctl = $this->sessionRead($chxCtl)[0] ?? "Scrut";$/;"	v
Act	.\src\Controller\AppController.php	/^        $Act = $this->sessionRead($chxAct)[0] ?? "index";$/;"	v
url	.\src\Controller\AppController.php	/^        $url = ["controller" => $Ctl, 'action' => $Act];$/;"	v
changeDataSource	.\src\Controller\AppController.php	/^    public function changeDataSource()$/;"	f
dsname	.\src\Controller\AppController.php	/^        $dsname = $this->isInProd() ? self::NDS_TEST : self::NDS_PROD;$/;"	v
methodeStockee	.\src\Controller\AppController.php	/^    public function methodeStockee(array &$param)$/;"	f
result	.\src\Controller\AppController.php	/^        $result = null;$/;"	v
errorContext	.\src\Controller\AppController.php	/^        $errorContext = ['scope' => ['error']];$/;"	v
msgArray	.\src\Controller\AppController.php	/^        $msgArray = [$/;"	v
logContext	.\src\Controller\AppController.php	/^        $logContext = ['scope' => ['procstock']];$/;"	v
isOk	.\src\Controller\AppController.php	/^        $isOk = ([] !== $param);$/;"	v
result	.\src\Controller\AppController.php	/^            $result = $msgArray[3];$/;"	v
isOk	.\src\Controller\AppController.php	/^        $isOk = (\\key_exists("method", $param));$/;"	v
result	.\src\Controller\AppController.php	/^            $result = $msgArray[0];$/;"	v
isOk	.\src\Controller\AppController.php	/^        $isOk = (\\key_exists("arrayParams", $param));$/;"	v
result	.\src\Controller\AppController.php	/^            $result = $msgArray[1];$/;"	v
options	.\src\Controller\AppController.php	/^            $options = ['method' => $param["method"]];$/;"	v
alias	.\src\Controller\AppController.php	/^            $alias = $param["method"];$/;"	v
method	.\src\Controller\AppController.php	/^            $method = MethodRegistry::get($alias, $options);$/;"	v
conn	.\src\Controller\AppController.php	/^            $conn = $this->getActiveConnexion();$/;"	v
request	.\src\Controller\AppController.php	/^            $request = $method->newRequest();$/;"	v
isOk	.\src\Controller\AppController.php	/^            $isOk = false;$/;"	v
result	.\src\Controller\AppController.php	/^            \/\/ $result = $exc->getTraceAsString();$/;"	v
msg	.\src\Controller\AppController.php	/^            $msg = $exc->getMessage();$/;"	v
result	.\src\Controller\AppController.php	/^            $result = $msg;$/;"	v
tag	.\src\Controller\AppController.php	/^            $tag = Chronos::now()->format("YmdHis");$/;"	v
mdbg	.\src\Controller\AppController.php	/^            $mdbg = __("Vérifier dans debug.log au Tag [{0}]", $tag);$/;"	v
arrayParams	.\src\Controller\AppController.php	/^        $arrayParams = $param["arrayParams"];$/;"	v
strParams	.\src\Controller\AppController.php	/^        $strParams = "";$/;"	v
nieme	.\src\Controller\AppController.php	/^        foreach ($arrayParams as $nieme => $arrayParam) {$/;"	v
isOk	.\src\Controller\AppController.php	/^            $isOk = is_array($arrayParam);$/;"	v
msg	.\src\Controller\AppController.php	/^                $msg = __METHOD__$/;"	v
strParams	.\src\Controller\AppController.php	/^            $strParams = "";$/;"	v
key	.\src\Controller\AppController.php	/^            foreach ($arrayParam as $key => $value) {$/;"	v
nmeth	.\src\Controller\AppController.php	/^                $nmeth = strtoupper($param["method"]);$/;"	v
toto	.\src\Controller\AppController.php	/^                $toto = $method->execute($request);$/;"	v
result	.\src\Controller\AppController.php	/^                $result = $request->result(); \/\/ Null si procédure$/;"	v
key	.\src\Controller\AppController.php	/^                foreach ($param["afterRequest"][$nieme] as $key => $value) {$/;"	v
strResult	.\src\Controller\AppController.php	/^                    $strResult = print_r($result, true);$/;"	v
inout	.\src\Controller\AppController.php	/^                        $inout = " ";$/;"	v
key	.\src\Controller\AppController.php	/^                        foreach ($param["out"][$nieme] as $key => $value) {$/;"	v
isOk	.\src\Controller\AppController.php	/^                $isOk = false;$/;"	v
tag	.\src\Controller\AppController.php	/^                $tag = Chronos::now()->format("YmdHis");$/;"	v
msg	.\src\Controller\AppController.php	/^                $msg = $exc->getMessage();$/;"	v
result	.\src\Controller\AppController.php	/^                $result = $msg;$/;"	v
mdbg	.\src\Controller\AppController.php	/^                $mdbg = __($/;"	v
sessionRead	.\src\Controller\AppController.php	/^    public function sessionRead($nom = '')$/;"	f
session	.\src\Controller\AppController.php	/^        $session = $this->request->getSession(); \/\/ accès Session$/;"	v
sessionCheck	.\src\Controller\AppController.php	/^    public function sessionCheck($nom = '')$/;"	f
session	.\src\Controller\AppController.php	/^        $session = $this->request->getSession(); \/\/ accès Session$/;"	v
sessionSauveUrlParams	.\src\Controller\AppController.php	/^    public function sessionSauveUrlParams($nom = '', $Urlparams = [])$/;"	f
Urlparams	.\src\Controller\AppController.php	/^    public function sessionSauveUrlParams($nom = '', $Urlparams = [])$/;"	v
session	.\src\Controller\AppController.php	/^            $session = $this->request->getSession(); \/\/ accès Session$/;"	v
Urlparams	.\src\Controller\AppController.php	/^                $Urlparams = [$Urlparams];$/;"	v
sessionMergeGetParams	.\src\Controller\AppController.php	/^    public function sessionMergeGetParams($nom = '')$/;"	f
sessionMergeArray	.\src\Controller\AppController.php	/^    public function sessionMergeArray(string $nom, $params = [])$/;"	f
params	.\src\Controller\AppController.php	/^    public function sessionMergeArray(string $nom, $params = [])$/;"	v
avant	.\src\Controller\AppController.php	/^        $avant = $this->sessionRead($nom);$/;"	v
sessionWrite	.\src\Controller\AppController.php	/^    public function sessionWrite($nom, $params)$/;"	f
session	.\src\Controller\AppController.php	/^        $session = $this->request->getSession(); \/\/ accès Session$/;"	v
sessionDelete	.\src\Controller\AppController.php	/^    public function sessionDelete($nom = "")$/;"	f
absence	.\src\Controller\AppController.php	/^        $absence = !$this->sessionCheck($nom);$/;"	v
session	.\src\Controller\AppController.php	/^            $session = $this->request->getSession(); \/\/ accès Session$/;"	v
absence	.\src\Controller\AppController.php	/^            $absence = $session->delete($nom);$/;"	v
modifScrutinCandidatureMemorise	.\src\Controller\AppController.php	/^    protected function modifScrutinCandidatureMemorise(array $pk)$/;"	f
kWanted	.\src\Controller\AppController.php	/^        $kWanted = [AppTable::CANDID];$/;"	v
clef	.\src\Controller\AppController.php	/^        $clef = $this->arrayFilterByKeysWanted($pk, $kWanted);$/;"	v
pk	.\src\Controller\AppController.php	/^         *         $pk = $this->modifScrutinCandidatureLireValue(AppTable::ENTCANNO);$/;"	v
modifScrutinCandidatureSupprime	.\src\Controller\AppController.php	/^    protected function modifScrutinCandidatureSupprime(array $pk)$/;"	f
clef	.\src\Controller\AppController.php	/^        $clef = $this->arrayFilterByKeysWanted($/;"	v
modifScrutinCandidatureLireValue	.\src\Controller\AppController.php	/^    protected function modifScrutinCandidatureLireValue(string $champ = "")$/;"	f
champ	.\src\Controller\AppController.php	/^    protected function modifScrutinCandidatureLireValue(string $champ = "")$/;"	v
tablo	.\src\Controller\AppController.php	/^        $tablo = self::MODIFSCRUTIN . "." . "candidature";$/;"	v
arrResult	.\src\Controller\AppController.php	/^        $arrResult = $this->sessionRead($tablo);$/;"	v
result	.\src\Controller\AppController.php	/^        $result = ("" === $champ) ? $arrResult : $arrResult[$champ];$/;"	v
modifScrutinScrutinMemorise	.\src\Controller\AppController.php	/^    protected function modifScrutinScrutinMemorise(array $pk)$/;"	f
kWanted	.\src\Controller\AppController.php	/^        $kWanted = [AppTable::ELECCLE, AppTable::SCRUTTOUR];$/;"	v
clef	.\src\Controller\AppController.php	/^        $clef = $this->arrayFilterByKeysWanted($pk, $kWanted);$/;"	v
modifScrutinScrutinSupprime	.\src\Controller\AppController.php	/^    protected function modifScrutinScrutinSupprime(array $pk)$/;"	f
clef	.\src\Controller\AppController.php	/^        $clef = $this->arrayFilterByKeysWanted($/;"	v
modifScrutinExtractArrayScrutin	.\src\Controller\AppController.php	/^    protected function modifScrutinExtractArrayScrutin(array $keys = [])$/;"	f
keys	.\src\Controller\AppController.php	/^    protected function modifScrutinExtractArrayScrutin(array $keys = [])$/;"	v
modifScrutinExtractArrayEnGeo	.\src\Controller\AppController.php	/^    protected function modifScrutinExtractArrayEnGeo(array $keys = [])$/;"	f
keys	.\src\Controller\AppController.php	/^    protected function modifScrutinExtractArrayEnGeo(array $keys = [])$/;"	v
modifScrutinMemoriseTraitement	.\src\Controller\AppController.php	/^    protected function modifScrutinMemoriseTraitement(string $traitement)$/;"	f
nom	.\src\Controller\AppController.php	/^        $nom = self::MODIFSCRUTIN;$/;"	v
modifScrutinLireTraitement	.\src\Controller\AppController.php	/^    protected function modifScrutinLireTraitement()$/;"	f
nom	.\src\Controller\AppController.php	/^        $nom = self::MODIFSCRUTIN;$/;"	v
modifScrutinEnGeoMemorise	.\src\Controller\AppController.php	/^    protected function modifScrutinEnGeoMemorise(array $pk)$/;"	f
clef	.\src\Controller\AppController.php	/^        $clef = $this->arrayFilterByKeysWanted($pk, [AppTable::EGCLE]);$/;"	v
modifScrutinEnGeoSupprime	.\src\Controller\AppController.php	/^    protected function modifScrutinEnGeoSupprime(array $pk)$/;"	f
clef	.\src\Controller\AppController.php	/^        $clef = $this->arrayFilterByKeysWanted($pk, [AppTable::EGCLE]);$/;"	v
modifScrutin1EntityMemorise	.\src\Controller\AppController.php	/^    protected function modifScrutin1EntityMemorise($pk, $ntable, $nsession)$/;"	f
table	.\src\Controller\AppController.php	/^        $table = $this->getTableLocator()->get($/;"	v
entity	.\src\Controller\AppController.php	/^        $entity = $table->find()->where($pk)->first()->toArray();$/;"	v
nom	.\src\Controller\AppController.php	/^        $nom = self::MODIFSCRUTIN;$/;"	v
modifScrutin1EntitySupprime	.\src\Controller\AppController.php	/^    protected function modifScrutin1EntitySupprime($pk, $ntable, $nsession)$/;"	f
table	.\src\Controller\AppController.php	/^        $table = $this->getTableLocator()->get($/;"	v
entity	.\src\Controller\AppController.php	/^        $entity = $table->find()->where($pk)->first()->toArray();$/;"	v
nom	.\src\Controller\AppController.php	/^        $nom = self::MODIFSCRUTIN;$/;"	v
modifScrutinLire	.\src\Controller\AppController.php	/^    private function modifScrutinLire(string $champ, string $tablo)$/;"	f
table	.\src\Controller\AppController.php	/^        $table = self::MODIFSCRUTIN . "." . $tablo;$/;"	v
arrResult	.\src\Controller\AppController.php	/^        $arrResult = $this->sessionRead($table);$/;"	v
modifScrutinScrutinLire	.\src\Controller\AppController.php	/^    protected function modifScrutinScrutinLire(string $champ = "")$/;"	f
champ	.\src\Controller\AppController.php	/^    protected function modifScrutinScrutinLire(string $champ = "")$/;"	v
tablo	.\src\Controller\AppController.php	/^          $tablo = self::MODIFSCRUTIN . "." . "scrutin";$/;"	v
arrResult	.\src\Controller\AppController.php	/^          $arrResult = $this->sessionRead($tablo);$/;"	v
result	.\src\Controller\AppController.php	/^          $result = ("" === $champ) ? $arrResult : $arrResult[$champ];$/;"	v
modifScrutinEnGeoLire	.\src\Controller\AppController.php	/^    protected function modifScrutinEnGeoLire(string $champ = "")$/;"	f
champ	.\src\Controller\AppController.php	/^    protected function modifScrutinEnGeoLire(string $champ = "")$/;"	v
isScrutinSelectedExist	.\src\Controller\AppController.php	/^    protected function isScrutinSelectedExist()$/;"	f
isEntGeoSelectedExist	.\src\Controller\AppController.php	/^    protected function isEntGeoSelectedExist()$/;"	f
getscrutinselected	.\src\Controller\AppController.php	/^    public function getscrutinselected()$/;"	f
tmp	.\src\Controller\AppController.php	/^            $tmp = $this->modifScrutinScrutinLire();$/;"	v
rows	.\src\Controller\AppController.php	/^                $rows = $tmp->toArray();$/;"	v
url	.\src\Controller\AppController.php	/^            $url = ['controller' => $this->name, 'action' => 'index'];$/;"	v
total	.\src\Controller\AppController.php	/^        $total = count($rows); \/\/ forcément !$/;"	v
getengeoselected	.\src\Controller\AppController.php	/^    public function getengeoselected()$/;"	f
url	.\src\Controller\AppController.php	/^            $url = ['controller' => $this->name, 'action' => 'index'];$/;"	v
total	.\src\Controller\AppController.php	/^        $total = 1; \/\/ forcément !$/;"	v
getRsltsScrEg	.\src\Controller\AppController.php	/^    public function getRsltsScrEg()$/;"	f
kElCle	.\src\Controller\AppController.php	/^        $kElCle = AppTable::ELECCLE;$/;"	v
kInCle	.\src\Controller\AppController.php	/^        $kInCle = AppTable::INDICLE;$/;"	v
kTour	.\src\Controller\AppController.php	/^        $kTour = AppTable::SCRUTTOUR;$/;"	v
kEgCle	.\src\Controller\AppController.php	/^        $kEgCle = AppTable::EGCLE;$/;"	v
kTyEgCode	.\src\Controller\AppController.php	/^        $kTyEgCode = AppTable::TYEGCODE;$/;"	v
vElCle	.\src\Controller\AppController.php	/^        $vElCle = $this->modifScrutinScrutinLire($kElCle);$/;"	v
vInCle	.\src\Controller\AppController.php	/^        $vInCle = $this->modifScrutinScrutinLire($kInCle);$/;"	v
vTour	.\src\Controller\AppController.php	/^        $vTour = $this->modifScrutinScrutinLire($kTour);$/;"	v
vEgCle	.\src\Controller\AppController.php	/^        $vEgCle = $this->modifScrutinEnGeoLire($kEgCle);$/;"	v
vTyEgCode	.\src\Controller\AppController.php	/^        $vTyEgCode = $this->modifScrutinEnGeoLire($kTyEgCode);$/;"	v
param	.\src\Controller\AppController.php	/^        $param = [$/;"	v
kElCle	.\src\Controller\AppController.php	/^            $kElCle => $vElCle,$/;"	v
kInCle	.\src\Controller\AppController.php	/^            $kInCle => $vInCle,$/;"	v
kTour	.\src\Controller\AppController.php	/^            $kTour => $vTour,$/;"	v
kEgCle	.\src\Controller\AppController.php	/^            $kEgCle => $vEgCle,$/;"	v
kTyEgCode	.\src\Controller\AppController.php	/^            $kTyEgCode => $vTyEgCode,$/;"	v
tmp	.\src\Controller\AppController.php	/^            $tmp = $this->selectRsltsScrEg($param);$/;"	v
rows	.\src\Controller\AppController.php	/^                $rows = $tmp->toArray();$/;"	v
opt	.\src\Controller\AppController.php	/^            $opt = ["multiply" => true];$/;"	v
key	.\src\Controller\AppController.php	/^            foreach ($rows as $key => $value) {$/;"	v
abs	.\src\Controller\AppController.php	/^                $abs = 1 - $value["RESU_SCR_VOT"] \/ $value["RESU_SCR_INS"];$/;"	v
url	.\src\Controller\AppController.php	/^            $url = ['controller' => $this->name, 'action' => 'index'];$/;"	v
total	.\src\Controller\AppController.php	/^        $total = count($rows); \/\/ forcément !$/;"	v
shortDateDdMmYyyyFromOracle	.\src\Controller\AppController.php	/^    public function shortDateDdMmYyyyFromOracle(string $dateFromOracle)$/;"	f
result	.\src\Controller\AppController.php	/^        $result = explode(" ", $dateFromOracle);$/;"	v
stmtSelCandEgLst	.\src\Controller\AppController.php	/^    protected function stmtSelCandEgLst(array $param = [])$/;"	f
param	.\src\Controller\AppController.php	/^    protected function stmtSelCandEgLst(array $param = [])$/;"	v
table	.\src\Controller\AppController.php	/^        $table = $this->getTableLocator()->get($/;"	v
stmt	.\src\Controller\AppController.php	/^        $stmt = $table->query();$/;"	v
kNeeded	.\src\Controller\AppController.php	/^        $kNeeded = [AppTable::SCRUTDATE,];$/;"	v
dateScrutin	.\src\Controller\AppController.php	/^        $dateScrutin = $this->arrayFilterByKeysWanted($param, $kNeeded);$/;"	v
kWhere	.\src\Controller\AppController.php	/^        $kWhere = [AppTable::ELECCLE, AppTable::EGCLE, AppTable::SCRUTTOUR,];$/;"	v
where	.\src\Controller\AppController.php	/^        $where = $this->arrayFilterByKeysWanted($param, $kWhere);$/;"	v
keys	.\src\Controller\AppController.php	/^        $keys = array_keys($where);$/;"	v
values	.\src\Controller\AppController.php	/^        $values = array_values($where);$/;"	v
callback	.\src\Controller\AppController.php	/^        $callback = function ($k) {$/;"	v
longKeys	.\src\Controller\AppController.php	/^        $longKeys = array_map($callback, $keys);$/;"	v
longParams	.\src\Controller\AppController.php	/^        $longParams = array_combine($longKeys, $values);$/;"	v
compteSelCandEgLst	.\src\Controller\AppController.php	/^    protected function compteSelCandEgLst($param)$/;"	f
stmt	.\src\Controller\AppController.php	/^            $stmt = $this->stmtCandEg($param);$/;"	v
result	.\src\Controller\AppController.php	/^            $result = $stmt->count();$/;"	v
result	.\src\Controller\AppController.php	/^            $result = -1;$/;"	v
getCand1Eg1Sc	.\src\Controller\AppController.php	/^    public function getCand1Eg1Sc()$/;"	f
filtre	.\src\Controller\AppController.php	/^        $filtre = [$/;"	v
tmp	.\src\Controller\AppController.php	/^            $tmp = $this->stmtSelCandEgLst($filtre)$/;"	v
url	.\src\Controller\AppController.php	/^            $url = ['controller' => $this->name, 'action' => 'index'];$/;"	v
rows	.\src\Controller\AppController.php	/^          $rows = [];$/;"	v
rows	.\src\Controller\AppController.php	/^          $rows = $tmp->toArray();$/;"	v
total	.\src\Controller\AppController.php	/^          $total = count($rows); \/\/ forcément !$/;"	v
selectAsArraySelCandEgLst	.\src\Controller\AppController.php	/^    public function selectAsArraySelCandEgLst($param)$/;"	f
kAffichage	.\src\Controller\AppController.php	/^        $kAffichage = [AppTable::SCRUTDATE];$/;"	v
kWhere	.\src\Controller\AppController.php	/^        $kWhere = [AppTable::ELECCLE, AppTable::SCRUTTOUR, AppTable::EGCLE];$/;"	v
aff	.\src\Controller\AppController.php	/^        $aff = $this->arrayFilterByKeysWanted($param, $kAffichage);$/;"	v
where	.\src\Controller\AppController.php	/^        $where = $this->arrayFilterByKeysWanted($param, $kWhere);$/;"	v
aff	.\src\Controller\AppController.php	/^            $aff = [AppTable::SCRUTDATE =>$/;"	v
cond	.\src\Controller\AppController.php	/^        $cond = \\array_merge($aff, $where);$/;"	v
stmt	.\src\Controller\AppController.php	/^        $stmt = $this->stmtRsltsScrEg($cond)->enableHydration(false);$/;"	v
stmtRsltsScrEg	.\src\Controller\AppController.php	/^    private function stmtRsltsScrEg(array $param = [])$/;"	f
param	.\src\Controller\AppController.php	/^    private function stmtRsltsScrEg(array $param = [])$/;"	v
keys	.\src\Controller\AppController.php	/^        $keys = array_keys($param);$/;"	v
values	.\src\Controller\AppController.php	/^        $values = array_values($param);$/;"	v
callback	.\src\Controller\AppController.php	/^        $callback = function ($k) {$/;"	v
longKeys	.\src\Controller\AppController.php	/^        $longKeys = array_map($callback, $keys);$/;"	v
longParams	.\src\Controller\AppController.php	/^        $longParams = array_combine($longKeys, $values);$/;"	v
table	.\src\Controller\AppController.php	/^        $table = $this->getTableLocator()->get($/;"	v
stmt	.\src\Controller\AppController.php	/^        $stmt = $table->query()$/;"	v
selectRsltsScrEg	.\src\Controller\AppController.php	/^    public function selectRsltsScrEg(array $param = [])$/;"	f
param	.\src\Controller\AppController.php	/^    public function selectRsltsScrEg(array $param = [])$/;"	v
stmt	.\src\Controller\AppController.php	/^        $stmt = $this->stmtRsltsScrEg($param);$/;"	v
stmtCandEg	.\src\Controller\AppController.php	/^    private function stmtCandEg(array $param = [])$/;"	f
param	.\src\Controller\AppController.php	/^    private function stmtCandEg(array $param = [])$/;"	v
kwanted	.\src\Controller\AppController.php	/^        $kwanted = [$/;"	v
cond	.\src\Controller\AppController.php	/^        $cond = $this->arrayFilterByKeysWanted($param, $kwanted);$/;"	v
keys	.\src\Controller\AppController.php	/^        $keys     = array_keys($cond);$/;"	v
values	.\src\Controller\AppController.php	/^        $values   = array_values($cond);$/;"	v
callback	.\src\Controller\AppController.php	/^        $callback = function ($k) {$/;"	v
longKeys	.\src\Controller\AppController.php	/^        $longKeys   = array_map($callback, $keys);$/;"	v
longParams	.\src\Controller\AppController.php	/^        $longParams = array_combine($longKeys, $values);$/;"	v
table	.\src\Controller\AppController.php	/^        $table = $this->getTableLocator()->get($/;"	v
stmt	.\src\Controller\AppController.php	/^        $stmt = $table$/;"	v
compteCandEg	.\src\Controller\AppController.php	/^    protected function compteCandEg(array $param = [])$/;"	f
param	.\src\Controller\AppController.php	/^    protected function compteCandEg(array $param = [])$/;"	v
stmt	.\src\Controller\AppController.php	/^        $stmt = $this->stmtCandEg($param);$/;"	v
selectCandEgAsArray	.\src\Controller\AppController.php	/^    public function selectCandEgAsArray($param)$/;"	f
result	.\src\Controller\AppController.php	/^        $result = $this->stmtCandEg($param)$/;"	v
selectCandEg	.\src\Controller\AppController.php	/^    public function selectCandEg(array $param = [])$/;"	f
param	.\src\Controller\AppController.php	/^    public function selectCandEg(array $param = [])$/;"	v
result	.\src\Controller\AppController.php	/^        $result = $this->stmtCandEg($param)->all();$/;"	v
getCandScrEg	.\src\Controller\AppController.php	/^    public function getCandScrEg()$/;"	f
logContext	.\src\Controller\AppController.php	/^        $logContext = ['scope' => ['queries']];$/;"	v
keys	.\src\Controller\AppController.php	/^        $keys = [$/;"	v
param	.\src\Controller\AppController.php	/^        $param = $this->modifScrutinExtractArrayScrutin($keys);$/;"	v
paramEG	.\src\Controller\AppController.php	/^        $paramEG = $this->modifScrutinExtractArrayEnGeo($keys);$/;"	v
param	.\src\Controller\AppController.php	/^        $param = array_merge($param, $paramEG);$/;"	v
tmp	.\src\Controller\AppController.php	/^            $tmp = $this->stmtCandEg($param)->enableHydration(false)->all();$/;"	v
rows	.\src\Controller\AppController.php	/^                $rows = $tmp->toArray();$/;"	v
url	.\src\Controller\AppController.php	/^            $url = ['controller' => $this->name, 'action' => 'index'];$/;"	v
total	.\src\Controller\AppController.php	/^        $total = count($rows); \/\/ forcément !$/;"	v
dd	.\src\Controller\EgcanaddController.php	/^use function dd;$/;"	f
settings	.\src\Controller\EgcanaddController.php	/^ * @method \\App\\Model\\Entity\\EgCandidature[]|ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
EgcanaddController	.\src\Controller\EgcanaddController.php	/^class EgcanaddController extends AppController$/;"	c
index	.\src\Controller\EgcanaddController.php	/^    public function index()$/;"	f
idx	.\src\Controller\EgcanaddController.php	/^        $idx = $this->name . "." . AppTable::INDICLE . "CIBLE";$/;"	v
icc	.\src\Controller\EgcanaddController.php	/^        $icc = $this->sessionRead($idx)[0];$/;"	v
getdatagrid	.\src\Controller\EgcanaddController.php	/^    public function getdatagrid(array $options = [])$/;"	f
options	.\src\Controller\EgcanaddController.php	/^    public function getdatagrid(array $options = [])$/;"	v
infoOpt	.\src\Controller\EgcanaddController.php	/^        \/* $infoOpt = ['scope' => ['getdatagrid']]; \/\/ dans getdatagrid.log *\/$/;"	v
tblCtl	.\src\Controller\EgcanaddController.php	/^        $tblCtl = AppTable::EGCAN;                                   \/\/ contrôleur des EG Candidature$/;"	v
opts	.\src\Controller\EgcanaddController.php	/^        $opts   = array_merge($options, $this->request->getData());$/;"	v
param2ProcIns1EgCand	.\src\Controller\EgcanaddController.php	/^    private function param2ProcIns1EgCand(string $param)$/;"	f
nvariable	.\src\Controller\EgcanaddController.php	/^        $nvariable    = AppTable::INDICLE . "CIBLE";$/;"	v
delimiter	.\src\Controller\EgcanaddController.php	/^        $delimiter    = ",";$/;"	v
EgCands	.\src\Controller\EgcanaddController.php	/^        $EgCands      = explode($delimiter, $param);$/;"	v
indicleCible	.\src\Controller\EgcanaddController.php	/^        $indicleCible = $this->sessionRead($this->name . "." . $nvariable)[0];$/;"	v
n	.\src\Controller\EgcanaddController.php	/^        $n = strtoupper("PROC_INS_1_EG_CAND");$/;"	v
k	.\src\Controller\EgcanaddController.php	/^        $k = ["PARINDICLE", "PAREGCLE", "PARELECCLE", "PARNUMTOUR"];$/;"	v
v	.\src\Controller\EgcanaddController.php	/^        $v = [];$/;"	v
pk	.\src\Controller\EgcanaddController.php	/^            $pk = \\explode("::", $value);  \/\/ un array [INDI_CLE,ENTG_CLE]!$/;"	v
add	.\src\Controller\EgcanaddController.php	/^    public function add(string $selection)$/;"	f
nvariable	.\src\Controller\EgcanaddController.php	/^        $nvariable    = AppTable::INDICLE . "CIBLE";$/;"	v
indicleCible	.\src\Controller\EgcanaddController.php	/^        $indicleCible = $this->sessionRead($this->name . "." . $nvariable)[0];$/;"	v
quoi	.\src\Controller\EgcanaddController.php	/^        $quoi         = "Bascule la sélection d'entité géographique candidate";$/;"	v
msg	.\src\Controller\EgcanaddController.php	/^        $msg          = [$/;"	v
param	.\src\Controller\EgcanaddController.php	/^        $param = $this->param2ProcIns1EgCand($selection);$/;"	v
result	.\src\Controller\EgcanaddController.php	/^        $result = $this->methodeStockee($param);$/;"	v
cle	.\src\Controller\EgcanaddController.php	/^            $cle       = AppTable::INDICLE;$/;"	v
clecible	.\src\Controller\EgcanaddController.php	/^            $clecible  = $cle . "CIBLE";$/;"	v
nCtlSrc	.\src\Controller\EgcanaddController.php	/^            $nCtlSrc   = $this->name;                                        \/\/* le **contrôleur Egcanadd**$/;"	v
nCtlCbl	.\src\Controller\EgcanaddController.php	/^            $nCtlCbl   = "Egcan";                                            \/\/* le **contrôleur Egcan**$/;"	v
indiceSrc	.\src\Controller\EgcanaddController.php	/^            $indiceSrc = $this->sessionRead($nCtlSrc . "." . $clecible)[0];$/;"	v
edit	.\src\Controller\EgcanaddController.php	/^    public function edit($indi_cle = null, $entg_cle = null, $select = null)$/;"	f
entg_cle	.\src\Controller\EgcanaddController.php	/^    public function edit($indi_cle = null, $entg_cle = null, $select = null)$/;"	v
msg	.\src\Controller\EgcanaddController.php	/^        $msg = ["pb" => __("Pas d'édition à ce niveau !")];$/;"	v
delete	.\src\Controller\EgcanaddController.php	/^    public function delete($indi_cle = null, $entg_cle = null)$/;"	f
entg_cle	.\src\Controller\EgcanaddController.php	/^    public function delete($indi_cle = null, $entg_cle = null)$/;"	v
msg	.\src\Controller\EgcanaddController.php	/^        $msg = ["pb" => __("Pas d'effacement à ce niveau !")];$/;"	v
dd	.\src\Controller\EgcanController.php	/^use function dd;$/;"	f
settings	.\src\Controller\EgcanController.php	/^ * @method \\App\\Model\\Entity\\EgCandidature[]|ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
EgcanController	.\src\Controller\EgcanController.php	/^class EgcanController extends AppController$/;"	c
index	.\src\Controller\EgcanController.php	/^    public function index()$/;"	f
egCandidature	.\src\Controller\EgcanController.php	/^          $egCandidature = $this->paginate($this->EgCandidature);$/;"	v
view	.\src\Controller\EgcanController.php	/^    public function view($id = null)$/;"	f
egCandidature	.\src\Controller\EgcanController.php	/^        $egCandidature = $this->EgCandidature->get($/;"	v
param2ProcIns1EgCand	.\src\Controller\EgcanController.php	/^    private function param2ProcIns1EgCand($entgCles)$/;"	f
nvariable	.\src\Controller\EgcanController.php	/^        $nvariable = AppTable::INDICLE . "CIBLE";$/;"	v
delimiter	.\src\Controller\EgcanController.php	/^        $delimiter = ",";$/;"	v
Egs	.\src\Controller\EgcanController.php	/^        $Egs = explode($delimiter, $entgCles);$/;"	v
cle	.\src\Controller\EgcanController.php	/^        $cle = AppTable::INDICLE;$/;"	v
clecible	.\src\Controller\EgcanController.php	/^        \/\/        $clecible = $cle . "CIBLE";$/;"	v
nCtlSrc	.\src\Controller\EgcanController.php	/^        $nCtlSrc = $this->name;$/;"	v
indiceCible	.\src\Controller\EgcanController.php	/^        $indiceCible = $this->sessionRead($nCtlSrc . "." . $cle)[0];$/;"	v
n	.\src\Controller\EgcanController.php	/^        $n = strtoupper("PROC_INS_1_EG_CAND");$/;"	v
k	.\src\Controller\EgcanController.php	/^        $k = [$/;"	v
v	.\src\Controller\EgcanController.php	/^        $v = [$/;"	v
add	.\src\Controller\EgcanController.php	/^    public function add($entg_cle = null)$/;"	f
CtlCible	.\src\Controller\EgcanController.php	/^            $CtlCible = self::ENGEO;$/;"	v
kTyEgCode	.\src\Controller\EgcanController.php	/^            $kTyEgCode = AppTable::TYEGCODE;$/;"	v
nCtlSrc	.\src\Controller\EgcanController.php	/^            $nCtlSrc = $this->name;$/;"	v
vTyEgCode	.\src\Controller\EgcanController.php	/^            $vTyEgCode = $this->sessionRead($nCtlSrc . "." . $kTyEgCode)[0];$/;"	v
filtre	.\src\Controller\EgcanController.php	/^            $filtre = [$kTyEgCode => $vTyEgCode];$/;"	v
nFncOK	.\src\Controller\EgcanController.php	/^            $nFncOK = __FUNCTION__;$/;"	v
quoi	.\src\Controller\EgcanController.php	/^            $quoi = "Ajout d'une entité géographique candidate";$/;"	v
msg	.\src\Controller\EgcanController.php	/^            $msg = [$/;"	v
param	.\src\Controller\EgcanController.php	/^            $param = $this->param2ProcIns1EgCand((string) $entg_cle);$/;"	v
result	.\src\Controller\EgcanController.php	/^                $result = $this->methodeStockee($param);$/;"	v
context	.\src\Controller\EgcanController.php	/^                $context = ['scope' => ['error']];$/;"	v
tag	.\src\Controller\EgcanController.php	/^                $tag = Chronos::now()->format("YmdHis");$/;"	v
cle	.\src\Controller\EgcanController.php	/^        \/\/        $cle = AppTable::INDICLE;$/;"	v
clecible	.\src\Controller\EgcanController.php	/^        \/\/        $clecible = $cle . "CIBLE";$/;"	v
nCtlSrc	.\src\Controller\EgcanController.php	/^        \/\/        $nCtlSrc = $this->name;$/;"	v
nCtlCbl	.\src\Controller\EgcanController.php	/^        \/\/        $nCtlCbl = $nCtlSrc . "add"; \/\/ le **contrôleur Egcanadd**$/;"	v
indiceCible	.\src\Controller\EgcanController.php	/^        \/\/        $indiceCible = $this->sessionRead($nCtlSrc . "." . $cle)[0];$/;"	v
getdatagrid	.\src\Controller\EgcanController.php	/^    public function getdatagrid(array $options = [])$/;"	f
options	.\src\Controller\EgcanController.php	/^    public function getdatagrid(array $options = [])$/;"	v
toggleSelect	.\src\Controller\EgcanController.php	/^    public function toggleSelect($param)$/;"	f
quoi	.\src\Controller\EgcanController.php	/^        $quoi = "Bascule la sélection d'entité géographique candidate";$/;"	v
msg	.\src\Controller\EgcanController.php	/^        $msg = [$/;"	v
param	.\src\Controller\EgcanController.php	/^        $param = $this->param2ProcUpd1EgCand($param);$/;"	v
result	.\src\Controller\EgcanController.php	/^        $result = $this->methodeStockee($param);$/;"	v
edit	.\src\Controller\EgcanController.php	/^    public function edit($indi_cle = null, $entg_cle = null, $select = null)$/;"	f
entg_cle	.\src\Controller\EgcanController.php	/^    public function edit($indi_cle = null, $entg_cle = null, $select = null)$/;"	v
glue	.\src\Controller\EgcanController.php	/^        $glue = "::";$/;"	v
pieces	.\src\Controller\EgcanController.php	/^        $pieces = [$indi_cle, $entg_cle];$/;"	v
param	.\src\Controller\EgcanController.php	/^        $param = implode($glue, $pieces);$/;"	v
param2ProcDel1EgCand	.\src\Controller\EgcanController.php	/^    private function param2ProcDel1EgCand(array $param)$/;"	f
n	.\src\Controller\EgcanController.php	/^        $n = strtoupper("PROC_DEL_1_EG_CAND");$/;"	v
k	.\src\Controller\EgcanController.php	/^        $k = ["PAREGCLE", "PARINDICLE",];$/;"	v
v	.\src\Controller\EgcanController.php	/^        $v = [];$/;"	v
param2ProcUpd1EgCand	.\src\Controller\EgcanController.php	/^    private function param2ProcUpd1EgCand(string $param)$/;"	f
delimiter	.\src\Controller\EgcanController.php	/^        $delimiter = ",";$/;"	v
EgCands	.\src\Controller\EgcanController.php	/^        $EgCands = explode($delimiter, $param);$/;"	v
n	.\src\Controller\EgcanController.php	/^        $n = strtoupper("PROC_UPD_1_EG_CAND");$/;"	v
k	.\src\Controller\EgcanController.php	/^        $k = ["PAREGCLE", "PARINDICLE", "PARSELECT",];$/;"	v
v	.\src\Controller\EgcanController.php	/^        $v = [];$/;"	v
pk	.\src\Controller\EgcanController.php	/^            $pk = \\explode("::", $value); \/\/ un array !$/;"	v
egcan	.\src\Controller\EgcanController.php	/^            $egcan = $this->Egcan->get($pk);$/;"	v
v	.\src\Controller\EgcanController.php	/^            $v = [ \/\/ dans le bon ordre !$/;"	v
delete	.\src\Controller\EgcanController.php	/^    public function delete($indi_cle = null, $entg_cle = null)$/;"	f
entg_cle	.\src\Controller\EgcanController.php	/^    public function delete($indi_cle = null, $entg_cle = null)$/;"	v
quoi	.\src\Controller\EgcanController.php	/^        $quoi = "Effacement Une Entité Géographique Candidate";$/;"	v
msg	.\src\Controller\EgcanController.php	/^        $msg = [$/;"	v
data	.\src\Controller\EgcanController.php	/^        $data = [$/;"	v
param	.\src\Controller\EgcanController.php	/^        $param = $this->param2ProcDel1EgCand($data);$/;"	v
result	.\src\Controller\EgcanController.php	/^        $result = $this->methodeStockee($param);$/;"	v
settings	.\src\Controller\EgcaninitautovillesController.php	/^ * @method \\App\\Model\\Entity\\EgCandidature[]|ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
EgcaninitautovillesController	.\src\Controller\EgcaninitautovillesController.php	/^class EgcaninitautovillesController extends AppController$/;"	c
getdatagridgauche	.\src\Controller\EgcaninitautovillesController.php	/^    public function getdatagridgauche(array $options = [])$/;"	f
options	.\src\Controller\EgcaninitautovillesController.php	/^    public function getdatagridgauche(array $options = [])$/;"	v
infoOpt	.\src\Controller\EgcaninitautovillesController.php	/^        \/* $infoOpt = ['scope' => ['getdatagrid']]; \/\/ dans getdatagrid.log *\/$/;"	v
tblCtl	.\src\Controller\EgcaninitautovillesController.php	/^        $tblCtl = AppTable::EGCAN; \/\/ contrôleur des EG Candidature$/;"	v
opts	.\src\Controller\EgcaninitautovillesController.php	/^        $opts = array_merge($options, $this->request->getData());$/;"	v
nchp	.\src\Controller\EgcaninitautovillesController.php	/^          $nchp = AppTable::EGCANSEL;$/;"	v
getdatagrid	.\src\Controller\EgcaninitautovillesController.php	/^    public function getdatagrid(array $options = [])$/;"	f
options	.\src\Controller\EgcaninitautovillesController.php	/^    public function getdatagrid(array $options = [])$/;"	v
infoOpt	.\src\Controller\EgcaninitautovillesController.php	/^        \/* $infoOpt = ['scope' => ['getdatagrid']]; \/\/ dans getdatagrid.log *\/$/;"	v
tblCtl	.\src\Controller\EgcaninitautovillesController.php	/^        $tblCtl = AppTable::EGCAN; \/\/ contrôleur des EG Candidature$/;"	v
opts	.\src\Controller\EgcaninitautovillesController.php	/^        $opts = array_merge($options, $this->request->getData());$/;"	v
nchp	.\src\Controller\EgcaninitautovillesController.php	/^          $nchp = AppTable::EGCANSEL;$/;"	v
cbIndiCle	.\src\Controller\EgcaninitautovillesController.php	/^    public function cbIndiCle($selected = null)$/;"	f
gdata	.\src\Controller\EgcaninitautovillesController.php	/^        $gdata = [self::TYELCODE => $selected];$/;"	v
cbTyegCode	.\src\Controller\EgcaninitautovillesController.php	/^    public function cbTyegCode($selected = null)$/;"	f
gdata	.\src\Controller\EgcaninitautovillesController.php	/^        $gdata = [self::INDICLE => $selected];$/;"	v
index	.\src\Controller\EgcaninitautovillesController.php	/^    public function index()$/;"	f
egCandidature	.\src\Controller\EgcaninitautovillesController.php	/^          $egCandidature = $this->paginate($this->EgCandidature);$/;"	v
view	.\src\Controller\EgcaninitautovillesController.php	/^    public function view($id = null)$/;"	f
egCandidature	.\src\Controller\EgcaninitautovillesController.php	/^        $egCandidature = $this->EgCandidature->get($/;"	v
add	.\src\Controller\EgcaninitautovillesController.php	/^    public function add()$/;"	f
egCandidature	.\src\Controller\EgcaninitautovillesController.php	/^          $egCandidature = $this->EgCandidature->newEntity();$/;"	v
egCandidature	.\src\Controller\EgcaninitautovillesController.php	/^          $egCandidature = $this->EgCandidature->patchEntity($egCandidature,$/;"	v
edit	.\src\Controller\EgcaninitautovillesController.php	/^    public function edit($id = null)$/;"	f
egCandidature	.\src\Controller\EgcaninitautovillesController.php	/^          $egCandidature = $this->EgCandidature->get($id,$/;"	v
egCandidature	.\src\Controller\EgcaninitautovillesController.php	/^          $egCandidature = $this->EgCandidature->patchEntity($egCandidature,$/;"	v
delete	.\src\Controller\EgcaninitautovillesController.php	/^    public function delete($id = null)$/;"	f
egCandidature	.\src\Controller\EgcaninitautovillesController.php	/^          $egCandidature = $this->EgCandidature->get($id);$/;"	v
param2ProcInitAutoVille	.\src\Controller\EgcaninitautovillesController.php	/^    private function param2ProcInitAutoVille(string $acible, string $isrc)$/;"	f
msg	.\src\Controller\EgcaninitautovillesController.php	/^        $msg = [$/;"	v
n	.\src\Controller\EgcaninitautovillesController.php	/^        $n = \\Strtoupper("PROC_INIT_AUTO_EG_ANNÉE");$/;"	v
k	.\src\Controller\EgcaninitautovillesController.php	/^        $k = [$/;"	v
m	.\src\Controller\EgcaninitautovillesController.php	/^            $m = $msg[0];$/;"	v
m	.\src\Controller\EgcaninitautovillesController.php	/^            $m = $msg[0];$/;"	v
m	.\src\Controller\EgcaninitautovillesController.php	/^            $m = $msg[1];$/;"	v
an0	.\src\Controller\EgcaninitautovillesController.php	/^        $an0 = substr($acible, 2);$/;"	v
rCible	.\src\Controller\EgcaninitautovillesController.php	/^        $rCible = "Natio." . $acible;$/;"	v
iCible	.\src\Controller\EgcaninitautovillesController.php	/^        $iCible = ((((int) $acible) >= 2000) ? "2" : "0") . $an0;$/;"	v
an1	.\src\Controller\EgcaninitautovillesController.php	/^        $an1 = substr($isrc, 1);$/;"	v
rSource	.\src\Controller\EgcaninitautovillesController.php	/^        $rSource = "Natio." . ((((int) $isrc) < 200) ? "19" : "20") . $an1;$/;"	v
v	.\src\Controller\EgcaninitautovillesController.php	/^        $v = [$isrc, $rSource, $iCible, $rCible,];$/;"	v
initAutoVille	.\src\Controller\EgcaninitautovillesController.php	/^    public function initAutoVille(string $year, string $isrc)$/;"	f
context	.\src\Controller\EgcaninitautovillesController.php	/^        $context = ['scope' => ['error']];$/;"	v
params	.\src\Controller\EgcaninitautovillesController.php	/^        $params = $this->param2ProcInitAutoVille($year, $isrc);$/;"	v
result	.\src\Controller\EgcaninitautovillesController.php	/^            $result = $this->methodeStockee($params);$/;"	v
tag	.\src\Controller\EgcaninitautovillesController.php	/^            $tag = Chronos::now()->format("YmdHis");$/;"	v
settings	.\src\Controller\EgcanselautovillesController.php	/^ * @method \\App\\Model\\Entity\\EgCandidature[]|ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
EgcanselautovillesController	.\src\Controller\EgcanselautovillesController.php	/^class EgcanselautovillesController extends AppController {$/;"	c
a_virer_pretraitemenrr	.\src\Controller\EgcanselautovillesController.php	/^    public function a_virer_pretraitemenrr($indicle, $tyegcode)$/;"	f
gdata	.\src\Controller\EgcanselautovillesController.php	/^        $gdata = [self::INDICLE => $indicle, self::TYEGCODE => $tyegcode];$/;"	v
getdatagridgauche	.\src\Controller\EgcanselautovillesController.php	/^    public function getdatagridgauche(array $options = [])$/;"	f
options	.\src\Controller\EgcanselautovillesController.php	/^    public function getdatagridgauche(array $options = [])$/;"	v
tblCtl	.\src\Controller\EgcanselautovillesController.php	/^        $tblCtl = AppTable::VCGEO;$/;"	v
opts	.\src\Controller\EgcanselautovillesController.php	/^        $opts = array_merge($options, $this->request->getData());$/;"	v
getdatagrid	.\src\Controller\EgcanselautovillesController.php	/^    public function getdatagrid(array $options = [])$/;"	f
options	.\src\Controller\EgcanselautovillesController.php	/^    public function getdatagrid(array $options = [])$/;"	v
infoOpt	.\src\Controller\EgcanselautovillesController.php	/^        \/* $infoOpt = ['scope' => ['getdatagrid']]; \/\/ dans getdatagrid.log *\/$/;"	v
tblCtl	.\src\Controller\EgcanselautovillesController.php	/^        $tblCtl = AppTable::EGCAN; \/\/ contrôleur des EG Candidature$/;"	v
opts	.\src\Controller\EgcanselautovillesController.php	/^        $opts = array_merge($options, $this->request->getData());$/;"	v
nchp	.\src\Controller\EgcanselautovillesController.php	/^          $nchp = AppTable::EGCANSEL;$/;"	v
cbIndiCle	.\src\Controller\EgcanselautovillesController.php	/^    public function cbIndiCle($selected = null)$/;"	f
gdata	.\src\Controller\EgcanselautovillesController.php	/^        $gdata = [self::TYELCODE => $selected];$/;"	v
cbTyegCode	.\src\Controller\EgcanselautovillesController.php	/^    public function cbTyegCode($selected = null)$/;"	f
gdata	.\src\Controller\EgcanselautovillesController.php	/^        $gdata = [self::INDICLE => $selected];$/;"	v
index	.\src\Controller\EgcanselautovillesController.php	/^    public function index()$/;"	f
egCandidature	.\src\Controller\EgcanselautovillesController.php	/^          $egCandidature = $this->paginate($this->EgCandidature);$/;"	v
view	.\src\Controller\EgcanselautovillesController.php	/^    public function view($id = null)$/;"	f
egCandidature	.\src\Controller\EgcanselautovillesController.php	/^        $egCandidature = $this->EgCandidature->get($id,$/;"	v
add	.\src\Controller\EgcanselautovillesController.php	/^    public function add()$/;"	f
egCandidature	.\src\Controller\EgcanselautovillesController.php	/^          $egCandidature = $this->EgCandidature->newEntity();$/;"	v
egCandidature	.\src\Controller\EgcanselautovillesController.php	/^          $egCandidature = $this->EgCandidature->patchEntity($egCandidature,$/;"	v
edit	.\src\Controller\EgcanselautovillesController.php	/^    public function edit($id = null)$/;"	f
egCandidature	.\src\Controller\EgcanselautovillesController.php	/^          $egCandidature = $this->EgCandidature->get($id,$/;"	v
egCandidature	.\src\Controller\EgcanselautovillesController.php	/^          $egCandidature = $this->EgCandidature->patchEntity($egCandidature,$/;"	v
delete	.\src\Controller\EgcanselautovillesController.php	/^    public function delete($id = null)$/;"	f
egCandidature	.\src\Controller\EgcanselautovillesController.php	/^          $egCandidature = $this->EgCandidature->get($id);$/;"	v
param2ProcSelectAutoVille	.\src\Controller\EgcanselautovillesController.php	/^    private function param2ProcSelectAutoVille(string $raz, string $inCan,$/;"	f
n	.\src\Controller\EgcanselautovillesController.php	/^        $n = \\Strtoupper("PROC_SEL_AUTO_EG_CAND_PAR_CLAS");$/;"	v
k	.\src\Controller\EgcanselautovillesController.php	/^        $k = ["PARRAZ", "PARINDICLE", "PARTYPEG", "PARVALCLAS",];$/;"	v
valcle	.\src\Controller\EgcanselautovillesController.php	/^        $valcle = explode(",", $select);$/;"	v
arrayParams	.\src\Controller\EgcanselautovillesController.php	/^        $arrayParams = [];$/;"	v
key	.\src\Controller\EgcanselautovillesController.php	/^        foreach ($valcle as $key => $value) {$/;"	v
v	.\src\Controller\EgcanselautovillesController.php	/^            $v = ["0", $inCan, $typEg, $value];$/;"	v
selectAutoVille	.\src\Controller\EgcanselautovillesController.php	/^    public function selectAutoVille(string $raz, string $inCan, string $typEg,$/;"	f
context	.\src\Controller\EgcanselautovillesController.php	/^        $context = ['scope' => ['error']];$/;"	v
params	.\src\Controller\EgcanselautovillesController.php	/^        $params = $this->param2ProcSelectAutoVille($raz, $inCan, $typEg, $select);$/;"	v
result	.\src\Controller\EgcanselautovillesController.php	/^            $result = $this->methodeStockee($params);$/;"	v
tag	.\src\Controller\EgcanselautovillesController.php	/^            $tag = Chronos::now()->format("YmdHis");$/;"	v
dd	.\src\Controller\ElectController.php	/^use function dd;$/;"	f
settings	.\src\Controller\ElectController.php	/^ * @method \\App\\Model\\Entity\\Election[]|ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
ElectController	.\src\Controller\ElectController.php	/^class ElectController extends AppController$/;"	c
ELEC_CLE	.\src\Controller\ElectController.php	/^    public $ELEC_CLE = "1234567"; \/\/ pour appel proc. stockée…$/;"	v
ELEC_CLE	.\src\Controller\ElectController.php	/^    public $ELEC_CLE = "1234567"; \/\/ pour appel proc. stockée…$/;"	v
index	.\src\Controller\ElectController.php	/^    public function index()$/;"	f
getdatagrid	.\src\Controller\ElectController.php	/^    public function getdatagrid(array $options = [])$/;"	f
options	.\src\Controller\ElectController.php	/^    public function getdatagrid(array $options = [])$/;"	v
view	.\src\Controller\ElectController.php	/^    public function view($id = null)$/;"	f
election	.\src\Controller\ElectController.php	/^        $election = $this->Election->get($/;"	v
setComboBoxes4ElectionEntity	.\src\Controller\ElectController.php	/^    private function setComboBoxes4ElectionEntity()$/;"	f
listIncan	.\src\Controller\ElectController.php	/^        $listIncan = $this->Elect->incan->find('list');$/;"	v
alias	.\src\Controller\ElectController.php	/^        $alias = "incan";$/;"	v
nchp	.\src\Controller\ElectController.php	/^        $nchp = $this->name . ".INDI_CLE";$/;"	v
table	.\src\Controller\ElectController.php	/^        $table = TableRegistry::getTableLocator()->get($/;"	v
defaultIncan	.\src\Controller\ElectController.php	/^        $defaultIncan = $table->defautInCan();$/;"	v
defaultIncan	.\src\Controller\ElectController.php	/^        $defaultIncan = $this->sessionCheck($nchp) ?$/;"	v
cleTratt	.\src\Controller\ElectController.php	/^        $cleTratt = $this->name . "." . "TYRT_CODE";$/;"	v
listTratt	.\src\Controller\ElectController.php	/^        $listTratt = $this->Elect->Tratt->find('list');$/;"	v
arrayTratt	.\src\Controller\ElectController.php	/^        $arrayTratt = $listTratt->toArray();$/;"	v
defaultTratt	.\src\Controller\ElectController.php	/^        $defaultTratt = $this->sessionCheck($cleTratt) ?$/;"	v
alias	.\src\Controller\ElectController.php	/^        $alias = "typeElection";$/;"	v
table	.\src\Controller\ElectController.php	/^        $table = TableRegistry::getTableLocator()->get($/;"	v
query	.\src\Controller\ElectController.php	/^        $query = $table->find($/;"	v
results	.\src\Controller\ElectController.php	/^        $results = $query->all();$/;"	v
kv	.\src\Controller\ElectController.php	/^        $kv = array_column($results->toArray(), self::TYELCODE);$/;"	v
data	.\src\Controller\ElectController.php	/^        $data = array_combine($kv, $kv);$/;"	v
param2ProcInsElecScru	.\src\Controller\ElectController.php	/^    private function param2ProcInsElecScru(array $data)$/;"	f
n	.\src\Controller\ElectController.php	/^        $n = "PROC_INS_ELEC_SCRU";$/;"	v
k	.\src\Controller\ElectController.php	/^        $k = [ \/\/ $keys$/;"	v
v	.\src\Controller\ElectController.php	/^        $v = [ \/\/ Values$/;"	v
params	.\src\Controller\ElectController.php	/^        $params = [$/;"	v
param2ProcInsNatEgScrutin	.\src\Controller\ElectController.php	/^    private function param2ProcInsNatEgScrutin(array $data)$/;"	f
n	.\src\Controller\ElectController.php	/^        $n = "PROC_INS_NATIO_EG_SCRU";$/;"	v
k	.\src\Controller\ElectController.php	/^        $k = [ \/\/ $keys$/;"	v
v	.\src\Controller\ElectController.php	/^        $v = [ \/\/ Values$/;"	v
params	.\src\Controller\ElectController.php	/^        $params = [$/;"	v
add	.\src\Controller\ElectController.php	/^    public function add()$/;"	f
election	.\src\Controller\ElectController.php	/^        $election = $this->Elect->newEntity();$/;"	v
election	.\src\Controller\ElectController.php	/^            $election = $this->Elect->patchEntity($/;"	v
params	.\src\Controller\ElectController.php	/^            $params = $this->param2ProcInsElecScru($election->toArray());$/;"	v
result	.\src\Controller\ElectController.php	/^                $result = $this->methodeStockee($params);$/;"	v
key	.\src\Controller\ElectController.php	/^                    foreach ($result["Result"] as $key => $value) {$/;"	v
params2	.\src\Controller\ElectController.php	/^                    $params2 = $this->param2ProcInsNatEgScrutin($election->toArray());$/;"	v
result	.\src\Controller\ElectController.php	/^                        $result = $this->methodeStockee($params2);$/;"	v
key	.\src\Controller\ElectController.php	/^                        foreach ($result["Result"] as $key => $value) {$/;"	v
key	.\src\Controller\ElectController.php	/^                foreach ($result["Result"] as $key => $value) {$/;"	v
param2ProcUpdElecScru	.\src\Controller\ElectController.php	/^    private function param2ProcUpdElecScru(array $data = [])$/;"	f
data	.\src\Controller\ElectController.php	/^    private function param2ProcUpdElecScru(array $data = [])$/;"	v
n	.\src\Controller\ElectController.php	/^        $n = "PROC_UPD_ELEC_SCRU";$/;"	v
k	.\src\Controller\ElectController.php	/^        $k = [ \/\/ $keys$/;"	v
alias	.\src\Controller\ElectController.php	/^        $alias = 'scrutin';$/;"	v
table	.\src\Controller\ElectController.php	/^        $table = TableRegistry::getTableLocator()->get($/;"	v
query	.\src\Controller\ElectController.php	/^        $query = $table->find($/;"	v
records	.\src\Controller\ElectController.php	/^        $records = $query->all();$/;"	v
arrayParams	.\src\Controller\ElectController.php	/^        $arrayParams = [];$/;"	v
key	.\src\Controller\ElectController.php	/^        foreach ($records as $key => $value) {$/;"	v
v	.\src\Controller\ElectController.php	/^            $v = [ \/\/ Values$/;"	v
params	.\src\Controller\ElectController.php	/^        $params = [$/;"	v
edit	.\src\Controller\ElectController.php	/^    public function edit($id = null)$/;"	f
election	.\src\Controller\ElectController.php	/^        $election = $this->Elect->get($id); \/\/, ['contain' => []]);$/;"	v
election	.\src\Controller\ElectController.php	/^            $election = $this->Elect->patchEntity($/;"	v
params	.\src\Controller\ElectController.php	/^            $params = $this->param2ProcUpdElecScru($election->toArray());$/;"	v
result	.\src\Controller\ElectController.php	/^                $result = $this->methodeStockee($params);$/;"	v
key	.\src\Controller\ElectController.php	/^                    foreach ($result["Result"] as $key => $value) {$/;"	v
key	.\src\Controller\ElectController.php	/^                foreach ($result["Result"] as $key => $value) {$/;"	v
param2ProcDelElection	.\src\Controller\ElectController.php	/^    private function param2ProcDelElection(array $data)$/;"	f
n	.\src\Controller\ElectController.php	/^        $n = \\Strtoupper("PROC_DEL_ELECTION");$/;"	v
k	.\src\Controller\ElectController.php	/^        $k = ["PARELECCLE",];$/;"	v
v	.\src\Controller\ElectController.php	/^        $v = [$data[0],];$/;"	v
params	.\src\Controller\ElectController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
delete	.\src\Controller\ElectController.php	/^    public function delete($id = null)$/;"	f
result	.\src\Controller\ElectController.php	/^        $result = null;$/;"	v
election	.\src\Controller\ElectController.php	/^          $election = $this->Election->get($id);$/;"	v
params	.\src\Controller\ElectController.php	/^            $params = $this->param2ProcDelElection([$id]);$/;"	v
result	.\src\Controller\ElectController.php	/^            $result = $this->methodeStockee($params);$/;"	v
settings	.\src\Controller\EngeoController.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
EngeoController	.\src\Controller\EngeoController.php	/^class EngeoController extends AppController$/;"	c
index	.\src\Controller\EngeoController.php	/^    public function index()$/;"	f
entiteGeo	.\src\Controller\EngeoController.php	/^          $entiteGeo = $this->paginate($this->EntiteGeo);$/;"	v
view	.\src\Controller\EngeoController.php	/^    public function view($id = null)$/;"	f
entiteGeo	.\src\Controller\EngeoController.php	/^        $entiteGeo = $this->EntiteGeo->get($/;"	v
add	.\src\Controller\EngeoController.php	/^    public function add()$/;"	f
entiteGeo	.\src\Controller\EngeoController.php	/^          $entiteGeo = $this->EntiteGeo->newEntity();$/;"	v
entiteGeo	.\src\Controller\EngeoController.php	/^          $entiteGeo = $this->EntiteGeo->patchEntity($entiteGeo,$/;"	v
edit	.\src\Controller\EngeoController.php	/^    public function edit($id = null)$/;"	f
entiteGeo	.\src\Controller\EngeoController.php	/^          $entiteGeo = $this->EntiteGeo->get($id,$/;"	v
entiteGeo	.\src\Controller\EngeoController.php	/^          $entiteGeo = $this->EntiteGeo->patchEntity($entiteGeo,$/;"	v
delete	.\src\Controller\EngeoController.php	/^    public function delete($id = null)$/;"	f
entiteGeo	.\src\Controller\EngeoController.php	/^          $entiteGeo = $this->EntiteGeo->get($id);$/;"	v
settings	.\src\Controller\EntgeoscrutinController.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin[]|ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
EntgeoscrutinController	.\src\Controller\EntgeoscrutinController.php	/^class EntgeoscrutinController extends AppController {$/;"	c
kCle	.\src\Controller\EntgeoscrutinController.php	/^    var $kCle = AppTable::ELECCLE;$/;"	v
kCle	.\src\Controller\EntgeoscrutinController.php	/^    var $kCle = AppTable::ELECCLE;$/;"	v
kTour	.\src\Controller\EntgeoscrutinController.php	/^    var $kTour = AppTable::SCRUTTOUR;$/;"	v
kTour	.\src\Controller\EntgeoscrutinController.php	/^    var $kTour = AppTable::SCRUTTOUR;$/;"	v
kIndice	.\src\Controller\EntgeoscrutinController.php	/^    var $kIndice = AppTable::INDICLE;$/;"	v
kIndice	.\src\Controller\EntgeoscrutinController.php	/^    var $kIndice = AppTable::INDICLE;$/;"	v
kElection	.\src\Controller\EntgeoscrutinController.php	/^    var $kElection = AppTable::SETTABELECT; \/\/'election'$/;"	v
kElection	.\src\Controller\EntgeoscrutinController.php	/^    var $kElection = AppTable::SETTABELECT; \/\/'election'$/;"	v
getLibelleScrutin	.\src\Controller\EntgeoscrutinController.php	/^    private function getLibelleScrutin()$/;"	f
libelle	.\src\Controller\EntgeoscrutinController.php	/^        $libelle = "Impossible lire Scrutin ";$/;"	v
tyel_code	.\src\Controller\EntgeoscrutinController.php	/^            $tyel_code = $this->modifScrutinScrutinLire(AppTable::TYELCODE);$/;"	v
elec_lib	.\src\Controller\EntgeoscrutinController.php	/^            $elec_lib = $this->modifScrutinScrutinLire(AppTable::ELECLIB);$/;"	v
tysc_code	.\src\Controller\EntgeoscrutinController.php	/^            $tysc_code = $this->modifScrutinScrutinLire(AppTable::TYSCCODE);$/;"	v
numTour	.\src\Controller\EntgeoscrutinController.php	/^            $numTour = $this->modifScrutinScrutinLire(AppTable::SCRUTTOUR);$/;"	v
lscrutin	.\src\Controller\EntgeoscrutinController.php	/^            $lscrutin = '%s %s %s - Tour : %s';$/;"	v
libelle	.\src\Controller\EntgeoscrutinController.php	/^            $libelle = sprintf($/;"	v
index	.\src\Controller\EntgeoscrutinController.php	/^    public function index()$/;"	f
libelle	.\src\Controller\EntgeoscrutinController.php	/^        $libelle = $this->getLibelleScrutin();$/;"	v
msg	.\src\Controller\EntgeoscrutinController.php	/^        $msg = __("Gestion Entités Géographiques \/ scrutin [{0}]", [$libelle]);$/;"	v
entGeoScrutin	.\src\Controller\EntgeoscrutinController.php	/^          $entGeoScrutin = $this->paginate($this->EntGeoScrutin);$/;"	v
getdatagrid	.\src\Controller\EntgeoscrutinController.php	/^    public function getdatagrid(array $options = [])$/;"	f
options	.\src\Controller\EntgeoscrutinController.php	/^    public function getdatagrid(array $options = [])$/;"	v
view	.\src\Controller\EntgeoscrutinController.php	/^    public function view($id = null)$/;"	f
entGeoScrutin	.\src\Controller\EntgeoscrutinController.php	/^        $entGeoScrutin = $this->EntGeoScrutin->get($id,$/;"	v
param2ProcAdd1EgScru	.\src\Controller\EntgeoscrutinController.php	/^    private function param2ProcAdd1EgScru($/;"	f
indicle	.\src\Controller\EntgeoscrutinController.php	/^    $indicle = null, $entgCle = null, $elecCle = null, $numtour = null$/;"	v
n	.\src\Controller\EntgeoscrutinController.php	/^        $n = \\Strtoupper("PROC_INS_1_EG_SCRU");$/;"	v
k	.\src\Controller\EntgeoscrutinController.php	/^        $k = [$/;"	v
v	.\src\Controller\EntgeoscrutinController.php	/^        $v = [$elecCle, $entgCle, $indicle, $numtour];$/;"	v
arrayParams	.\src\Controller\EntgeoscrutinController.php	/^        $arrayParams = [array_combine($k, $v)];$/;"	v
param2ProcInsRappels	.\src\Controller\EntgeoscrutinController.php	/^    private function param2ProcInsRappels($elecCle, $typElec, $egCle, $numTour)$/;"	f
alias	.\src\Controller\EntgeoscrutinController.php	/^        $alias = "Scrutin";$/;"	v
tblScrut	.\src\Controller\EntgeoscrutinController.php	/^        $tblScrut = $this->getTableLocator()->get($alias,$/;"	v
scrutEntity	.\src\Controller\EntgeoscrutinController.php	/^        $scrutEntity = $tblScrut->get([$elecCle, $numTour]);$/;"	v
dateScru	.\src\Controller\EntgeoscrutinController.php	/^        $dateScru = $scrutEntity[AppTable::SCRUTDATE];$/;"	v
k	.\src\Controller\EntgeoscrutinController.php	/^        $k = [$/;"	v
v	.\src\Controller\EntgeoscrutinController.php	/^        $v = [$/;"	v
arrayParams	.\src\Controller\EntgeoscrutinController.php	/^        $arrayParams = [array_combine($k, $v)];$/;"	v
add	.\src\Controller\EntgeoscrutinController.php	/^    public function add($entgCle = null)$/;"	f
msg	.\src\Controller\EntgeoscrutinController.php	/^        $msg = [$/;"	v
CtlCible	.\src\Controller\EntgeoscrutinController.php	/^        $CtlCible = "Engeo";$/;"	v
filtre	.\src\Controller\EntgeoscrutinController.php	/^            $filtre = [$/;"	v
indicle	.\src\Controller\EntgeoscrutinController.php	/^                $indicle = $this->modifScrutinScrutinLire(AppTable::INDICLE);$/;"	v
elecCle	.\src\Controller\EntgeoscrutinController.php	/^                $elecCle = $this->modifScrutinScrutinLire(AppTable::ELECCLE);$/;"	v
numTour	.\src\Controller\EntgeoscrutinController.php	/^                $numTour = $this->modifScrutinScrutinLire(AppTable::SCRUTTOUR);$/;"	v
param	.\src\Controller\EntgeoscrutinController.php	/^                $param = $this->param2ProcAdd1EgScru($/;"	v
result	.\src\Controller\EntgeoscrutinController.php	/^                $result = $this->methodeStockee($param);$/;"	v
typeScrutin	.\src\Controller\EntgeoscrutinController.php	/^                $typeScrutin = $this->modifScrutinScrutinLire(AppTable::TYSCCODE);$/;"	v
pInsRap	.\src\Controller\EntgeoscrutinController.php	/^                        $pInsRap = $this->param2ProcInsRappels($/;"	v
result2	.\src\Controller\EntgeoscrutinController.php	/^                        $result2 = $this->methodeStockee($pInsRap);$/;"	v
edit	.\src\Controller\EntgeoscrutinController.php	/^    public function edit($id = null)$/;"	f
entGeoScrutin	.\src\Controller\EntgeoscrutinController.php	/^        $entGeoScrutin = $this->EntGeoScrutin->get($id,$/;"	v
entGeoScrutin	.\src\Controller\EntgeoscrutinController.php	/^            $entGeoScrutin = $this->EntGeoScrutin->patchEntity($entGeoScrutin,$/;"	v
param2ProcDel1EgScru	.\src\Controller\EntgeoscrutinController.php	/^    private function param2ProcDel1EgScru($/;"	f
indicle	.\src\Controller\EntgeoscrutinController.php	/^    $indicle = null, $entgCle = null, $elecCle = null, $numtour = null$/;"	v
n	.\src\Controller\EntgeoscrutinController.php	/^        $n = \\Strtoupper("PROC_DEL_1_EG_SCRU");$/;"	v
k	.\src\Controller\EntgeoscrutinController.php	/^        $k = [$/;"	v
v	.\src\Controller\EntgeoscrutinController.php	/^        $v = [$elecCle, $entgCle, $indicle, $numtour];$/;"	v
arrayParams	.\src\Controller\EntgeoscrutinController.php	/^        $arrayParams = [array_combine($k, $v)];$/;"	v
delete	.\src\Controller\EntgeoscrutinController.php	/^    public function delete($/;"	f
indicle	.\src\Controller\EntgeoscrutinController.php	/^    $indicle = null, $entgCle = null, $elecCle = null, $numtour = null$/;"	v
msg	.\src\Controller\EntgeoscrutinController.php	/^        $msg = [$/;"	v
param	.\src\Controller\EntgeoscrutinController.php	/^        $param = $this->param2ProcDel1EgScru($indicle, $entgCle, $elecCle,$/;"	v
result	.\src\Controller\EntgeoscrutinController.php	/^        $result = $this->methodeStockee($param);$/;"	v
ErrorController	.\src\Controller\ErrorController.php	/^class ErrorController extends AppController$/;"	c
initialize	.\src\Controller\ErrorController.php	/^    public function initialize()$/;"	f
beforeFilter	.\src\Controller\ErrorController.php	/^    public function beforeFilter(Event $event)$/;"	f
beforeRender	.\src\Controller\ErrorController.php	/^    public function beforeRender(Event $event)$/;"	f
afterFilter	.\src\Controller\ErrorController.php	/^    public function afterFilter(Event $event)$/;"	f
settings	.\src\Controller\EtPolController.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
EtPolController	.\src\Controller\EtPolController.php	/^class EtPolController extends AppController {$/;"	c
index	.\src\Controller\EtPolController.php	/^    public function index()$/;"	f
etiquettePolitique	.\src\Controller\EtPolController.php	/^      $etiquettePolitique = $this->paginate($this->EtPol);$/;"	v
view	.\src\Controller\EtPolController.php	/^    public function view($id = null)$/;"	f
etiquettePolitique	.\src\Controller\EtPolController.php	/^        $etiquettePolitique = $this->EtiquettePolitique->get($id,$/;"	v
add	.\src\Controller\EtPolController.php	/^    public function add()$/;"	f
etiquettePolitique	.\src\Controller\EtPolController.php	/^          $etiquettePolitique = $this->EtiquettePolitique->newEntity();$/;"	v
etiquettePolitique	.\src\Controller\EtPolController.php	/^          $etiquettePolitique = $this->EtiquettePolitique->patchEntity($etiquettePolitique,$/;"	v
edit	.\src\Controller\EtPolController.php	/^    public function edit($id = null)$/;"	f
etiquettePolitique	.\src\Controller\EtPolController.php	/^          $etiquettePolitique = $this->EtiquettePolitique->get($id,$/;"	v
etiquettePolitique	.\src\Controller\EtPolController.php	/^          $etiquettePolitique = $this->EtiquettePolitique->patchEntity($etiquettePolitique,$/;"	v
delete	.\src\Controller\EtPolController.php	/^    public function delete($id = null)$/;"	f
etiquettePolitique	.\src\Controller\EtPolController.php	/^          $etiquettePolitique = $this->EtiquettePolitique->get($id);$/;"	v
settings	.\src\Controller\IncanController.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature[]|ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
IncanController	.\src\Controller\IncanController.php	/^class IncanController extends AppController$/;"	c
index	.\src\Controller\IncanController.php	/^    public function index()$/;"	f
indiceCandidature	.\src\Controller\IncanController.php	/^        \/\/    $indiceCandidature = $this->paginate($this->IndCand);$/;"	v
view	.\src\Controller\IncanController.php	/^    public function view($id = null)$/;"	f
indiceCandidature	.\src\Controller\IncanController.php	/^        $indiceCandidature = $this->IndCand->get($id, ['contain' => []]);$/;"	v
add	.\src\Controller\IncanController.php	/^    public function add()$/;"	f
msgSuccess	.\src\Controller\IncanController.php	/^        $msgSuccess = __('The indice candidature has been saved.');$/;"	v
msgError	.\src\Controller\IncanController.php	/^        $msgError = __('The indice candidature could not be saved. Please, try again.');$/;"	v
table	.\src\Controller\IncanController.php	/^            $table = TableRegistry::getTableLocator()->get($/;"	v
entity	.\src\Controller\IncanController.php	/^            $entity = $table->newEntity();$/;"	v
entity	.\src\Controller\IncanController.php	/^                $entity = $table->patchEntity($entity, $this->request->getData());$/;"	v
edit	.\src\Controller\IncanController.php	/^    public function edit($id = null)$/;"	f
msgSuccess	.\src\Controller\IncanController.php	/^        $msgSuccess = __('The indice candidature has been saved.');$/;"	v
msgError	.\src\Controller\IncanController.php	/^        $msgError = __('The indice candidature could not be saved. Please, try again.');$/;"	v
table	.\src\Controller\IncanController.php	/^            $table = TableRegistry::getTableLocator()->get($/;"	v
entity	.\src\Controller\IncanController.php	/^            $entity = $table->get($id, ['contain' => []]);$/;"	v
entity	.\src\Controller\IncanController.php	/^                $entity = $table->patchEntity($entity, $this->request->getData());$/;"	v
delete	.\src\Controller\IncanController.php	/^    public function delete($id = null)$/;"	f
msgSuccess	.\src\Controller\IncanController.php	/^        $msgSuccess = __('The indice candidature has been deleted.');$/;"	v
msgError	.\src\Controller\IncanController.php	/^        $msgError = __('The indice candidature could not be deleted. Please, try again.');$/;"	v
table	.\src\Controller\IncanController.php	/^            $table = TableRegistry::getTableLocator()->get($/;"	v
entity	.\src\Controller\IncanController.php	/^            $entity = $table->get($id);$/;"	v
duplicate	.\src\Controller\IncanController.php	/^    public function duplicate($pk)$/;"	f
keys	.\src\Controller\IncanController.php	/^        $keys = ["INDI_CLE", "INDI_LIBELLE", "INDI_DATE_OUV", "INDI_DATE_FER"];$/;"	v
entity	.\src\Controller\IncanController.php	/^        $entity = $this->Incan->get($pk);$/;"	v
e2	.\src\Controller\IncanController.php	/^            $e2 = $this->Incan->get($pk + 1);$/;"	v
newEntity	.\src\Controller\IncanController.php	/^            $newEntity = $this->Incan->newEntity(); \/\/ create new record;$/;"	v
dupEntity	.\src\Controller\IncanController.php	/^            $dupEntity = $this->Incan->patchEntity($/;"	v
newEntity	.\src\Controller\IncanController.php	/^          $newEntity = $this->Incan->newEntity(); \/\/ create new record;$/;"	v
dupEntity	.\src\Controller\IncanController.php	/^          $dupEntity = $this->Incan->patchEntity($newEntity, $entity->toArray());$/;"	v
PagesController	.\src\Controller\PagesController.php	/^class PagesController extends AppController$/;"	c
display	.\src\Controller\PagesController.php	/^    public function display(...$path)$/;"	f
count	.\src\Controller\PagesController.php	/^        $count = count($path);$/;"	v
page	.\src\Controller\PagesController.php	/^        $page = $subpage = null;$/;"	v
page	.\src\Controller\PagesController.php	/^            $page = $path[0];$/;"	v
subpage	.\src\Controller\PagesController.php	/^            $subpage = $path[1];$/;"	v
settings	.\src\Controller\RegEtController.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
RegEtController	.\src\Controller\RegEtController.php	/^class RegEtController extends AppController {$/;"	c
index	.\src\Controller\RegEtController.php	/^    public function index()$/;"	f
regroupementEtiquette	.\src\Controller\RegEtController.php	/^          $regroupementEtiquette = $this->paginate($this->RegEt);$/;"	v
view	.\src\Controller\RegEtController.php	/^    public function view($id = null)$/;"	f
regroupementEtiquette	.\src\Controller\RegEtController.php	/^        $regroupementEtiquette = $this->RegroupementEtiquette->get($id,$/;"	v
add	.\src\Controller\RegEtController.php	/^    public function add()$/;"	f
regroupementEtiquette	.\src\Controller\RegEtController.php	/^          $regroupementEtiquette = $this->RegroupementEtiquette->newEntity();$/;"	v
regroupementEtiquette	.\src\Controller\RegEtController.php	/^          $regroupementEtiquette = $this->RegroupementEtiquette->patchEntity($regroupementEtiquette, $this->request->getData());$/;"	v
edit	.\src\Controller\RegEtController.php	/^    public function edit($id = null)$/;"	f
regroupementEtiquette	.\src\Controller\RegEtController.php	/^          $regroupementEtiquette = $this->RegroupementEtiquette->get($id, [$/;"	v
regroupementEtiquette	.\src\Controller\RegEtController.php	/^          $regroupementEtiquette = $this->RegroupementEtiquette->patchEntity($regroupementEtiquette, $this->request->getData());$/;"	v
delete	.\src\Controller\RegEtController.php	/^    public function delete($id = null)$/;"	f
regroupementEtiquette	.\src\Controller\RegEtController.php	/^          $regroupementEtiquette = $this->RegroupementEtiquette->get($id);$/;"	v
settings	.\src\Controller\ScrutController.php	/^ * @method  paginate($object = null, array $settings = [])$/;"	v
dd	.\src\Controller\ScrutController.php	/^use function dd;$/;"	f
settings	.\src\Controller\ScrutController.php	/^ * @method  paginate($object = null, array $settings = [])$/;"	v
ScrutController	.\src\Controller\ScrutController.php	/^class ScrutController extends AppController$/;"	c
_kodofrasoj	.\src\Controller\ScrutController.php	/^    private $_kodofrasoj = [$/;"	v
_kodofrasoj	.\src\Controller\ScrutController.php	/^    private $_kodofrasoj = [$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^    private $_koderaro = 200;$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^    private $_koderaro = 200;$/;"	v
_egIdentiquesOuCantonale	.\src\Controller\ScrutController.php	/^    private function _egIdentiquesOuCantonale()$/;"	f
egTyegCode	.\src\Controller\ScrutController.php	/^        $egTyegCode = $this->modifScrutinEnGeoLire(AppTable::TYEGCODE);$/;"	v
scTyegCode	.\src\Controller\ScrutController.php	/^        $scTyegCode = $this->modifScrutinScrutinLire(AppTable::TYEGCODE);$/;"	v
result	.\src\Controller\ScrutController.php	/^        $result     = ($egTyegCode === $scTyegCode)$/;"	v
add	.\src\Controller\ScrutController.php	/^    public function add()$/;"	f
scrutin	.\src\Controller\ScrutController.php	/^          $scrutin = $this->Scrutin->newEntity();$/;"	v
scrutin	.\src\Controller\ScrutController.php	/^          $scrutin = $this->Scrutin->patchEntity($scrutin,$/;"	v
addround	.\src\Controller\ScrutController.php	/^    public function addround($elec_cle = null, $tour = null)$/;"	f
tour	.\src\Controller\ScrutController.php	/^    public function addround($elec_cle = null, $tour = null)$/;"	v
msg	.\src\Controller\ScrutController.php	/^            $msg = __($/;"	v
msg	.\src\Controller\ScrutController.php	/^            $msg = __($/;"	v
kWanted	.\src\Controller\ScrutController.php	/^            $kWanted = [AppTable::ELECCLE, AppTable::SCRUTTOUR];$/;"	v
vWanted	.\src\Controller\ScrutController.php	/^            $vWanted = [$elec_cle, $tour];$/;"	v
pk	.\src\Controller\ScrutController.php	/^            $pk      = array_combine($kWanted, $vWanted);$/;"	v
view	.\src\Controller\ScrutController.php	/^            $view = $this->getTableLocator()->get($/;"	v
q	.\src\Controller\ScrutController.php	/^            $q = $view$/;"	v
count	.\src\Controller\ScrutController.php	/^            $count = $q->count();$/;"	v
param	.\src\Controller\ScrutController.php	/^                $param = [$/;"	v
arrayParams	.\src\Controller\ScrutController.php	/^                $arrayParams = $this->_param2FuncEnBallottage($param);$/;"	v
enBallottage	.\src\Controller\ScrutController.php	/^                $enBallottage = $this->methodeStockee($arrayParams);$/;"	v
msg	.\src\Controller\ScrutController.php	/^                    $msg = __($/;"	v
msg	.\src\Controller\ScrutController.php	/^                    $msg = __($/;"	v
msg	.\src\Controller\ScrutController.php	/^                $msg = __($/;"	v
msg	.\src\Controller\ScrutController.php	/^                $msg = __($/;"	v
addtour2	.\src\Controller\ScrutController.php	/^    public function addtour2()$/;"	f
msg205	.\src\Controller\ScrutController.php	/^        $msg205 = [$/;"	v
idx	.\src\Controller\ScrutController.php	/^        $idx = 0;$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = ($idx === 0);$/;"	v
d2	.\src\Controller\ScrutController.php	/^            $d2   = $this->getRequest()->getData(self::SCRUDATE);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^                $isOk = !empty($d2);$/;"	v
idx	.\src\Controller\ScrutController.php	/^                $idx  = 1 * !$isOk;$/;"	v
format	.\src\Controller\ScrutController.php	/^                $format = "d\/m\/Y";$/;"	v
tzn	.\src\Controller\ScrutController.php	/^                $tzn    = "Europe\/Paris";$/;"	v
dT2	.\src\Controller\ScrutController.php	/^                $dT2    = Time::createFromFormat($format, $d2);  \/\/, $tz);$/;"	v
dT1	.\src\Controller\ScrutController.php	/^                $dT1 = $this->modifScrutinScrutinLire(self::SCRUDATE);$/;"	v
dT1	.\src\Controller\ScrutController.php	/^                $dT1 = $dT1->setTime(0, 0, 0);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^                $isOk = ($dT1 < $dT2);$/;"	v
idx	.\src\Controller\ScrutController.php	/^                $idx  = 2 * !$isOk;$/;"	v
msg	.\src\Controller\ScrutController.php	/^                $msg = $msg205[$idx - 1];$/;"	v
keys	.\src\Controller\ScrutController.php	/^                $keys = [$/;"	v
data	.\src\Controller\ScrutController.php	/^                $data = $this->modifScrutinExtractArrayScrutin($keys);$/;"	v
params	.\src\Controller\ScrutController.php	/^                      $params        = $this->_param2FuncInsScrutT2($data);$/;"	v
result	.\src\Controller\ScrutController.php	/^                      $result        = $this->methodeStockee($params);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^                      $isOk          = $result["isOk"];$/;"	v
idx	.\src\Controller\ScrutController.php	/^                            $idx = count($msg205);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^                    $isOk = ($dT2->isSunday());$/;"	v
idx	.\src\Controller\ScrutController.php	/^                        $idx    = 3 * !$isOk;$/;"	v
msgDim	.\src\Controller\ScrutController.php	/^                        $msgDim = $msg205[$idx - 1];$/;"	v
msg	.\src\Controller\ScrutController.php	/^            $msg      = $isOk ? "" : $msg205[$idx - 1];$/;"	v
offset	.\src\Controller\ScrutController.php	/^            $offset   = 5 * (!in_array($idx, [0, count($msg205)]));$/;"	v
response	.\src\Controller\ScrutController.php	/^            $response = $this->response->withStatus(200 + $offset, $msg);$/;"	v
index	.\src\Controller\ScrutController.php	/^    public function index()$/;"	f
query	.\src\Controller\ScrutController.php	/^          $query = $this->Scrutin$/;"	v
scrutin	.\src\Controller\ScrutController.php	/^          \/\/ $scrutin = $this->paginate($this->Scrutin);$/;"	v
scrutin	.\src\Controller\ScrutController.php	/^          $scrutin = $this->paginate($query);$/;"	v
getdatagrid	.\src\Controller\ScrutController.php	/^    public function getdatagrid(array $options = [])$/;"	f
options	.\src\Controller\ScrutController.php	/^    public function getdatagrid(array $options = [])$/;"	v
view	.\src\Controller\ScrutController.php	/^    public function view($id = null)$/;"	f
scrutin	.\src\Controller\ScrutController.php	/^        $scrutin = $this->Scrutin->get($/;"	v
_param2FuncInsScrutT2	.\src\Controller\ScrutController.php	/^    private function _param2FuncInsScrutT2(array $data)$/;"	f
n	.\src\Controller\ScrutController.php	/^        $n = \\strtoupper("Proc_Init_Scru_T2");$/;"	v
k	.\src\Controller\ScrutController.php	/^        $k = [$/;"	v
kWanted	.\src\Controller\ScrutController.php	/^        $kWanted = [$/;"	v
filtre	.\src\Controller\ScrutController.php	/^        $filtre = $this->arrayFilterByKeysWanted($data, $kWanted);$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v = [$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
_param2FuncModEgScru	.\src\Controller\ScrutController.php	/^    private function _param2FuncModEgScru(array $data)$/;"	f
n	.\src\Controller\ScrutController.php	/^        $n = \\strtoupper("PROC_UPD_1_EG_SCRU");$/;"	v
k	.\src\Controller\ScrutController.php	/^        $k = [$/;"	v
kWanted	.\src\Controller\ScrutController.php	/^        $kWanted = [$/;"	v
filtre	.\src\Controller\ScrutController.php	/^        $filtre = $this->arrayFilterByKeysWanted($data, $kWanted);$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v = [$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
_param2FuncModResScru	.\src\Controller\ScrutController.php	/^    private function _param2FuncModResScru(array $data)$/;"	f
n	.\src\Controller\ScrutController.php	/^        $n = \\strtoupper("PROC_UPD_1_RES_SCRU");$/;"	v
k	.\src\Controller\ScrutController.php	/^        $k = [$/;"	v
kWanted	.\src\Controller\ScrutController.php	/^        $kWanted = [$/;"	v
filtre	.\src\Controller\ScrutController.php	/^        $filtre = $this->arrayFilterByKeysWanted($data, $kWanted);$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v = [$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v = [];$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
_param2FuncModResCand	.\src\Controller\ScrutController.php	/^    private function _param2FuncModResCand(array $data = [])$/;"	f
data	.\src\Controller\ScrutController.php	/^    private function _param2FuncModResCand(array $data = [])$/;"	v
n	.\src\Controller\ScrutController.php	/^        $n = \\strtoupper("PROC_UPD_1_RES_CAND");$/;"	v
k	.\src\Controller\ScrutController.php	/^        $k = [$/;"	v
kWanted	.\src\Controller\ScrutController.php	/^        $kWanted = [$/;"	v
filtre	.\src\Controller\ScrutController.php	/^        $filtre = $this->arrayFilterByKeysWanted($data, $kWanted);$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v = [];$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
_param2FuncEnBallottage	.\src\Controller\ScrutController.php	/^    private function _param2FuncEnBallottage(array $data)$/;"	f
n	.\src\Controller\ScrutController.php	/^        $n = \\strtoupper("Check_Ballottage");$/;"	v
k	.\src\Controller\ScrutController.php	/^        $k = [\/\/ $keys$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v = [\/\/ Values$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
_param2FuncCheckBallotage1Ce	.\src\Controller\ScrutController.php	/^    private function _param2FuncCheckBallotage1Ce(array $data)$/;"	f
n	.\src\Controller\ScrutController.php	/^        $n = \\strtoupper("CHECK_BALLOTTAGE_1_CE");$/;"	v
k	.\src\Controller\ScrutController.php	/^        $k = [\/\/ $keys$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v = [\/\/ Values$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
_param2FuncDeleteScrut	.\src\Controller\ScrutController.php	/^    private function _param2FuncDeleteScrut(array $data)$/;"	f
n	.\src\Controller\ScrutController.php	/^        $n = \\strtoupper("PROC_DEL_SCRUTIN");$/;"	v
k	.\src\Controller\ScrutController.php	/^        $k = [\/\/ $keys$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v = [\/\/ Values$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
_param2FuncCalCulRegle	.\src\Controller\ScrutController.php	/^    private function _param2FuncCalCulRegle(array $data = [])$/;"	f
data	.\src\Controller\ScrutController.php	/^    private function _param2FuncCalCulRegle(array $data = [])$/;"	v
n	.\src\Controller\ScrutController.php	/^        $n = \\strtoupper("PROC_REGLES");$/;"	v
k	.\src\Controller\ScrutController.php	/^        $k = [$/;"	v
kWanted	.\src\Controller\ScrutController.php	/^        $kWanted = [$/;"	v
filtre	.\src\Controller\ScrutController.php	/^        $filtre = $this->arrayFilterByKeysWanted($data, $kWanted);$/;"	v
v	.\src\Controller\ScrutController.php	/^        $v      = [];$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = ["method" => $n, "arrayParams" => [array_combine($k, $v)],];$/;"	v
_compteCandidaturesParEG	.\src\Controller\ScrutController.php	/^    private function _compteCandidaturesParEG($param)$/;"	f
result	.\src\Controller\ScrutController.php	/^        $result = -1;$/;"	v
kWanted	.\src\Controller\ScrutController.php	/^        $kWanted = [ AppTable::INDICLE, AppTable::EGCLE, AppTable::ELECCLE,$/;"	v
cond	.\src\Controller\ScrutController.php	/^        $cond = $this->arrayFilterByKeysWanted($param, $kWanted);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^        $isOk = $this->isAllKeysPresentInArray($cond, $kWanted);$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->compteDansUnetable("Candidature", $cond);$/;"	v
_compteEgScrutin	.\src\Controller\ScrutController.php	/^    private function _compteEgScrutin($param)$/;"	f
result	.\src\Controller\ScrutController.php	/^        $result = -1;$/;"	v
kWanted	.\src\Controller\ScrutController.php	/^        $kWanted = [AppTable::ELECCLE, AppTable::SCRUTTOUR,];$/;"	v
cond	.\src\Controller\ScrutController.php	/^        $cond    = $this->arrayFilterByKeysWanted($param, $kWanted);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^        $isOk    = $this->isAllKeysPresentInArray($cond, $kWanted);$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->compteDansUnetable("EntGeoScrutin", $cond);$/;"	v
_isModEgScru	.\src\Controller\ScrutController.php	/^    private function _isModEgScru($dataRCSES = [])$/;"	f
result	.\src\Controller\ScrutController.php	/^        $result = !empty($dataRCSES);  \/\/ qq chose à vérifier ?$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = (array_key_exists(self::MRSES, $dataRCSES));$/;"	v
_extDSCRU	.\src\Controller\ScrutController.php	/^    private function _extDSCRU(array $dataRCSES=[])$/;"	f
dataRCSES	.\src\Controller\ScrutController.php	/^    private function _extDSCRU(array $dataRCSES=[])$/;"	v
tablo	.\src\Controller\ScrutController.php	/^        $tablo = FabriceTools::arrayChangeKeyCaseUnicodeRecurs($/;"	v
_extDEGEO	.\src\Controller\ScrutController.php	/^    private function _extDEGEO(array $dataRCSES=[])$/;"	f
dataRCSES	.\src\Controller\ScrutController.php	/^    private function _extDEGEO(array $dataRCSES=[])$/;"	v
tablo	.\src\Controller\ScrutController.php	/^        $tablo = FabriceTools::arrayChangeKeyCaseUnicodeRecurs($/;"	v
_extModEgScru	.\src\Controller\ScrutController.php	/^    private function _extModEgScru($dataRCSES = [])$/;"	f
index	.\src\Controller\ScrutController.php	/^        $index = $this->_isModEgScru($dataRCSES) ? self:: MRSES: self:: DRSES;$/;"	v
tablo	.\src\Controller\ScrutController.php	/^        $tablo = FabriceTools::arrayChangeKeyCaseUnicodeRecurs($/;"	v
_extSommeVoixExpCandScrutin	.\src\Controller\ScrutController.php	/^    private function _extSommeVoixExpCandScrutin(array $dataRCSES=[])$/;"	f
dataRCSES	.\src\Controller\ScrutController.php	/^    private function _extSommeVoixExpCandScrutin(array $dataRCSES=[])$/;"	v
tablo	.\src\Controller\ScrutController.php	/^        $tablo = $this->_extModCandScru($dataRCSES);$/;"	v
somme	.\src\Controller\ScrutController.php	/^        $somme = 0;$/;"	v
_extModCandScru	.\src\Controller\ScrutController.php	/^    private function _extModCandScru(array $dataRCSES = [])$/;"	f
dataRCSES	.\src\Controller\ScrutController.php	/^    private function _extModCandScru(array $dataRCSES = [])$/;"	v
index	.\src\Controller\ScrutController.php	/^        \/\/ $index = $this->_isModCandScru($dataRCSES) ? self::MCSES : self::DCSES;$/;"	v
index	.\src\Controller\ScrutController.php	/^        $index = self::DCSES;$/;"	v
tablo	.\src\Controller\ScrutController.php	/^        $tablo = FabriceTools::arrayChangeKeyCaseUnicodeRecurs($/;"	v
_isModEgScruValid	.\src\Controller\ScrutController.php	/^    private function _isModEgScruValid($dataRCSES = [])$/;"	f
_koderaro	.\src\Controller\ScrutController.php	/^        $this->_koderaro = 200;$/;"	v
tablo	.\src\Controller\ScrutController.php	/^        $tablo = $this->_extModEgScru($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^        $isOk            = (count($tablo) === 1);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^        $this->_koderaro = $isOk ? 200 : 401;$/;"	v
tablo	.\src\Controller\ScrutController.php	/^        $tablo           = array_shift($tablo); \/\/ Uniquement données du scrutin$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = ($/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^            $this->_koderaro = $isOk ? 200 : 402;$/;"	v
ins	.\src\Controller\ScrutController.php	/^        $ins             = (int) $tablo[self::RS_INS];$/;"	v
vot	.\src\Controller\ScrutController.php	/^        $vot             = (int) $tablo[self::RS_VOT];$/;"	v
exp	.\src\Controller\ScrutController.php	/^        $exp             = (int) $tablo[self::RS_EXP];$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk            = (($ins >= $vot) AND ($vot >= $exp));$/;"	v
isOk0	.\src\Controller\ScrutController.php	/^            $isOk0           = (($ins * $vot * $exp) !== 0);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^            $this->_koderaro = $isOk  ? 200 : 403;$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^            $this->_koderaro = $isOk0 ? 200 : 405;$/;"	v
expEg	.\src\Controller\ScrutController.php	/^            $expEg = (int) $tablo[self::RS_EXP]; \/\/ voix exprimées dans EGCLE$/;"	v
expCan	.\src\Controller\ScrutController.php	/^            $expCan = $this->_extSommeVoixExpCandScrutin($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = ($expEg === $expCan);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^            $this->_koderaro = $isOk ? 200 : 404;$/;"	v
_cmdModEgScru	.\src\Controller\ScrutController.php	/^    private function _cmdModEgScru(array $dataRCSES)$/;"	f
params	.\src\Controller\ScrutController.php	/^        $params = $this->_extModEgScru($dataRCSES);$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = array_shift($params);$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = $this->_param2FuncModEgScru($params);$/;"	v
result	.\src\Controller\ScrutController.php	/^        $result = $this->methodeStockee($params);$/;"	v
phrase	.\src\Controller\ScrutController.php	/^            $phrase           = $result["Result"];$/;"	v
_cmdModResEgScru	.\src\Controller\ScrutController.php	/^    private function _cmdModResEgScru(array $dataRCSES)$/;"	f
params	.\src\Controller\ScrutController.php	/^        $params = $this->_extModEgScru($dataRCSES);$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = array_shift($params);$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params = $this->_param2FuncModResScru($params);$/;"	v
result	.\src\Controller\ScrutController.php	/^        $result = $this->methodeStockee($params);$/;"	v
phrase	.\src\Controller\ScrutController.php	/^            $phrase           = $result["Result"];$/;"	v
_cmdModResCandScru	.\src\Controller\ScrutController.php	/^    private function _cmdModResCandScru(array $dataRCSES)$/;"	f
params	.\src\Controller\ScrutController.php	/^        $params = $this->_extModCandScru($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^        $isOk   = true;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^        $phrase = "";$/;"	v
params	.\src\Controller\ScrutController.php	/^            \/\/ $params = array_shift($params);$/;"	v
params	.\src\Controller\ScrutController.php	/^            $params = $this->_param2FuncModResCand($cand);$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->methodeStockee($params);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = ($isOk and $result["isOk"]);$/;"	v
phrase	.\src\Controller\ScrutController.php	/^            \/\/ $phrase           = $result["Result"];$/;"	v
result	.\src\Controller\ScrutController.php	/^        $result = [];$/;"	v
_cmdCalculRegle	.\src\Controller\ScrutController.php	/^    private function _cmdCalculRegle(array $dataRCSES = [])$/;"	f
dataRCSES	.\src\Controller\ScrutController.php	/^    private function _cmdCalculRegle(array $dataRCSES = [])$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params   = $this->_extModEgScru($dataRCSES);$/;"	v
paramsEg	.\src\Controller\ScrutController.php	/^        $paramsEg = $this->_extDEGEO($dataRCSES);$/;"	v
paramsEl	.\src\Controller\ScrutController.php	/^        $paramsEl = $this->_extDSCRU($dataRCSES);$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params   = array_shift($params);$/;"	v
paramsEl	.\src\Controller\ScrutController.php	/^        $paramsEl = array_shift($paramsEl);$/;"	v
paramsEg	.\src\Controller\ScrutController.php	/^        $paramsEg = array_shift($paramsEg);$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params   = array_merge($params, $paramsEg, $paramsEl);$/;"	v
params	.\src\Controller\ScrutController.php	/^        $params   = $this->_param2FuncCalCulRegle($params);$/;"	v
result	.\src\Controller\ScrutController.php	/^        $result   = $this->methodeStockee($params);$/;"	v
phrase	.\src\Controller\ScrutController.php	/^            $phrase           = $result["Result"];$/;"	v
okClickFrmResultatScrutinLst	.\src\Controller\ScrutController.php	/^    public function okClickFrmResultatScrutinLst()$/;"	f
response	.\src\Controller\ScrutController.php	/^        $response = $this->response;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^        $phrase = "";$/;"	v
dataRCSES	.\src\Controller\ScrutController.php	/^        $dataRCSES = $this->request->getData();$/;"	v
isOk	.\src\Controller\ScrutController.php	/^        $isOk = $this->_isModEgScruValid($dataRCSES);$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->_cmdModEgScru($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = (true === $result["isOk"]);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^                $this->_koderaro = 409;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^                $phrase = $result["Result"];$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->_cmdModResEgScru($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = (true === $result["isOk"]);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^                $this->_koderaro = 409;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^                $phrase = $result["Result"];$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->_cmdModResCandScru($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = (true === $result["isOk"]);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^                $this->_koderaro = 409;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^                $phrase = $result["Result"];$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->_cmdCalculRegle($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = (true === $result["isOk"]);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^                $this->_koderaro = 409;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^                $phrase = $result["Result"];$/;"	v
MRSES	.\src\Controller\ScrutController.php	/^        \/\/ $MRSES = $this->_isModEgScruValid($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^          $isOk = !empty($MRSES);  \/\/$/;"	v
DRSES	.\src\Controller\ScrutController.php	/^          $DRSES = $dataRCSES["DRSES"];  \/\/ Dat'um'o'j$/;"	v
KRSES	.\src\Controller\ScrutController.php	/^          $KRSES = $dataRCSES["KRSES"];  \/\/ Datumoj kreitaj$/;"	v
MRSES	.\src\Controller\ScrutController.php	/^          $MRSES = $dataRCSES["MRSES"];  \/\/ Datumoj modifitaj$/;"	v
FRSES	.\src\Controller\ScrutController.php	/^          $FRSES = $dataRCSES["FRSES"];  \/\/ Datumoj forviŝitaj$/;"	v
DCSES	.\src\Controller\ScrutController.php	/^          $DCSES = $dataRCSES["DCSES"];  \/\/ Dat'um'o'j$/;"	v
KCSES	.\src\Controller\ScrutController.php	/^          $KCSES = $dataRCSES["KCSES"];  \/\/ Datumoj kreitaj$/;"	v
MCSES	.\src\Controller\ScrutController.php	/^          $MCSES = $dataRCSES["MCSES"];  \/\/ Datumoj modifitaj$/;"	v
FCSES	.\src\Controller\ScrutController.php	/^          $FCSES = $dataRCSES["FCSES"];  \/\/ Datumoj forviŝitaj$/;"	v
response	.\src\Controller\ScrutController.php	/^        $response = $this->response->withStatus($/;"	v
okClickFrmResultatScrutin	.\src\Controller\ScrutController.php	/^    public function okClickFrmResultatScrutin()$/;"	f
response	.\src\Controller\ScrutController.php	/^        $response = $this->response;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^        $phrase = "";$/;"	v
dataRCSES	.\src\Controller\ScrutController.php	/^        $dataRCSES = $this->request->getData();$/;"	v
isOk	.\src\Controller\ScrutController.php	/^        $isOk = $this->_isModEgScruValid($dataRCSES);$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->_cmdModEgScru($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = (true === $result["isOk"]);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^                $this->_koderaro = 409;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^                $phrase = $result["Result"];$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->_cmdModResEgScru($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = (true === $result["isOk"]);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^                $this->_koderaro = 409;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^                $phrase = $result["Result"];$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->_cmdModResCandScru($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = (true === $result["isOk"]);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^                $this->_koderaro = 409;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^                $phrase = $result["Result"];$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result = $this->_cmdCalculRegle($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^            $isOk = (true === $result["isOk"]);$/;"	v
_koderaro	.\src\Controller\ScrutController.php	/^                $this->_koderaro = 409;$/;"	v
phrase	.\src\Controller\ScrutController.php	/^                $phrase = $result["Result"];$/;"	v
MRSES	.\src\Controller\ScrutController.php	/^        \/\/ $MRSES = $this->_isModEgScruValid($dataRCSES);$/;"	v
isOk	.\src\Controller\ScrutController.php	/^          $isOk = !empty($MRSES);  \/\/$/;"	v
DRSES	.\src\Controller\ScrutController.php	/^          $DRSES = $dataRCSES["DRSES"];  \/\/ Dat'um'o'j$/;"	v
KRSES	.\src\Controller\ScrutController.php	/^          $KRSES = $dataRCSES["KRSES"];  \/\/ Datumoj kreitaj$/;"	v
MRSES	.\src\Controller\ScrutController.php	/^          $MRSES = $dataRCSES["MRSES"];  \/\/ Datumoj modifitaj$/;"	v
FRSES	.\src\Controller\ScrutController.php	/^          $FRSES = $dataRCSES["FRSES"];  \/\/ Datumoj forviŝitaj$/;"	v
DCSES	.\src\Controller\ScrutController.php	/^          $DCSES = $dataRCSES["DCSES"];  \/\/ Dat'um'o'j$/;"	v
KCSES	.\src\Controller\ScrutController.php	/^          $KCSES = $dataRCSES["KCSES"];  \/\/ Datumoj kreitaj$/;"	v
MCSES	.\src\Controller\ScrutController.php	/^          $MCSES = $dataRCSES["MCSES"];  \/\/ Datumoj modifitaj$/;"	v
FCSES	.\src\Controller\ScrutController.php	/^          $FCSES = $dataRCSES["FCSES"];  \/\/ Datumoj forviŝitaj$/;"	v
response	.\src\Controller\ScrutController.php	/^        $response = $this->response->withStatus($/;"	v
frmResultatScrutinLst	.\src\Controller\ScrutController.php	/^    public function frmResultatScrutinLst()$/;"	f
kElLib	.\src\Controller\ScrutController.php	/^        $kElLib    = AppTable::ELECLIB; \/\/ garder car peut être utile dans la vue$/;"	v
kElCle	.\src\Controller\ScrutController.php	/^        $kElCle    = AppTable::ELECCLE;$/;"	v
kInCle	.\src\Controller\ScrutController.php	/^        $kInCle    = AppTable::INDICLE;$/;"	v
kTour	.\src\Controller\ScrutController.php	/^        $kTour     = AppTable::SCRUTTOUR;$/;"	v
kTyScCode	.\src\Controller\ScrutController.php	/^        $kTyScCode = AppTable::TYSCCODE;$/;"	v
kTyElCode	.\src\Controller\ScrutController.php	/^        $kTyElCode = AppTable::TYELCODE; \/\/ garder car peut être utile dans la vue$/;"	v
kEgCle	.\src\Controller\ScrutController.php	/^        $kEgCle      = AppTable::EGCLE;$/;"	v
kEgCodInsee	.\src\Controller\ScrutController.php	/^        $kEgCodInsee = AppTable::EGCODINSEE; \/\/ garder peut être utile dans la vue$/;"	v
kEgDesi	.\src\Controller\ScrutController.php	/^        $kEgDesi     = AppTable::EGDESI;$/;"	v
kTyEgCode	.\src\Controller\ScrutController.php	/^        $kTyEgCode   = AppTable::TYEGCODE;$/;"	v
vTour	.\src\Controller\ScrutController.php	/^         * $vTour    = $this->modifScrutinScrutinLire($kTour);$/;"	v
vElecLib	.\src\Controller\ScrutController.php	/^         * $vElecLib = $this->modifScrutinScrutinLire($kElLib);$/;"	v
tyScru	.\src\Controller\ScrutController.php	/^         * $tyScru   = $this->modifScrutinScrutinLire($kTyScCode);$/;"	v
tyElec	.\src\Controller\ScrutController.php	/^         * $tyElec   = $this->modifScrutinScrutinLire($kTyElCode);$/;"	v
vElCle	.\src\Controller\ScrutController.php	/^        $vElCle    = $this->modifScrutinScrutinLire($kElCle);$/;"	v
vInCle	.\src\Controller\ScrutController.php	/^        $vInCle    = $this->modifScrutinScrutinLire($kInCle);$/;"	v
vTour	.\src\Controller\ScrutController.php	/^        $vTour     = $this->modifScrutinScrutinLire($kTour); \/\/ Utilisé dans vue.$/;"	v
vEgCle	.\src\Controller\ScrutController.php	/^        $vEgCle    = $this->modifScrutinEnGeoLire($kEgCle);$/;"	v
vTyEgCode	.\src\Controller\ScrutController.php	/^        $vTyEgCode = $this->modifScrutinEnGeoLire($kTyEgCode); \/\/ Utilisé dans vue.$/;"	v
vTyScCode	.\src\Controller\ScrutController.php	/^        $vTyScCode = $this->modifScrutinScrutinLire($kTyScCode);$/;"	v
vTour01	.\src\Controller\ScrutController.php	/^        $vTour01 = AppTable::SCRUTTOUR1;$/;"	v
CodeInsee	.\src\Controller\ScrutController.php	/^         * $CodeInsee = $this->modifScrutinEnGeoLire($kEgCodInsee);$/;"	v
TyEntG	.\src\Controller\ScrutController.php	/^         * $TyEntG    = $this->modifScrutinEnGeoLire($kTyEgCode);$/;"	v
EgDesi	.\src\Controller\ScrutController.php	/^         * $EgDesi    = $this->modifScrutinEnGeoLire($kEgDesi);$/;"	v
isBallotage	.\src\Controller\ScrutController.php	/^        \/\/ $isBallotage = ($vTour01 === $this->modifScrutinScrutinLire($kTour));$/;"	v
isBallotage	.\src\Controller\ScrutController.php	/^        $isBallotage = ($vTour01 === $vTour);$/;"	v
data	.\src\Controller\ScrutController.php	/^            $data = [$/;"	v
kElCle	.\src\Controller\ScrutController.php	/^                $kElCle    => $vElCle,$/;"	v
kEgCle	.\src\Controller\ScrutController.php	/^                $kEgCle    => $vEgCle,$/;"	v
kInCle	.\src\Controller\ScrutController.php	/^                $kInCle    => $vInCle,$/;"	v
kTyScCode	.\src\Controller\ScrutController.php	/^                $kTyScCode => $vTyScCode,$/;"	v
param	.\src\Controller\ScrutController.php	/^            $param       = $this->_param2FuncCheckBallotage1Ce($data);$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result      = $this->methodeStockee($param);$/;"	v
isBallotage	.\src\Controller\ScrutController.php	/^            $isBallotage = $result["isOk"] ? (bool) $result["Result"] : false;$/;"	v
resultatScrutin	.\src\Controller\ScrutController.php	/^          $resultatScrutin = $this->selectRsltsScrEg($/;"	v
kElCle	.\src\Controller\ScrutController.php	/^          $kElCle    => $vElCle,$/;"	v
kInCle	.\src\Controller\ScrutController.php	/^          $kInCle    => $vInCle,$/;"	v
kTour	.\src\Controller\ScrutController.php	/^          $kTour     => $vTour,$/;"	v
kEgCle	.\src\Controller\ScrutController.php	/^          $kEgCle    => $vEgCle,$/;"	v
kTyEgCode	.\src\Controller\ScrutController.php	/^          $kTyEgCode => $vTyEgCode,$/;"	v
frmResultatScrutin	.\src\Controller\ScrutController.php	/^    public function frmResultatScrutin()$/;"	f
kElLib	.\src\Controller\ScrutController.php	/^        $kElLib    = AppTable::ELECLIB; \/\/ garder car peut être utile dans la vue$/;"	v
kElCle	.\src\Controller\ScrutController.php	/^        $kElCle    = AppTable::ELECCLE;$/;"	v
kInCle	.\src\Controller\ScrutController.php	/^        $kInCle    = AppTable::INDICLE;$/;"	v
kTour	.\src\Controller\ScrutController.php	/^        $kTour     = AppTable::SCRUTTOUR;$/;"	v
kTyScCode	.\src\Controller\ScrutController.php	/^        $kTyScCode = AppTable::TYSCCODE;$/;"	v
kTyElCode	.\src\Controller\ScrutController.php	/^        $kTyElCode = AppTable::TYELCODE; \/\/ garder car peut être utile dans la vue$/;"	v
kEgCle	.\src\Controller\ScrutController.php	/^        $kEgCle      = AppTable::EGCLE;$/;"	v
kEgCodInsee	.\src\Controller\ScrutController.php	/^        $kEgCodInsee = AppTable::EGCODINSEE; \/\/ garder peut être utile dans la vue$/;"	v
kEgDesi	.\src\Controller\ScrutController.php	/^        $kEgDesi     = AppTable::EGDESI;$/;"	v
kTyEgCode	.\src\Controller\ScrutController.php	/^        $kTyEgCode   = AppTable::TYEGCODE;$/;"	v
vTour	.\src\Controller\ScrutController.php	/^         * $vTour    = $this->modifScrutinScrutinLire($kTour);$/;"	v
vElecLib	.\src\Controller\ScrutController.php	/^         * $vElecLib = $this->modifScrutinScrutinLire($kElLib);$/;"	v
tyScru	.\src\Controller\ScrutController.php	/^         * $tyScru   = $this->modifScrutinScrutinLire($kTyScCode);$/;"	v
tyElec	.\src\Controller\ScrutController.php	/^         * $tyElec   = $this->modifScrutinScrutinLire($kTyElCode);$/;"	v
vElCle	.\src\Controller\ScrutController.php	/^        $vElCle    = $this->modifScrutinScrutinLire($kElCle);$/;"	v
vInCle	.\src\Controller\ScrutController.php	/^        $vInCle    = $this->modifScrutinScrutinLire($kInCle);$/;"	v
vTour	.\src\Controller\ScrutController.php	/^        $vTour     = $this->modifScrutinScrutinLire($kTour); \/\/ Utilisé dans vue.$/;"	v
vEgCle	.\src\Controller\ScrutController.php	/^        $vEgCle    = $this->modifScrutinEnGeoLire($kEgCle);$/;"	v
vTyEgCode	.\src\Controller\ScrutController.php	/^        $vTyEgCode = $this->modifScrutinEnGeoLire($kTyEgCode); \/\/ Utilisé dans vue.$/;"	v
vTyScCode	.\src\Controller\ScrutController.php	/^        $vTyScCode = $this->modifScrutinScrutinLire($kTyScCode);$/;"	v
vTour01	.\src\Controller\ScrutController.php	/^        $vTour01 = AppTable::SCRUTTOUR1;$/;"	v
CodeInsee	.\src\Controller\ScrutController.php	/^         * $CodeInsee = $this->modifScrutinEnGeoLire($kEgCodInsee);$/;"	v
TyEntG	.\src\Controller\ScrutController.php	/^         * $TyEntG    = $this->modifScrutinEnGeoLire($kTyEgCode);$/;"	v
EgDesi	.\src\Controller\ScrutController.php	/^         * $EgDesi    = $this->modifScrutinEnGeoLire($kEgDesi);$/;"	v
isBallotage	.\src\Controller\ScrutController.php	/^        \/\/ $isBallotage = ($vTour01 === $this->modifScrutinScrutinLire($kTour));$/;"	v
isBallotage	.\src\Controller\ScrutController.php	/^        $isBallotage = ($vTour01 === $vTour);$/;"	v
data	.\src\Controller\ScrutController.php	/^            $data = [$/;"	v
kElCle	.\src\Controller\ScrutController.php	/^                $kElCle    => $vElCle,$/;"	v
kEgCle	.\src\Controller\ScrutController.php	/^                $kEgCle    => $vEgCle,$/;"	v
kInCle	.\src\Controller\ScrutController.php	/^                $kInCle    => $vInCle,$/;"	v
kTyScCode	.\src\Controller\ScrutController.php	/^                $kTyScCode => $vTyScCode,$/;"	v
param	.\src\Controller\ScrutController.php	/^            $param       = $this->_param2FuncCheckBallotage1Ce($data);$/;"	v
result	.\src\Controller\ScrutController.php	/^            $result      = $this->methodeStockee($param);$/;"	v
isBallotage	.\src\Controller\ScrutController.php	/^            $isBallotage = $result["isOk"] ? (bool) $result["Result"] : false;$/;"	v
resultatScrutin	.\src\Controller\ScrutController.php	/^          $resultatScrutin = $this->selectRsltsScrEg($/;"	v
kElCle	.\src\Controller\ScrutController.php	/^          $kElCle    => $vElCle,$/;"	v
kInCle	.\src\Controller\ScrutController.php	/^          $kInCle    => $vInCle,$/;"	v
kTour	.\src\Controller\ScrutController.php	/^          $kTour     => $vTour,$/;"	v
kEgCle	.\src\Controller\ScrutController.php	/^          $kEgCle    => $vEgCle,$/;"	v
kTyEgCode	.\src\Controller\ScrutController.php	/^          $kTyEgCode => $vTyEgCode,$/;"	v
ouvrirResultatScrutin	.\src\Controller\ScrutController.php	/^    public function ouvrirResultatScrutin()$/;"	f
nbEgScrutin	.\src\Controller\ScrutController.php	/^        $nbEgScrutin = $this->_compteEgScrutin($egDuScrutin);$/;"	v
edit	.\src\Controller\ScrutController.php	/^    public function edit($cleElec = null, $tour = null)$/;"	f
tour	.\src\Controller\ScrutController.php	/^    public function edit($cleElec = null, $tour = null)$/;"	v
entity	.\src\Controller\ScrutController.php	/^            $entity = $this->Scrut->get($/;"	v
data	.\src\Controller\ScrutController.php	/^                $data   = $this->request->getData();$/;"	v
entity	.\src\Controller\ScrutController.php	/^                $entity = $this->Scrut->patchEntity($entity, $data);$/;"	v
scrutin	.\src\Controller\ScrutController.php	/^         * $scrutin = $this->Scrutin->patchEntity($scrutin,$/;"	v
delete	.\src\Controller\ScrutController.php	/^    public function delete($cleElec = null, $tour = null)$/;"	f
tour	.\src\Controller\ScrutController.php	/^    public function delete($cleElec = null, $tour = null)$/;"	v
msgOk	.\src\Controller\ScrutController.php	/^        $msgOk = __($/;"	v
param	.\src\Controller\ScrutController.php	/^            $param = [$/;"	v
deleteCandEgScrutin	.\src\Controller\ScrutController.php	/^    public function deleteCandEgScrutin($candId = null)$/;"	f
pk	.\src\Controller\ScrutController.php	/^        $pk = [AppTable::CANDID => $candId,];$/;"	v
msgOk	.\src\Controller\ScrutController.php	/^        $msgOk = __($/;"	v
entity	.\src\Controller\ScrutController.php	/^              ! $entity = $this->Scrut->get([$cleElec, $tour]);$/;"	v
param	.\src\Controller\ScrutController.php	/^            $param = ["PARCANDID" => $candId,];$/;"	v
n	.\src\Controller\ScrutController.php	/^            $n = \\strtoupper("PROC_DEL_1_CANDIDATURE");$/;"	v
params	.\src\Controller\ScrutController.php	/^            $params = ["method" => $n, "arrayParams" => [$param],];$/;"	v
gestionCaracteristiques	.\src\Controller\ScrutController.php	/^    public function gestionCaracteristiques($cleElec = null, $tour = null)$/;"	f
tour	.\src\Controller\ScrutController.php	/^    public function gestionCaracteristiques($cleElec = null, $tour = null)$/;"	v
gestionCirconscriptions	.\src\Controller\ScrutController.php	/^    public function gestionCirconscriptions($cleElec = null, $tour = null)$/;"	f
tour	.\src\Controller\ScrutController.php	/^    public function gestionCirconscriptions($cleElec = null, $tour = null)$/;"	v
pk	.\src\Controller\ScrutController.php	/^        $pk = [AppTable::ELECCLE => $cleElec, AppTable::SCRUTTOUR => $tour];$/;"	v
tour	.\src\Controller\ScrutController.php	/^         * $cleELec, $tour = pk du scrutin sélectionné$/;"	v
CtlCible	.\src\Controller\ScrutController.php	/^        $CtlCible = "Entgeoscrutin";$/;"	v
gestionRappels	.\src\Controller\ScrutController.php	/^    public function gestionRappels($cleElec = null, $tour = null)$/;"	f
tour	.\src\Controller\ScrutController.php	/^    public function gestionRappels($cleElec = null, $tour = null)$/;"	v
gestionCandidatures	.\src\Controller\ScrutController.php	/^    public function gestionCandidatures($cleElec = null, $tour = null)$/;"	f
tour	.\src\Controller\ScrutController.php	/^    public function gestionCandidatures($cleElec = null, $tour = null)$/;"	v
pk	.\src\Controller\ScrutController.php	/^        $pk = [AppTable::ELECCLE => $cleElec, AppTable::SCRUTTOUR => $tour];$/;"	v
NbEgScrutin	.\src\Controller\ScrutController.php	/^        $NbEgScrutin = $this->_compteEgScrutin($pk);$/;"	v
message	.\src\Controller\ScrutController.php	/^        $message     = __($/;"	v
frmListeEgScrutin	.\src\Controller\ScrutController.php	/^    public function frmListeEgScrutin($entgCle = null)$/;"	f
kScruTour	.\src\Controller\ScrutController.php	/^        \/\/        $kScruTour = AppTable::SCRUTTOUR;$/;"	v
kTyelCode	.\src\Controller\ScrutController.php	/^        \/\/        $kTyelCode = AppTable::TYELCODE;$/;"	v
kTyscCode	.\src\Controller\ScrutController.php	/^        \/\/        $kTyscCode = AppTable::TYSCCODE;$/;"	v
filtre	.\src\Controller\ScrutController.php	/^            \/\/            $filtre = [$/;"	v
kScruTour	.\src\Controller\ScrutController.php	/^            \/\/            $kScruTour => $this->modifScrutinScrutinLire($kScruTour),$/;"	v
kTyelCode	.\src\Controller\ScrutController.php	/^            \/\/            $kTyelCode => $this->modifScrutinScrutinLire($kTyelCode),$/;"	v
kTyscCode	.\src\Controller\ScrutController.php	/^            \/\/            $kTyscCode => $this->modifScrutinScrutinLire($kTyscCode),$/;"	v
filtre	.\src\Controller\ScrutController.php	/^            $filtre = $this->modifScrutinExtractArrayScrutin($/;"	v
kEntGCle	.\src\Controller\ScrutController.php	/^            $kEntGCle = AppTable::EGCLE;$/;"	v
pkeg	.\src\Controller\ScrutController.php	/^            $pkeg     = [$kEntGCle => $entgCle];$/;"	v
vTyTraitement	.\src\Controller\ScrutController.php	/^            $vTyTraitement = $this->modifScrutinLireTraitement();$/;"	v
action	.\src\Controller\ScrutController.php	/^            $action        = "inconnue";$/;"	v
action	.\src\Controller\ScrutController.php	/^                $action = $this->_choixActionTraitementCandidature($action);$/;"	v
action	.\src\Controller\ScrutController.php	/^                $action = $this->_choixActionTraitementResultat($action);$/;"	v
m0	.\src\Controller\ScrutController.php	/^                $m0  = __("Type de traitement inconnu !");$/;"	v
msg	.\src\Controller\ScrutController.php	/^                $msg = __($m0 . " [{0}::{1}]", [$vTyTraitement, __METHOD__,]);$/;"	v
url	.\src\Controller\ScrutController.php	/^                    $url = ['controller' => $this->name, 'action' => $action,];$/;"	v
frmAjoutCandLst	.\src\Controller\ScrutController.php	/^    public function frmAjoutCandLst()$/;"	f
main_str	.\src\Controller\ScrutController.php	/^        $main_str = $this->modifScrutinScrutinLire(AppTable::TYELCODE);$/;"	v
str0	.\src\Controller\ScrutController.php	/^        $str0               = "Euro";$/;"	v
start	.\src\Controller\ScrutController.php	/^        $start              = 0;$/;"	v
length	.\src\Controller\ScrutController.php	/^        $length             = strlen($str0);$/;"	v
str1	.\src\Controller\ScrutController.php	/^        $str1               = substr($main_str, $start, $length);$/;"	v
case_insensitivity	.\src\Controller\ScrutController.php	/^        $case_insensitivity = true;$/;"	v
listeNomLibre	.\src\Controller\ScrutController.php	/^        $listeNomLibre      = (0 === substr_compare($/;"	v
frmCandidatureLst	.\src\Controller\ScrutController.php	/^    public function frmCandidatureLst()$/;"	f
filtre	.\src\Controller\ScrutController.php	/^        $filtre = $this->modifScrutinExtractArrayScrutin($/;"	v
isThereCand	.\src\Controller\ScrutController.php	/^        $isThereCand = (bool) ($this->compteSelCandEgLst($filtre) > 0);$/;"	v
btnModifResultat1Eg	.\src\Controller\ScrutController.php	/^    public function btnModifResultat1Eg($entgCle = null)$/;"	f
btnModifCandidature1Eg	.\src\Controller\ScrutController.php	/^    public function btnModifCandidature1Eg($entgCle = null)$/;"	f
_choixActionTraitementResultat	.\src\Controller\ScrutController.php	/^    private function _choixActionTraitementResultat(string $action = "inconnue")$/;"	f
action	.\src\Controller\ScrutController.php	/^    private function _choixActionTraitementResultat(string $action = "inconnue")$/;"	v
kElecCle	.\src\Controller\ScrutController.php	/^        $kElecCle  = AppTable::ELECCLE;$/;"	v
kScruTour	.\src\Controller\ScrutController.php	/^        $kScruTour = AppTable::SCRUTTOUR;$/;"	v
kIndicle	.\src\Controller\ScrutController.php	/^        $kIndicle  = AppTable::INDICLE;$/;"	v
kEntGCle	.\src\Controller\ScrutController.php	/^        $kEntGCle  = AppTable::EGCLE;$/;"	v
kTyEnCode	.\src\Controller\ScrutController.php	/^        $kTyEnCode = AppTable::TYENCODE;$/;"	v
vTyEnCode	.\src\Controller\ScrutController.php	/^        $vTyEnCode = $this->modifScrutinScrutinLire($kTyEnCode);$/;"	v
filtre	.\src\Controller\ScrutController.php	/^        $filtre    = [$/;"	v
kScruTour	.\src\Controller\ScrutController.php	/^        $kScruTour => $this->modifScrutinScrutinLire($kScruTour),$/;"	v
kElecCle	.\src\Controller\ScrutController.php	/^        $kElecCle  => $this->modifScrutinScrutinLire($kElecCle),$/;"	v
kEntGCle	.\src\Controller\ScrutController.php	/^        $kEntGCle  => $this->modifScrutinScrutinLire($kEntGCle),$/;"	v
kIndicle	.\src\Controller\ScrutController.php	/^        $kIndicle  => $this->modifScrutinScrutinLire($kIndicle),$/;"	v
nbcandEg	.\src\Controller\ScrutController.php	/^        $nbcandEg = $this->compteCandEg($filtre);$/;"	v
action	.\src\Controller\ScrutController.php	/^                $action = "frmResultatScrutin";$/;"	v
action	.\src\Controller\ScrutController.php	/^                $action = "frmResultatScrutinLst";$/;"	v
msg0	.\src\Controller\ScrutController.php	/^                $msg0 = __("Type d'entité candidate inconnu !");$/;"	v
msg	.\src\Controller\ScrutController.php	/^                $msg  = __($msg0 . " [{0}::{1}]", [$vTyEnCode, __METHOD__,]);$/;"	v
_choixActionTraitementCandidature	.\src\Controller\ScrutController.php	/^    private function _choixActionTraitementCandidature(string $action = "inconnue")$/;"	f
action	.\src\Controller\ScrutController.php	/^    private function _choixActionTraitementCandidature(string $action = "inconnue")$/;"	v
kTyEnCode	.\src\Controller\ScrutController.php	/^        $kTyEnCode = AppTable::TYENCODE;$/;"	v
vTyEnCode	.\src\Controller\ScrutController.php	/^        $vTyEnCode = $this->modifScrutinScrutinLire($kTyEnCode);$/;"	v
action	.\src\Controller\ScrutController.php	/^            $action = "frmCandidatureUni";$/;"	v
action	.\src\Controller\ScrutController.php	/^            $action = "frmCandidatureLst";$/;"	v
msg0	.\src\Controller\ScrutController.php	/^            $msg0 = __("Type inconnu d'entité candidate !");$/;"	v
msg	.\src\Controller\ScrutController.php	/^            $msg  = __($msg0 . " [{0}::{1}]", [$vTyEnCode, __METHOD__,]);$/;"	v
gestionCommentaires	.\src\Controller\ScrutController.php	/^    public function gestionCommentaires($cleElec = null, $tour = null)$/;"	f
tour	.\src\Controller\ScrutController.php	/^    public function gestionCommentaires($cleElec = null, $tour = null)$/;"	v
choixEntGeo	.\src\Controller\ScrutController.php	/^    public function choixEntGeo($entgCle = null)$/;"	f
kElecCle	.\src\Controller\ScrutController.php	/^        $kElecCle  = AppTable::ELECCLE;$/;"	v
kScruTour	.\src\Controller\ScrutController.php	/^        $kScruTour = AppTable::SCRUTTOUR;$/;"	v
kIndicle	.\src\Controller\ScrutController.php	/^        $kIndicle  = AppTable::INDICLE;$/;"	v
kEntGCle	.\src\Controller\ScrutController.php	/^        $kEntGCle  = AppTable::EGCLE;$/;"	v
kTyEgCode	.\src\Controller\ScrutController.php	/^            $kTyEgCode = AppTable::TYEGCODE;$/;"	v
vTyEgCode	.\src\Controller\ScrutController.php	/^            $vTyEgCode = $this->modifScrutinScrutinLire($kTyEgCode);$/;"	v
pkeg	.\src\Controller\ScrutController.php	/^            $pkeg = [$kEntGCle => $entgCle];$/;"	v
pk	.\src\Controller\ScrutController.php	/^            $pk = [$/;"	v
kIndicle	.\src\Controller\ScrutController.php	/^                $kIndicle  => $this->modifScrutinScrutinLire($kIndicle),$/;"	v
kEntGCle	.\src\Controller\ScrutController.php	/^                $kEntGCle  => $entgCle,$/;"	v
kElecCle	.\src\Controller\ScrutController.php	/^                $kElecCle  => $this->modifScrutinScrutinLire($kElecCle),$/;"	v
kScruTour	.\src\Controller\ScrutController.php	/^                $kScruTour => $this->modifScrutinScrutinLire($kScruTour),$/;"	v
nbCandEgSc	.\src\Controller\ScrutController.php	/^            $nbCandEgSc   = $this->_compteCandidaturesParEG($pk);$/;"	v
tyEntiteCode	.\src\Controller\ScrutController.php	/^            $tyEntiteCode = $this->modifScrutinScrutinLire(AppTable::TYENCODE);$/;"	v
action	.\src\Controller\ScrutController.php	/^            $action       = "index";$/;"	v
eg	.\src\Controller\ScrutController.php	/^                        $eg = $this->modifScrutinEnGeoLire();$/;"	v
action	.\src\Controller\ScrutController.php	/^                        $action = "frmResultatScrutin";$/;"	v
message	.\src\Controller\ScrutController.php	/^                        $message = __($/;"	v
action	.\src\Controller\ScrutController.php	/^                        $action = "frmResultatScrutinLst";$/;"	v
eg	.\src\Controller\ScrutController.php	/^                        * $eg = $this->modifScrutinEnGeoLire();$/;"	v
message	.\src\Controller\ScrutController.php	/^                            $message = __($/;"	v
message	.\src\Controller\ScrutController.php	/^                            $message = __("Ce n'est pas une Municipale.");$/;"	v
action	.\src\Controller\ScrutController.php	/^                    $action = "frmAutResultatScrutin";$/;"	v
action	.\src\Controller\ScrutController.php	/^                    $action = "frmAutResultatScrutinLst";$/;"	v
eg	.\src\Controller\ScrutController.php	/^                $eg = $this->modifScrutinEnGeoLire();$/;"	v
gestionResultats	.\src\Controller\ScrutController.php	/^    public function gestionResultats($elec_cle = null, $scru_tour = null)$/;"	f
scru_tour	.\src\Controller\ScrutController.php	/^    public function gestionResultats($elec_cle = null, $scru_tour = null)$/;"	v
kElecCle	.\src\Controller\ScrutController.php	/^        $kElecCle  = AppTable::ELECCLE;$/;"	v
kScruTour	.\src\Controller\ScrutController.php	/^        $kScruTour = AppTable::SCRUTTOUR;$/;"	v
kEntGCle	.\src\Controller\ScrutController.php	/^        $kEntGCle  = AppTable::EGCLE;$/;"	v
pkScrut	.\src\Controller\ScrutController.php	/^        $pkScrut = [$kElecCle => $elec_cle, $kScruTour => $scru_tour];$/;"	v
table	.\src\Controller\ScrutController.php	/^        $table = $this->getTableLocator()->get($/;"	v
stmt	.\src\Controller\ScrutController.php	/^        $stmt = $table->find()->where($pkScrut);$/;"	v
egScrutinCount	.\src\Controller\ScrutController.php	/^        $egScrutinCount = $stmt->count();$/;"	v
typScrutin	.\src\Controller\ScrutController.php	/^        $typScrutin = $this->modifScrutinScrutinLire(AppTable::TYSCCODE);$/;"	v
entity	.\src\Controller\ScrutController.php	/^            $entity = $stmt->first()->toArray();$/;"	v
kEntGCle	.\src\Controller\ScrutController.php	/^                    $kEntGCle => $entity[$kEntGCle]$/;"	v
hot1load	.\src\Controller\ScrutController.php	/^    public function hot1load()$/;"	f
settings	.\src\Controller\TClasController.php	/^ * @method \\App\\Model\\Entity\\TypeClassification[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TClasController	.\src\Controller\TClasController.php	/^class TClasController extends AppController {$/;"	c
index	.\src\Controller\TClasController.php	/^    public function index()$/;"	f
typeClassification	.\src\Controller\TClasController.php	/^          $typeClassification = $this->paginate($this->TypeClassification);$/;"	v
view	.\src\Controller\TClasController.php	/^    public function view($id = null)$/;"	f
typeClassification	.\src\Controller\TClasController.php	/^        $typeClassification = $this->TypeClassification->get($id,$/;"	v
add	.\src\Controller\TClasController.php	/^    public function add()$/;"	f
typeClassification	.\src\Controller\TClasController.php	/^        $typeClassification = $this->TypeClassification->newEntity();$/;"	v
typeClassification	.\src\Controller\TClasController.php	/^          $typeClassification = $this->TypeClassification->patchEntity($typeClassification,$/;"	v
edit	.\src\Controller\TClasController.php	/^    public function edit($id = null)$/;"	f
typeClassification	.\src\Controller\TClasController.php	/^          $typeClassification = $this->TypeClassification->get($id,$/;"	v
typeClassification	.\src\Controller\TClasController.php	/^          $typeClassification = $this->TypeClassification->patchEntity($typeClassification,$/;"	v
delete	.\src\Controller\TClasController.php	/^    public function delete($id = null)$/;"	f
typeClassification	.\src\Controller\TClasController.php	/^          $typeClassification = $this->TypeClassification->get($id);$/;"	v
settings	.\src\Controller\TDeciController.php	/^ * @method \\App\\Model\\Entity\\TypeDecision[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TDeciController	.\src\Controller\TDeciController.php	/^class TDeciController extends AppController {$/;"	c
index	.\src\Controller\TDeciController.php	/^    public function index()$/;"	f
typeDecision	.\src\Controller\TDeciController.php	/^          $typeDecision = $this->paginate($this->TypeDecision);$/;"	v
view	.\src\Controller\TDeciController.php	/^    public function view($id = null)$/;"	f
typeDecision	.\src\Controller\TDeciController.php	/^        $typeDecision = $this->TypeDecision->get($id,$/;"	v
add	.\src\Controller\TDeciController.php	/^    public function add()$/;"	f
typeDecision	.\src\Controller\TDeciController.php	/^          $typeDecision = $this->TypeDecision->newEntity();$/;"	v
typeDecision	.\src\Controller\TDeciController.php	/^          $typeDecision = $this->TypeDecision->patchEntity($typeDecision, $this->request->getData());$/;"	v
edit	.\src\Controller\TDeciController.php	/^    public function edit($id = null)$/;"	f
typeDecision	.\src\Controller\TDeciController.php	/^          $typeDecision = $this->TypeDecision->get($id,$/;"	v
typeDecision	.\src\Controller\TDeciController.php	/^          $typeDecision = $this->TypeDecision->patchEntity($typeDecision,$/;"	v
delete	.\src\Controller\TDeciController.php	/^    public function delete($id = null)$/;"	f
typeDecision	.\src\Controller\TDeciController.php	/^          $typeDecision = $this->TypeDecision->get($id);$/;"	v
settings	.\src\Controller\TElecController.php	/^ * @method \\App\\Model\\Entity\\TypeElection[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TElecController	.\src\Controller\TElecController.php	/^class TElecController extends AppController {$/;"	c
index	.\src\Controller\TElecController.php	/^    public function index()$/;"	f
typeElection	.\src\Controller\TElecController.php	/^          $typeElection = $this->paginate($this->TypeElection);$/;"	v
view	.\src\Controller\TElecController.php	/^    public function view($id = null)$/;"	f
typeElection	.\src\Controller\TElecController.php	/^        $typeElection = $this->TypeElection->get($id,$/;"	v
add	.\src\Controller\TElecController.php	/^    public function add()$/;"	f
typeElection	.\src\Controller\TElecController.php	/^        $typeElection = $this->Telec->newEntity();$/;"	v
typeElection	.\src\Controller\TElecController.php	/^            $typeElection = $this->Telec->patchEntity($typeElection,$/;"	v
edit	.\src\Controller\TElecController.php	/^    public function edit($id = null)$/;"	f
typeElection	.\src\Controller\TElecController.php	/^          $typeElection = $this->TypeElection->get($id, [$/;"	v
typeElection	.\src\Controller\TElecController.php	/^          $typeElection = $this->TypeElection->patchEntity($typeElection, $this->request->getData());$/;"	v
delete	.\src\Controller\TElecController.php	/^    public function delete($id = null)$/;"	f
typeElection	.\src\Controller\TElecController.php	/^          $typeElection = $this->TypeElection->get($id);$/;"	v
settings	.\src\Controller\TengeController.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TengeController	.\src\Controller\TengeController.php	/^class TengeController extends AppController {$/;"	c
index	.\src\Controller\TengeController.php	/^    public function index()$/;"	f
typeEntiteGeo	.\src\Controller\TengeController.php	/^        \/\/      $typeEntiteGeo = $this->paginate($this->TypeEntiteGeo);$/;"	v
view	.\src\Controller\TengeController.php	/^    public function view($id = null)$/;"	f
typeEntiteGeo	.\src\Controller\TengeController.php	/^        $typeEntiteGeo = $this->TypeEntiteGeo->get($id,$/;"	v
add	.\src\Controller\TengeController.php	/^    public function add()$/;"	f
typeEntiteGeo	.\src\Controller\TengeController.php	/^          $typeEntiteGeo = $this->TypeEntiteGeo->newEntity();$/;"	v
typeEntiteGeo	.\src\Controller\TengeController.php	/^          $typeEntiteGeo = $this->TypeEntiteGeo->patchEntity($typeEntiteGeo,$/;"	v
edit	.\src\Controller\TengeController.php	/^    public function edit($id = null)$/;"	f
typeEntiteGeo	.\src\Controller\TengeController.php	/^          $typeEntiteGeo = $this->TypeEntiteGeo->get($id,$/;"	v
typeEntiteGeo	.\src\Controller\TengeController.php	/^          $typeEntiteGeo = $this->TypeEntiteGeo->patchEntity($typeEntiteGeo,$/;"	v
delete	.\src\Controller\TengeController.php	/^    public function delete($id = null)$/;"	f
typeEntiteGeo	.\src\Controller\TengeController.php	/^          $typeEntiteGeo = $this->TypeEntiteGeo->get($id);$/;"	v
settings	.\src\Controller\TentiController.php	/^ * @method \\App\\Model\\Entity\\TypeEntite[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TentiController	.\src\Controller\TentiController.php	/^class TentiController extends AppController {$/;"	c
index	.\src\Controller\TentiController.php	/^    public function index()$/;"	f
typeEntite	.\src\Controller\TentiController.php	/^\/\/        $typeEntite = $this->paginate($this->TypeEntite);$/;"	v
view	.\src\Controller\TentiController.php	/^    public function view($id = null)$/;"	f
typeEntite	.\src\Controller\TentiController.php	/^        $typeEntite = $this->TypeEntite->get($id,$/;"	v
add	.\src\Controller\TentiController.php	/^    public function add()$/;"	f
typeEntite	.\src\Controller\TentiController.php	/^          $typeEntite = $this->TypeEntite->newEntity();$/;"	v
typeEntite	.\src\Controller\TentiController.php	/^          $typeEntite = $this->TypeEntite->patchEntity($typeEntite,$/;"	v
edit	.\src\Controller\TentiController.php	/^    public function edit($id = null)$/;"	f
typeEntite	.\src\Controller\TentiController.php	/^          $typeEntite = $this->TypeEntite->get($id,$/;"	v
typeEntite	.\src\Controller\TentiController.php	/^          $typeEntite = $this->TypeEntite->patchEntity($typeEntite,$/;"	v
delete	.\src\Controller\TentiController.php	/^    public function delete($id = null)$/;"	f
typeEntite	.\src\Controller\TentiController.php	/^          $typeEntite = $this->TypeEntite->get($id);$/;"	v
settings	.\src\Controller\TFoncController.php	/^ * @method \\App\\Model\\Entity\\TypeFonction[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TFoncController	.\src\Controller\TFoncController.php	/^class TFoncController extends AppController {$/;"	c
index	.\src\Controller\TFoncController.php	/^    public function index()$/;"	f
typeFonction	.\src\Controller\TFoncController.php	/^      $typeFonction = $this->paginate($this->TypeFonction);$/;"	v
view	.\src\Controller\TFoncController.php	/^    public function view($id = null)$/;"	f
typeFonction	.\src\Controller\TFoncController.php	/^        $typeFonction = $this->TypeFonction->get($id,$/;"	v
add	.\src\Controller\TFoncController.php	/^    public function add()$/;"	f
typeFonction	.\src\Controller\TFoncController.php	/^          $typeFonction = $this->TypeFonction->newEntity();$/;"	v
typeFonction	.\src\Controller\TFoncController.php	/^          $typeFonction = $this->TypeFonction->patchEntity($typeFonction,$/;"	v
edit	.\src\Controller\TFoncController.php	/^    public function edit($id = null)$/;"	f
typeFonction	.\src\Controller\TFoncController.php	/^          $typeFonction = $this->TypeFonction->get($id,$/;"	v
typeFonction	.\src\Controller\TFoncController.php	/^          $typeFonction = $this->TypeFonction->patchEntity($typeFonction,$/;"	v
delete	.\src\Controller\TFoncController.php	/^    public function delete($id = null)$/;"	f
typeFonction	.\src\Controller\TFoncController.php	/^          $typeFonction = $this->TypeFonction->get($id);$/;"	v
settings	.\src\Controller\TRaGeController.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TRaGeController	.\src\Controller\TRaGeController.php	/^class TRaGeController extends AppController {$/;"	c
index	.\src\Controller\TRaGeController.php	/^    public function index()$/;"	f
rattachementGeographique	.\src\Controller\TRaGeController.php	/^      $rattachementGeographique = $this->paginate($this->TRaGe);$/;"	v
view	.\src\Controller\TRaGeController.php	/^    public function view($id = null)$/;"	f
rattachementGeographique	.\src\Controller\TRaGeController.php	/^        $rattachementGeographique = $this->RattachementGeographique->get($id,$/;"	v
add	.\src\Controller\TRaGeController.php	/^    public function add()$/;"	f
rattachementGeographique	.\src\Controller\TRaGeController.php	/^          $rattachementGeographique = $this->RattachementGeographique->newEntity();$/;"	v
rattachementGeographique	.\src\Controller\TRaGeController.php	/^          $rattachementGeographique = $this->RattachementGeographique->patchEntity($rattachementGeographique,$/;"	v
edit	.\src\Controller\TRaGeController.php	/^    public function edit($id = null)$/;"	f
rattachementGeographique	.\src\Controller\TRaGeController.php	/^          $rattachementGeographique = $this->RattachementGeographique->get($id,$/;"	v
rattachementGeographique	.\src\Controller\TRaGeController.php	/^          $rattachementGeographique = $this->RattachementGeographique->patchEntity($rattachementGeographique,$/;"	v
delete	.\src\Controller\TRaGeController.php	/^    public function delete($id = null)$/;"	f
rattachementGeographique	.\src\Controller\TRaGeController.php	/^          $rattachementGeographique = $this->RattachementGeographique->get($id);$/;"	v
settings	.\src\Controller\TrappController.php	/^ * @method \\App\\Model\\Entity\\TypeRappel[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TRappController	.\src\Controller\TrappController.php	/^class TRappController extends AppController {$/;"	c
index	.\src\Controller\TrappController.php	/^    public function index()$/;"	f
typeRappel	.\src\Controller\TrappController.php	/^          $typeRappel = $this->paginate($this->TypeRappel);$/;"	v
view	.\src\Controller\TrappController.php	/^    public function view($id = null)$/;"	f
typeRappel	.\src\Controller\TrappController.php	/^        $typeRappel = $this->TypeRappel->get($id,$/;"	v
add	.\src\Controller\TrappController.php	/^    public function add()$/;"	f
typeRappel	.\src\Controller\TrappController.php	/^          $typeRappel = $this->TypeRappel->newEntity();$/;"	v
typeRappel	.\src\Controller\TrappController.php	/^          $typeRappel = $this->TypeRappel->patchEntity($typeRappel, $this->request->getData());$/;"	v
edit	.\src\Controller\TrappController.php	/^    public function edit($id = null)$/;"	f
typeRappel	.\src\Controller\TrappController.php	/^          $typeRappel = $this->TypeRappel->get($id, [$/;"	v
typeRappel	.\src\Controller\TrappController.php	/^          $typeRappel = $this->TypeRappel->patchEntity($typeRappel, $this->request->getData());$/;"	v
delete	.\src\Controller\TrappController.php	/^    public function delete($id = null)$/;"	f
typeRappel	.\src\Controller\TrappController.php	/^          $typeRappel = $this->TypeRappel->get($id);$/;"	v
settings	.\src\Controller\TrattController.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement[]|ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TrattController	.\src\Controller\TrattController.php	/^class TrattController extends AppController {$/;"	c
index	.\src\Controller\TrattController.php	/^    public function index()$/;"	f
typeRattachement	.\src\Controller\TrattController.php	/^          $typeRattachement = $this->paginate($this->TypeRattachement);$/;"	v
view	.\src\Controller\TrattController.php	/^    public function view($id = null)$/;"	f
typeRattachement	.\src\Controller\TrattController.php	/^        $typeRattachement = $this->TypeRattachement->get($id,$/;"	v
add	.\src\Controller\TrattController.php	/^    public function add()$/;"	f
typeRattachement	.\src\Controller\TrattController.php	/^        $typeRattachement = $this->Tratt->newEntity();$/;"	v
typeRattachement	.\src\Controller\TrattController.php	/^            $typeRattachement = $this->Tratt->patchEntity($typeRattachement,$/;"	v
edit	.\src\Controller\TrattController.php	/^    public function edit($id = null)$/;"	f
table	.\src\Controller\TrattController.php	/^        $table = TableRegistry::getTableLocator()->get("Tratt",$/;"	v
typeRattachement	.\src\Controller\TrattController.php	/^        $typeRattachement = $table->get($id, ['contain' => []]);$/;"	v
typeRattachement	.\src\Controller\TrattController.php	/^            $typeRattachement = $table->patchEntity($typeRattachement,$/;"	v
delete	.\src\Controller\TrattController.php	/^    public function delete($id = null)$/;"	f
table	.\src\Controller\TrattController.php	/^        $table = TableRegistry::getTableLocator()->get("Tratt",$/;"	v
typeRattachement	.\src\Controller\TrattController.php	/^        $typeRattachement = $table->get($id);$/;"	v
settings	.\src\Controller\TScruController.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
TScruController	.\src\Controller\TScruController.php	/^class TScruController extends AppController {$/;"	c
index	.\src\Controller\TScruController.php	/^    public function index()$/;"	f
typeScrutin	.\src\Controller\TScruController.php	/^          $typeScrutin = $this->paginate($this->TScru);$/;"	v
view	.\src\Controller\TScruController.php	/^    public function view($id = null)$/;"	f
typeScrutin	.\src\Controller\TScruController.php	/^        $typeScrutin = $this->TypeScrutin->get($id,$/;"	v
add	.\src\Controller\TScruController.php	/^    public function add()$/;"	f
typeScrutin	.\src\Controller\TScruController.php	/^          $typeScrutin = $this->TypeScrutin->newEntity();$/;"	v
typeScrutin	.\src\Controller\TScruController.php	/^          $typeScrutin = $this->TypeScrutin->patchEntity($typeScrutin,$/;"	v
edit	.\src\Controller\TScruController.php	/^    public function edit($id = null)$/;"	f
typeScrutin	.\src\Controller\TScruController.php	/^          $typeScrutin = $this->TypeScrutin->get($id,$/;"	v
typeScrutin	.\src\Controller\TScruController.php	/^          $typeScrutin = $this->TypeScrutin->patchEntity($typeScrutin,$/;"	v
delete	.\src\Controller\TScruController.php	/^    public function delete($id = null)$/;"	f
typeScrutin	.\src\Controller\TScruController.php	/^          $typeScrutin = $this->TypeScrutin->get($id);$/;"	v
settings	.\src\Controller\VcgeoController.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
VcgeoController	.\src\Controller\VcgeoController.php	/^class VcgeoController extends AppController {$/;"	c
index	.\src\Controller\VcgeoController.php	/^    public function index()$/;"	f
valeurClassifGeo	.\src\Controller\VcgeoController.php	/^          $valeurClassifGeo = $this->paginate($this->ValeurClassifGeo);$/;"	v
view	.\src\Controller\VcgeoController.php	/^    public function view($id = null)$/;"	f
valeurClassifGeo	.\src\Controller\VcgeoController.php	/^        $valeurClassifGeo = $this->ValeurClassifGeo->get($id,$/;"	v
add	.\src\Controller\VcgeoController.php	/^    public function add()$/;"	f
valeurClassifGeo	.\src\Controller\VcgeoController.php	/^          $valeurClassifGeo = $this->ValeurClassifGeo->newEntity();$/;"	v
valeurClassifGeo	.\src\Controller\VcgeoController.php	/^          $valeurClassifGeo = $this->ValeurClassifGeo->patchEntity($valeurClassifGeo,$/;"	v
edit	.\src\Controller\VcgeoController.php	/^    public function edit($id = null)$/;"	f
valeurClassifGeo	.\src\Controller\VcgeoController.php	/^          $valeurClassifGeo = $this->ValeurClassifGeo->get($id,$/;"	v
valeurClassifGeo	.\src\Controller\VcgeoController.php	/^          $valeurClassifGeo = $this->ValeurClassifGeo->patchEntity($valeurClassifGeo,$/;"	v
delete	.\src\Controller\VcgeoController.php	/^    public function delete($id = null)$/;"	f
valeurClassifGeo	.\src\Controller\VcgeoController.php	/^          $valeurClassifGeo = $this->ValeurClassifGeo->get($id);$/;"	v
settings	.\src\Controller\VentiController.php	/^ * @method \\App\\Model\\Entity\\Ventilation[]|\\Cake\\Datasource\\ResultSetInterface paginate($object = null, array $settings = [])$/;"	v
VentiController	.\src\Controller\VentiController.php	/^class VentiController extends AppController {$/;"	c
index	.\src\Controller\VentiController.php	/^    public function index()$/;"	f
ventilation	.\src\Controller\VentiController.php	/^          $ventilation = $this->paginate($this->Venti);$/;"	v
view	.\src\Controller\VentiController.php	/^    public function view($id = null)$/;"	f
ventilation	.\src\Controller\VentiController.php	/^        $ventilation = $this->Ventilation->get($id,$/;"	v
add	.\src\Controller\VentiController.php	/^    public function add()$/;"	f
ventilation	.\src\Controller\VentiController.php	/^          $ventilation = $this->Ventilation->newEntity();$/;"	v
ventilation	.\src\Controller\VentiController.php	/^          $ventilation = $this->Ventilation->patchEntity($ventilation, $this->request->getData());$/;"	v
edit	.\src\Controller\VentiController.php	/^    public function edit($id = null)$/;"	f
ventilation	.\src\Controller\VentiController.php	/^          $ventilation = $this->Ventilation->get($id, [$/;"	v
ventilation	.\src\Controller\VentiController.php	/^          $ventilation = $this->Ventilation->patchEntity($ventilation, $this->request->getData());$/;"	v
delete	.\src\Controller\VentiController.php	/^    public function delete($id = null)$/;"	f
ventilation	.\src\Controller\VentiController.php	/^          $ventilation = $this->Ventilation->get($id);$/;"	v
arrayChangeKeyCaseUnicodeRecurs	.\src\FabriceTools.php	/^    public static function arrayChangeKeyCaseUnicodeRecurs($/;"	f
c	.\src\FabriceTools.php	/^        int $c = CASE_LOWER$/;"	v
k	.\src\FabriceTools.php	/^        foreach ($arr as $k => $v) {$/;"	v
noAccentFileName	.\src\FabriceTools.php	/^    static function noAccentFileName($chaine = "")$/;"	f
noAccentString	.\src\FabriceTools.php	/^    static function noAccentString($chaine = "")$/;"	f
Egcan	.\src\Model\Entity\Egcan.php	/^class Egcan extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Egcan.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Egcan.php	/^    protected $_accessible = [$/;"	v
Elect	.\src\Model\Entity\Elect.php	/^class Elect extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Elect.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Elect.php	/^    protected $_accessible = [$/;"	v
EnGeo	.\src\Model\Entity\EnGeo.php	/^class EnGeo extends Entity {$/;"	c
_accessible	.\src\Model\Entity\EnGeo.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\EnGeo.php	/^    protected $_accessible = [$/;"	v
Entgeoscrutin	.\src\Model\Entity\Entgeoscrutin.php	/^class Entgeoscrutin extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Entgeoscrutin.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Entgeoscrutin.php	/^    protected $_accessible = [$/;"	v
EtPol	.\src\Model\Entity\EtPol.php	/^class EtPol extends Entity {$/;"	c
_accessible	.\src\Model\Entity\EtPol.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\EtPol.php	/^    protected $_accessible = [$/;"	v
Incan	.\src\Model\Entity\Incan.php	/^class Incan extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Incan.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Incan.php	/^    protected $_accessible = [$/;"	v
RegEt	.\src\Model\Entity\RegEt.php	/^class RegEt extends Entity {$/;"	c
_accessible	.\src\Model\Entity\RegEt.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\RegEt.php	/^    protected $_accessible = [$/;"	v
Scrut	.\src\Model\Entity\Scrut.php	/^class Scrut extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Scrut.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Scrut.php	/^    protected $_accessible = [$/;"	v
TClas	.\src\Model\Entity\TClas.php	/^class TClas extends Entity {$/;"	c
_accessible	.\src\Model\Entity\TClas.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\TClas.php	/^    protected $_accessible = [$/;"	v
TDeci	.\src\Model\Entity\TDeci.php	/^class TDeci extends Entity {$/;"	c
_accessible	.\src\Model\Entity\TDeci.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\TDeci.php	/^    protected $_accessible = [$/;"	v
TElec	.\src\Model\Entity\TElec.php	/^class TElec extends Entity {$/;"	c
_accessible	.\src\Model\Entity\TElec.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\TElec.php	/^    protected $_accessible = [$/;"	v
Tenge	.\src\Model\Entity\Tenge.php	/^class Tenge extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Tenge.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Tenge.php	/^    protected $_accessible = [$/;"	v
TEnti	.\src\Model\Entity\TEnti.php	/^class TEnti extends Entity {$/;"	c
_accessible	.\src\Model\Entity\TEnti.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\TEnti.php	/^    protected $_accessible = [$/;"	v
TFonc	.\src\Model\Entity\TFonc.php	/^class TFonc extends Entity {$/;"	c
_accessible	.\src\Model\Entity\TFonc.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\TFonc.php	/^    protected $_accessible = [$/;"	v
TRaGe	.\src\Model\Entity\TRage.php	/^class TRaGe extends Entity {$/;"	c
_accessible	.\src\Model\Entity\TRage.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\TRage.php	/^    protected $_accessible = [$/;"	v
TRapp	.\src\Model\Entity\TRapp.php	/^class TRapp extends Entity {$/;"	c
_accessible	.\src\Model\Entity\TRapp.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\TRapp.php	/^    protected $_accessible = [$/;"	v
Tratt	.\src\Model\Entity\Tratt.php	/^class Tratt extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Tratt.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Tratt.php	/^    protected $_accessible = [$/;"	v
Tscru	.\src\Model\Entity\Tscru.php	/^class Tscru extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Tscru.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Tscru.php	/^    protected $_accessible = [$/;"	v
Vcgeo	.\src\Model\Entity\Vcgeo.php	/^class Vcgeo extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Vcgeo.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Vcgeo.php	/^    protected $_accessible = [$/;"	v
Venti	.\src\Model\Entity\Venti.php	/^class Venti extends Entity {$/;"	c
_accessible	.\src\Model\Entity\Venti.php	/^    protected $_accessible = [$/;"	v
_accessible	.\src\Model\Entity\Venti.php	/^    protected $_accessible = [$/;"	v
PostsCollection	.\src\Model\Filter\EgcanCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\EgcanCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\EgcanCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\EgcanCollection.php	/^ *     $query = $this->Posts$/;"	v
EgcanCollection	.\src\Model\Filter\EgcanCollection.php	/^class EgcanCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\EgcanCollection.php	/^    public function initialize()$/;"	f
nchp	.\src\Model\Filter\EgcanCollection.php	/^                        $nchp = AppTable::EGCANSEL;$/;"	v
initialize_documentation_a_conserver	.\src\Model\Filter\EgcanCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\ElectCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\ElectCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\ElectCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\ElectCollection.php	/^ *     $query = $this->Posts$/;"	v
ElectCollection	.\src\Model\Filter\ElectCollection.php	/^class ElectCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\ElectCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\ElectCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\EngeoCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\EngeoCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\EngeoCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\EngeoCollection.php	/^ *     $query = $this->Posts$/;"	v
EngeoCollection	.\src\Model\Filter\EngeoCollection.php	/^class EngeoCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\EngeoCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\EngeoCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\EntgeoscrutinCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\EntgeoscrutinCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\EntgeoscrutinCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\EntgeoscrutinCollection.php	/^ *     $query = $this->Posts$/;"	v
EntgeoscrutinCollection	.\src\Model\Filter\EntgeoscrutinCollection.php	/^class EntgeoscrutinCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\EntgeoscrutinCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\EntgeoscrutinCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\EtPolCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\EtPolCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\EtPolCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\EtPolCollection.php	/^ *     $query = $this->Posts$/;"	v
EtPolCollection	.\src\Model\Filter\EtPolCollection.php	/^class EtPolCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\EtPolCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\EtPolCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\IncanCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\IncanCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\IncanCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\IncanCollection.php	/^ *     $query = $this->Posts$/;"	v
IncanCollection	.\src\Model\Filter\IncanCollection.php	/^class IncanCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\IncanCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\IncanCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\RegEtCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\RegEtCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\RegEtCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\RegEtCollection.php	/^ *     $query = $this->Posts$/;"	v
RegEtCollection	.\src\Model\Filter\RegEtCollection.php	/^class RegEtCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\RegEtCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\RegEtCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\ScrutCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\ScrutCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\ScrutCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\ScrutCollection.php	/^ * $query = $this->Posts$/;"	v
ScrutCollection	.\src\Model\Filter\ScrutCollection.php	/^class ScrutCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\ScrutCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\ScrutCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TClasCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TClasCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TClasCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TClasCollection.php	/^ *     $query = $this->Posts$/;"	v
TClasCollection	.\src\Model\Filter\TClasCollection.php	/^class TClasCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TClasCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TClasCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TDeciCopllection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TDeciCopllection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TDeciCopllection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TDeciCopllection.php	/^ *     $query = $this->Posts$/;"	v
TDeciCollection	.\src\Model\Filter\TDeciCopllection.php	/^class TDeciCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TDeciCopllection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TDeciCopllection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TElecCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TElecCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TElecCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TElecCollection.php	/^ *     $query = $this->Posts$/;"	v
TElecCollection	.\src\Model\Filter\TElecCollection.php	/^class TElecCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TElecCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TElecCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TengeCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TengeCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TengeCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TengeCollection.php	/^ *     $query = $this->Posts$/;"	v
TengeCollection	.\src\Model\Filter\TengeCollection.php	/^class TengeCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TengeCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TengeCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TentiCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TentiCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TentiCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TentiCollection.php	/^ *     $query = $this->Posts$/;"	v
TentiCollection	.\src\Model\Filter\TentiCollection.php	/^class TentiCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TentiCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TentiCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TFoncCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TFoncCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TFoncCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TFoncCollection.php	/^ *     $query = $this->Posts$/;"	v
TFoncCollection	.\src\Model\Filter\TFoncCollection.php	/^class TFoncCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TFoncCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TFoncCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TRaGeCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TRaGeCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TRaGeCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TRaGeCollection.php	/^ *     $query = $this->Posts$/;"	v
TRaGeCollection	.\src\Model\Filter\TRaGeCollection.php	/^class TRaGeCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TRaGeCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TRaGeCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TRappCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TRappCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TRappCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TRappCollection.php	/^ *     $query = $this->Posts$/;"	v
TRappCollection	.\src\Model\Filter\TRappCollection.php	/^class TRappCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TRappCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TRappCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TrattCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TrattCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TrattCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TrattCollection.php	/^ *     $query = $this->Posts$/;"	v
TrattCollection	.\src\Model\Filter\TrattCollection.php	/^class TrattCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TrattCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TrattCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TRegEtCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TRegEtCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TRegEtCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TRegEtCollection.php	/^ *     $query = $this->Posts$/;"	v
TRegEtCollection	.\src\Model\Filter\TRegEtCollection.php	/^class TRegEtCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TRegEtCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TRegEtCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\TscruCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\TscruCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\TscruCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\TscruCollection.php	/^ *     $query = $this->Posts$/;"	v
TscruCollection	.\src\Model\Filter\TscruCollection.php	/^class TscruCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\TscruCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\TscruCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\VcgeoCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\VcgeoCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\VcgeoCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\VcgeoCollection.php	/^ *     $query = $this->Posts$/;"	v
VcgeoCollection	.\src\Model\Filter\VcgeoCollection.php	/^class VcgeoCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\VcgeoCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\VcgeoCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
PostsCollection	.\src\Model\Filter\VentiCollection.php	/^ * class PostsCollection extends FilterCollection$/;"	c
initialize	.\src\Model\Filter\VentiCollection.php	/^ *     public function initialize()$/;"	f
to	.\src\Model\Filter\VentiCollection.php	/^ * You can also specify alternate collection class to use when making find call:$/;"	c
query	.\src\Model\Filter\VentiCollection.php	/^ *     $query = $this->Posts$/;"	v
VentiCollection	.\src\Model\Filter\VentiCollection.php	/^class VentiCollection extends FilterCollection {$/;"	c
initialize	.\src\Model\Filter\VentiCollection.php	/^    public function initialize()$/;"	f
initialize_documentation_a_conserver	.\src\Model\Filter\VentiCollection.php	/^    public function initialize_documentation_a_conserver()$/;"	f
options	.\src\Model\Table\AppTable.php	/^ * @method \\App\\Model\\Entity\\Election get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\AppTable.php	/^ * @method \\App\\Model\\Entity\\Election newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\AppTable.php	/^ * @method \\App\\Model\\Entity\\Election[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\AppTable.php	/^ * $options = [])$/;"	v
options	.\src\Model\Table\AppTable.php	/^ * $options = [])$/;"	v
options	.\src\Model\Table\AppTable.php	/^ * array $data, array $options = [])$/;"	v
options	.\src\Model\Table\AppTable.php	/^ * patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\AppTable.php	/^ * callable $callback = null, $options = [])$/;"	v
AppTable	.\src\Model\Table\AppTable.php	/^class AppTable extends Table$/;"	c
defaultConnectionName	.\src\Model\Table\AppTable.php	/^    public static function defaultConnectionName()$/;"	f
key	.\src\Model\Table\AppTable.php	/^        $key = self::KEYDATASOURCE;$/;"	v
result	.\src\Model\Table\AppTable.php	/^        $result = parent::defaultConnectionName();$/;"	v
result	.\src\Model\Table\AppTable.php	/^            $result = $_SESSION[$key];$/;"	v
formateChampDate4Oracle	.\src\Model\Table\AppTable.php	/^    public function formateChampDate4Oracle(string $k, string $v)$/;"	f
v	.\src\Model\Table\AppTable.php	/^            $v = $this->formateStringDate4Oracle($v);$/;"	v
formateStringDate4Oracle	.\src\Model\Table\AppTable.php	/^    public static function formateStringDate4Oracle(string $strdate)$/;"	f
result	.\src\Model\Table\AppTable.php	/^        $result = $strdate;$/;"	v
formats	.\src\Model\Table\AppTable.php	/^        $formats = [$/;"	v
isOk	.\src\Model\Table\AppTable.php	/^        $isOk = false;$/;"	v
date	.\src\Model\Table\AppTable.php	/^        $date = null;$/;"	v
date	.\src\Model\Table\AppTable.php	/^                $date = Date::createFromFormat($format, substr($strdate, 0, 10));$/;"	v
result	.\src\Model\Table\AppTable.php	/^                $result = $date->format("Y\/m\/d"); \/\/ format Oracle - supertere$/;"	v
isOk	.\src\Model\Table\AppTable.php	/^                $isOk = true;$/;"	v
isOk	.\src\Model\Table\AppTable.php	/^                $isOk = false;$/;"	v
msg	.\src\Model\Table\AppTable.php	/^            $msg = __("Formatage Date [{0}] impossible.", $strdate);$/;"	v
formateArrayObjectDates	.\src\Model\Table\AppTable.php	/^    public function formateArrayObjectDates(ArrayObject $data)$/;"	f
k	.\src\Model\Table\AppTable.php	/^        foreach ($data as $k => $v) {$/;"	v
formateArrayDates	.\src\Model\Table\AppTable.php	/^    public function formateArrayDates(array $data = [])$/;"	f
data	.\src\Model\Table\AppTable.php	/^    public function formateArrayDates(array $data = [])$/;"	v
k	.\src\Model\Table\AppTable.php	/^        foreach ($data as $k => $v) {$/;"	v
beforeMarshal	.\src\Model\Table\AppTable.php	/^    public function beforeMarshal($/;"	f
data	.\src\Model\Table\AppTable.php	/^        $data = $this->formateArrayObjectDates($data);$/;"	v
options	.\src\Model\Table\EgcanTable.php	/^ * @method \\App\\Model\\Entity\\EgCandidature get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\EgcanTable.php	/^ * @method \\App\\Model\\Entity\\EgCandidature newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\EgcanTable.php	/^ * @method \\App\\Model\\Entity\\EgCandidature[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\EgcanTable.php	/^ * @method \\App\\Model\\Entity\\EgCandidature|false save(EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\EgcanTable.php	/^ * @method \\App\\Model\\Entity\\EgCandidature saveOrFail(EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\EgcanTable.php	/^ * @method \\App\\Model\\Entity\\EgCandidature patchEntity(EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\EgcanTable.php	/^ * @method \\App\\Model\\Entity\\EgCandidature[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\EgcanTable.php	/^ * @method \\App\\Model\\Entity\\EgCandidature findOrCreate($search, callable $callback = null, $options = [])$/;"	v
EgcanTable	.\src\Model\Table\EgcanTable.php	/^class EgcanTable extends AppTable$/;"	c
initialize	.\src\Model\Table\EgcanTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\EgcanTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\ElectTable.php	/^ * @method \\App\\Model\\Entity\\Election get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\ElectTable.php	/^ * @method \\App\\Model\\Entity\\Election newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\ElectTable.php	/^ * @method \\App\\Model\\Entity\\Election[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\ElectTable.php	/^ * @method \\App\\Model\\Entity\\Election|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\ElectTable.php	/^ * @method \\App\\Model\\Entity\\Election saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\ElectTable.php	/^ * @method \\App\\Model\\Entity\\Election patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\ElectTable.php	/^ * @method \\App\\Model\\Entity\\Election[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\ElectTable.php	/^ * @method \\App\\Model\\Entity\\Election findOrCreate($search, callable $callback = null, $options = [])$/;"	v
ElectTable	.\src\Model\Table\ElectTable.php	/^class ElectTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\ElectTable.php	/^    public function initialize(array $config)$/;"	f
name	.\src\Model\Table\ElectTable.php	/^             * The class name of the other table.$/;"	c
validationDefault	.\src\Model\Table\ElectTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\EngeoTable.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\EngeoTable.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\EngeoTable.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\EngeoTable.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\EngeoTable.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\EngeoTable.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\EngeoTable.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\EngeoTable.php	/^ * @method \\App\\Model\\Entity\\EntiteGeo findOrCreate($search, callable $callback = null, $options = [])$/;"	v
EngeoTable	.\src\Model\Table\EngeoTable.php	/^class EngeoTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\EngeoTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\EngeoTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\EntgeoscrutinTable.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\EntgeoscrutinTable.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\EntgeoscrutinTable.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\EntgeoscrutinTable.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\EntgeoscrutinTable.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\EntgeoscrutinTable.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\EntgeoscrutinTable.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\EntgeoscrutinTable.php	/^ * @method \\App\\Model\\Entity\\EntGeoScrutin findOrCreate($search, callable $callback = null, $options = [])$/;"	v
EntgeoscrutinTable	.\src\Model\Table\EntgeoscrutinTable.php	/^class EntgeoscrutinTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\EntgeoscrutinTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\EntgeoscrutinTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\EtPolTable.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\EtPolTable.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\EtPolTable.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\EtPolTable.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\EtPolTable.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\EtPolTable.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\EtPolTable.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\EtPolTable.php	/^ * @method \\App\\Model\\Entity\\EtiquettePolitique findOrCreate($search, callable $callback = null, $options = [])$/;"	v
EtPolTable	.\src\Model\Table\EtPolTable.php	/^class EtPolTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\EtPolTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\EtPolTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\IncanTable.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\IncanTable.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\IncanTable.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\IncanTable.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\IncanTable.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\IncanTable.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\IncanTable.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\IncanTable.php	/^ * @method \\App\\Model\\Entity\\IndiceCandidature findOrCreate($search, callable $callback = null, $options = [])$/;"	v
IncanTable	.\src\Model\Table\IncanTable.php	/^class IncanTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\IncanTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\IncanTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
defautInCan	.\src\Model\Table\IncanTable.php	/^    static public function defautInCan()$/;"	f
annee_courante	.\src\Model\Table\IncanTable.php	/^        $annee_courante = \\date('Y');  \/\/ par exemple 2020$/;"	v
defaut	.\src\Model\Table\IncanTable.php	/^        $defaut = \\substr($annee_courante, 0, 1); \/\/ 2$/;"	v
options	.\src\Model\Table\RegEtTable.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\RegEtTable.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\RegEtTable.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\RegEtTable.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\RegEtTable.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\RegEtTable.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\RegEtTable.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\RegEtTable.php	/^ * @method \\App\\Model\\Entity\\RegroupementEtiquette findOrCreate($search, callable $callback = null, $options = [])$/;"	v
RegEtTable	.\src\Model\Table\RegEtTable.php	/^class RegEtTable extends Table {$/;"	c
initialize	.\src\Model\Table\RegEtTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\RegEtTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
false	.\src\Model\Table\ScrutTable.php	/^\/\/use function false;$/;"	f
options	.\src\Model\Table\ScrutTable.php	/^ * @method \\App\\Model\\Entity\\Scrutin get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\ScrutTable.php	/^ * @method \\App\\Model\\Entity\\Scrutin newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\ScrutTable.php	/^ * @method \\App\\Model\\Entity\\Scrutin[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\ScrutTable.php	/^ * @method \\App\\Model\\Entity\\Scrutin|false save(EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\ScrutTable.php	/^ * @method \\App\\Model\\Entity\\Scrutin saveOrFail(EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\ScrutTable.php	/^ * @method \\App\\Model\\Entity\\Scrutin patchEntity(EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\ScrutTable.php	/^ * @method \\App\\Model\\Entity\\Scrutin[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\ScrutTable.php	/^ * @method \\App\\Model\\Entity\\Scrutin findOrCreate($search, callable $callback = null, $options = [])$/;"	v
ScrutTable	.\src\Model\Table\ScrutTable.php	/^class ScrutTable extends AppTable$/;"	c
initialize	.\src\Model\Table\ScrutTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\ScrutTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TClasTable.php	/^ * @method \\App\\Model\\Entity\\TypeClassification get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TClasTable.php	/^ * @method \\App\\Model\\Entity\\TypeClassification newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TClasTable.php	/^ * @method \\App\\Model\\Entity\\TypeClassification[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TClasTable.php	/^ * @method \\App\\Model\\Entity\\TypeClassification|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TClasTable.php	/^ * @method \\App\\Model\\Entity\\TypeClassification saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TClasTable.php	/^ * @method \\App\\Model\\Entity\\TypeClassification patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TClasTable.php	/^ * @method \\App\\Model\\Entity\\TypeClassification[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TClasTable.php	/^ * @method \\App\\Model\\Entity\\TypeClassification findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TClasTable	.\src\Model\Table\TClasTable.php	/^class TClasTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TClasTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TClasTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TDeciTable.php	/^ * @method \\App\\Model\\Entity\\TypeDecision get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TDeciTable.php	/^ * @method \\App\\Model\\Entity\\TypeDecision newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TDeciTable.php	/^ * @method \\App\\Model\\Entity\\TypeDecision[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TDeciTable.php	/^ * @method \\App\\Model\\Entity\\TypeDecision|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TDeciTable.php	/^ * @method \\App\\Model\\Entity\\TypeDecision saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TDeciTable.php	/^ * @method \\App\\Model\\Entity\\TypeDecision patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TDeciTable.php	/^ * @method \\App\\Model\\Entity\\TypeDecision[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TDeciTable.php	/^ * @method \\App\\Model\\Entity\\TypeDecision findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TDeciTable	.\src\Model\Table\TDeciTable.php	/^class TDeciTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TDeciTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TDeciTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TElecTable.php	/^ * @method \\App\\Model\\Entity\\TypeElection get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TElecTable.php	/^ * @method \\App\\Model\\Entity\\TypeElection newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TElecTable.php	/^ * @method \\App\\Model\\Entity\\TypeElection[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TElecTable.php	/^ * @method \\App\\Model\\Entity\\TypeElection|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TElecTable.php	/^ * @method \\App\\Model\\Entity\\TypeElection saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TElecTable.php	/^ * @method \\App\\Model\\Entity\\TypeElection patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TElecTable.php	/^ * @method \\App\\Model\\Entity\\TypeElection[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TElecTable.php	/^ * @method \\App\\Model\\Entity\\TypeElection findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TElecTable	.\src\Model\Table\TElecTable.php	/^class TElecTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TElecTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TElecTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TengeTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TengeTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TengeTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TengeTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TengeTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TengeTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TengeTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TengeTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntiteGeo findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TengeTable	.\src\Model\Table\TengeTable.php	/^class TengeTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TengeTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TengeTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TentiTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntite get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TentiTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntite newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TentiTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntite[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TentiTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntite|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TentiTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntite saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TentiTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntite patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TentiTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntite[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TentiTable.php	/^ * @method \\App\\Model\\Entity\\TypeEntite findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TentiTable	.\src\Model\Table\TentiTable.php	/^class TentiTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TentiTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TentiTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TFoncTable.php	/^ * @method \\App\\Model\\Entity\\TypeFonction get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TFoncTable.php	/^ * @method \\App\\Model\\Entity\\TypeFonction newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TFoncTable.php	/^ * @method \\App\\Model\\Entity\\TypeFonction[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TFoncTable.php	/^ * @method \\App\\Model\\Entity\\TypeFonction|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TFoncTable.php	/^ * @method \\App\\Model\\Entity\\TypeFonction saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TFoncTable.php	/^ * @method \\App\\Model\\Entity\\TypeFonction patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TFoncTable.php	/^ * @method \\App\\Model\\Entity\\TypeFonction[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TFoncTable.php	/^ * @method \\App\\Model\\Entity\\TypeFonction findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TFoncTable	.\src\Model\Table\TFoncTable.php	/^class TFoncTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TFoncTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TFoncTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TRaGeTable.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TRaGeTable.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TRaGeTable.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TRaGeTable.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TRaGeTable.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TRaGeTable.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TRaGeTable.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TRaGeTable.php	/^ * @method \\App\\Model\\Entity\\RattachementGeographique findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TRaGeTable	.\src\Model\Table\TRaGeTable.php	/^class TRaGeTable extends Table {$/;"	c
initialize	.\src\Model\Table\TRaGeTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TRaGeTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TrappTable.php	/^ * @method \\App\\Model\\Entity\\TypeRappel get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TrappTable.php	/^ * @method \\App\\Model\\Entity\\TypeRappel newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TrappTable.php	/^ * @method \\App\\Model\\Entity\\TypeRappel[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TrappTable.php	/^ * @method \\App\\Model\\Entity\\TypeRappel|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TrappTable.php	/^ * @method \\App\\Model\\Entity\\TypeRappel saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TrappTable.php	/^ * @method \\App\\Model\\Entity\\TypeRappel patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TrappTable.php	/^ * @method \\App\\Model\\Entity\\TypeRappel[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TrappTable.php	/^ * @method \\App\\Model\\Entity\\TypeRappel findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TrappTable	.\src\Model\Table\TrappTable.php	/^class TrappTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TrappTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TrappTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TrattTable.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TrattTable.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TrattTable.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TrattTable.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TrattTable.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TrattTable.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TrattTable.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TrattTable.php	/^ * @method \\App\\Model\\Entity\\TypeRattachement findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TrattTable	.\src\Model\Table\TrattTable.php	/^class TrattTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TrattTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TrattTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\TscruTable.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\TscruTable.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\TscruTable.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TscruTable.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TscruTable.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\TscruTable.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\TscruTable.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\TscruTable.php	/^ * @method \\App\\Model\\Entity\\TypeScrutin findOrCreate($search, callable $callback = null, $options = [])$/;"	v
TscruTable	.\src\Model\Table\TscruTable.php	/^class TscruTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\TscruTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\TscruTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
options	.\src\Model\Table\VcgeoTable.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\VcgeoTable.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\VcgeoTable.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\VcgeoTable.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\VcgeoTable.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\VcgeoTable.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\VcgeoTable.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\VcgeoTable.php	/^ * @method \\App\\Model\\Entity\\ValeurClassifGeo findOrCreate($search, callable $callback = null, $options = [])$/;"	v
VcgeoTable	.\src\Model\Table\VcgeoTable.php	/^class VcgeoTable extends AppTable {$/;"	c
initialize	.\src\Model\Table\VcgeoTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\VcgeoTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
findAll	.\src\Model\Table\VcgeoTable.php	/^    public function findAll(Query $query, array $options)$/;"	f
options	.\src\Model\Table\VentiTable.php	/^ * @method \\App\\Model\\Entity\\Ventilation get($primaryKey, $options = [])$/;"	v
options	.\src\Model\Table\VentiTable.php	/^ * @method \\App\\Model\\Entity\\Ventilation newEntity($data = null, array $options = [])$/;"	v
options	.\src\Model\Table\VentiTable.php	/^ * @method \\App\\Model\\Entity\\Ventilation[] newEntities(array $data, array $options = [])$/;"	v
options	.\src\Model\Table\VentiTable.php	/^ * @method \\App\\Model\\Entity\\Ventilation|false save(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\VentiTable.php	/^ * @method \\App\\Model\\Entity\\Ventilation saveOrFail(\\Cake\\Datasource\\EntityInterface $entity, $options = [])$/;"	v
options	.\src\Model\Table\VentiTable.php	/^ * @method \\App\\Model\\Entity\\Ventilation patchEntity(\\Cake\\Datasource\\EntityInterface $entity, array $data, array $options = [])$/;"	v
options	.\src\Model\Table\VentiTable.php	/^ * @method \\App\\Model\\Entity\\Ventilation[] patchEntities($entities, array $data, array $options = [])$/;"	v
callback	.\src\Model\Table\VentiTable.php	/^ * @method \\App\\Model\\Entity\\Ventilation findOrCreate($search, callable $callback = null, $options = [])$/;"	v
VentiTable	.\src\Model\Table\VentiTable.php	/^class VentiTable extends Table {$/;"	c
initialize	.\src\Model\Table\VentiTable.php	/^    public function initialize(array $config)$/;"	f
validationDefault	.\src\Model\Table\VentiTable.php	/^    public function validationDefault(Validator $validator)$/;"	f
ConsoleShell	.\src\Shell\ConsoleShell.php	/^class ConsoleShell extends Shell$/;"	c
main	.\src\Shell\ConsoleShell.php	/^    public function main()$/;"	f
psy	.\src\Shell\ConsoleShell.php	/^        $psy = new PsyShell();$/;"	v
getOptionParser	.\src\Shell\ConsoleShell.php	/^    public function getOptionParser()$/;"	f
parser	.\src\Shell\ConsoleShell.php	/^        $parser = new ConsoleOptionParser('console');$/;"	v
that	.\src\View\AjaxView.php	/^ * A view class that is used for AJAX responses.$/;"	c
AjaxView	.\src\View\AjaxView.php	/^class AjaxView extends AppView$/;"	c
layout	.\src\View\AjaxView.php	/^    public $layout = 'ajax';$/;"	v
layout	.\src\View\AjaxView.php	/^    public $layout = 'ajax';$/;"	v
initialize	.\src\View\AjaxView.php	/^    public function initialize()$/;"	f
response	.\src\View\AjaxView.php	/^        $this->response = $this->response->withType('ajax');$/;"	v
AppView	.\src\View\AppView.php	/^class AppView extends View {$/;"	c
initialize	.\src\View\AppView.php	/^    public function initialize()$/;"	f
EgCandidatureFixture	.\tests\Fixture\EgCandidatureFixture.php	/^class EgCandidatureFixture extends TestFixture$/;"	c
table	.\tests\Fixture\EgCandidatureFixture.php	/^    public $table = 'eg_candidature';$/;"	v
table	.\tests\Fixture\EgCandidatureFixture.php	/^    public $table = 'eg_candidature';$/;"	v
fields	.\tests\Fixture\EgCandidatureFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\EgCandidatureFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\EgCandidatureFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\EgCandidatureFixture.php	/^        $this->records = [$/;"	v
ElectionFixture	.\tests\Fixture\ElectionFixture.php	/^class ElectionFixture extends TestFixture$/;"	c
table	.\tests\Fixture\ElectionFixture.php	/^    public $table = 'election';$/;"	v
table	.\tests\Fixture\ElectionFixture.php	/^    public $table = 'election';$/;"	v
fields	.\tests\Fixture\ElectionFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\ElectionFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\ElectionFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\ElectionFixture.php	/^        $this->records = [$/;"	v
EntiteGeoFixture	.\tests\Fixture\EntiteGeoFixture.php	/^class EntiteGeoFixture extends TestFixture$/;"	c
table	.\tests\Fixture\EntiteGeoFixture.php	/^    public $table = 'entite_geo';$/;"	v
table	.\tests\Fixture\EntiteGeoFixture.php	/^    public $table = 'entite_geo';$/;"	v
fields	.\tests\Fixture\EntiteGeoFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\EntiteGeoFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\EntiteGeoFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\EntiteGeoFixture.php	/^        $this->records = [$/;"	v
EtiquettePolitiqueFixture	.\tests\Fixture\EtiquettePolitiqueFixture.php	/^class EtiquettePolitiqueFixture extends TestFixture$/;"	c
table	.\tests\Fixture\EtiquettePolitiqueFixture.php	/^    public $table = 'etiquette_politique';$/;"	v
table	.\tests\Fixture\EtiquettePolitiqueFixture.php	/^    public $table = 'etiquette_politique';$/;"	v
fields	.\tests\Fixture\EtiquettePolitiqueFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\EtiquettePolitiqueFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\EtiquettePolitiqueFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\EtiquettePolitiqueFixture.php	/^        $this->records = [$/;"	v
IndiceCandidatureFixture	.\tests\Fixture\IndiceCandidatureFixture.php	/^class IndiceCandidatureFixture extends TestFixture$/;"	c
table	.\tests\Fixture\IndiceCandidatureFixture.php	/^    public $table = 'indice_candidature';$/;"	v
table	.\tests\Fixture\IndiceCandidatureFixture.php	/^    public $table = 'indice_candidature';$/;"	v
fields	.\tests\Fixture\IndiceCandidatureFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\IndiceCandidatureFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\IndiceCandidatureFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\IndiceCandidatureFixture.php	/^        $this->records = [$/;"	v
RattachementGeographiqueFixture	.\tests\Fixture\RattachementGeographiqueFixture.php	/^class RattachementGeographiqueFixture extends TestFixture$/;"	c
table	.\tests\Fixture\RattachementGeographiqueFixture.php	/^    public $table = 'rattachement_geographique';$/;"	v
table	.\tests\Fixture\RattachementGeographiqueFixture.php	/^    public $table = 'rattachement_geographique';$/;"	v
fields	.\tests\Fixture\RattachementGeographiqueFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\RattachementGeographiqueFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\RattachementGeographiqueFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\RattachementGeographiqueFixture.php	/^        $this->records = [$/;"	v
RegroupementEtiquetteFixture	.\tests\Fixture\RegroupementEtiquetteFixture.php	/^class RegroupementEtiquetteFixture extends TestFixture$/;"	c
table	.\tests\Fixture\RegroupementEtiquetteFixture.php	/^    public $table = 'regroupement_etiquette';$/;"	v
table	.\tests\Fixture\RegroupementEtiquetteFixture.php	/^    public $table = 'regroupement_etiquette';$/;"	v
fields	.\tests\Fixture\RegroupementEtiquetteFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\RegroupementEtiquetteFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\RegroupementEtiquetteFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\RegroupementEtiquetteFixture.php	/^        $this->records = [$/;"	v
ScrutinFixture	.\tests\Fixture\ScrutinFixture.php	/^class ScrutinFixture extends TestFixture$/;"	c
table	.\tests\Fixture\ScrutinFixture.php	/^    public $table = 'scrutin';$/;"	v
table	.\tests\Fixture\ScrutinFixture.php	/^    public $table = 'scrutin';$/;"	v
fields	.\tests\Fixture\ScrutinFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\ScrutinFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\ScrutinFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\ScrutinFixture.php	/^        $this->records = [$/;"	v
TypeClassificationFixture	.\tests\Fixture\TypeClassificationFixture.php	/^class TypeClassificationFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeClassificationFixture.php	/^    public $table = 'type_classification';$/;"	v
table	.\tests\Fixture\TypeClassificationFixture.php	/^    public $table = 'type_classification';$/;"	v
fields	.\tests\Fixture\TypeClassificationFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeClassificationFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeClassificationFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeClassificationFixture.php	/^        $this->records = [$/;"	v
TypeDecisionFixture	.\tests\Fixture\TypeDecisionFixture.php	/^class TypeDecisionFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeDecisionFixture.php	/^    public $table = 'type_decision';$/;"	v
table	.\tests\Fixture\TypeDecisionFixture.php	/^    public $table = 'type_decision';$/;"	v
fields	.\tests\Fixture\TypeDecisionFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeDecisionFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeDecisionFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeDecisionFixture.php	/^        $this->records = [$/;"	v
TypeElectionFixture	.\tests\Fixture\TypeElectionFixture.php	/^class TypeElectionFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeElectionFixture.php	/^    public $table = 'type_election';$/;"	v
table	.\tests\Fixture\TypeElectionFixture.php	/^    public $table = 'type_election';$/;"	v
fields	.\tests\Fixture\TypeElectionFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeElectionFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeElectionFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeElectionFixture.php	/^        $this->records = [$/;"	v
TypeEntiteFixture	.\tests\Fixture\TypeEntiteFixture.php	/^class TypeEntiteFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeEntiteFixture.php	/^    public $table = 'type_entite';$/;"	v
table	.\tests\Fixture\TypeEntiteFixture.php	/^    public $table = 'type_entite';$/;"	v
fields	.\tests\Fixture\TypeEntiteFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeEntiteFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeEntiteFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeEntiteFixture.php	/^        $this->records = [$/;"	v
TypeEntiteGeoFixture	.\tests\Fixture\TypeEntiteGeoFixture.php	/^class TypeEntiteGeoFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeEntiteGeoFixture.php	/^    public $table = 'type_entite_geo';$/;"	v
table	.\tests\Fixture\TypeEntiteGeoFixture.php	/^    public $table = 'type_entite_geo';$/;"	v
fields	.\tests\Fixture\TypeEntiteGeoFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeEntiteGeoFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeEntiteGeoFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeEntiteGeoFixture.php	/^        $this->records = [$/;"	v
TypeFonctionFixture	.\tests\Fixture\TypeFonctionFixture.php	/^class TypeFonctionFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeFonctionFixture.php	/^    public $table = 'type_fonction';$/;"	v
table	.\tests\Fixture\TypeFonctionFixture.php	/^    public $table = 'type_fonction';$/;"	v
fields	.\tests\Fixture\TypeFonctionFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeFonctionFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeFonctionFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeFonctionFixture.php	/^        $this->records = [$/;"	v
TypeRappelFixture	.\tests\Fixture\TypeRappelFixture.php	/^class TypeRappelFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeRappelFixture.php	/^    public $table = 'type_rappel';$/;"	v
table	.\tests\Fixture\TypeRappelFixture.php	/^    public $table = 'type_rappel';$/;"	v
fields	.\tests\Fixture\TypeRappelFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeRappelFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeRappelFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeRappelFixture.php	/^        $this->records = [$/;"	v
TypeRattachementFixture	.\tests\Fixture\TypeRattachementFixture.php	/^class TypeRattachementFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeRattachementFixture.php	/^    public $table = 'type_rattachement';$/;"	v
table	.\tests\Fixture\TypeRattachementFixture.php	/^    public $table = 'type_rattachement';$/;"	v
fields	.\tests\Fixture\TypeRattachementFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeRattachementFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeRattachementFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeRattachementFixture.php	/^        $this->records = [$/;"	v
TypeScrutinFixture	.\tests\Fixture\TypeScrutinFixture.php	/^class TypeScrutinFixture extends TestFixture$/;"	c
table	.\tests\Fixture\TypeScrutinFixture.php	/^    public $table = 'type_scrutin';$/;"	v
table	.\tests\Fixture\TypeScrutinFixture.php	/^    public $table = 'type_scrutin';$/;"	v
fields	.\tests\Fixture\TypeScrutinFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\TypeScrutinFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\TypeScrutinFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\TypeScrutinFixture.php	/^        $this->records = [$/;"	v
ValeurClassifGeoFixture	.\tests\Fixture\ValeurClassifGeoFixture.php	/^class ValeurClassifGeoFixture extends TestFixture$/;"	c
table	.\tests\Fixture\ValeurClassifGeoFixture.php	/^    public $table = 'valeur_classif_geo';$/;"	v
table	.\tests\Fixture\ValeurClassifGeoFixture.php	/^    public $table = 'valeur_classif_geo';$/;"	v
fields	.\tests\Fixture\ValeurClassifGeoFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\ValeurClassifGeoFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\ValeurClassifGeoFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\ValeurClassifGeoFixture.php	/^        $this->records = [$/;"	v
VentilationFixture	.\tests\Fixture\VentilationFixture.php	/^class VentilationFixture extends TestFixture$/;"	c
table	.\tests\Fixture\VentilationFixture.php	/^    public $table = 'ventilation';$/;"	v
table	.\tests\Fixture\VentilationFixture.php	/^    public $table = 'ventilation';$/;"	v
fields	.\tests\Fixture\VentilationFixture.php	/^    public $fields = [$/;"	v
fields	.\tests\Fixture\VentilationFixture.php	/^    public $fields = [$/;"	v
init	.\tests\Fixture\VentilationFixture.php	/^    public function init()$/;"	f
records	.\tests\Fixture\VentilationFixture.php	/^        $this->records = [$/;"	v
ApplicationTest	.\tests\TestCase\ApplicationTest.php	/^class ApplicationTest extends IntegrationTestCase$/;"	c
testBootstrap	.\tests\TestCase\ApplicationTest.php	/^    public function testBootstrap()$/;"	f
app	.\tests\TestCase\ApplicationTest.php	/^        $app = new Application(dirname(dirname(__DIR__)) . '\/config');$/;"	v
plugins	.\tests\TestCase\ApplicationTest.php	/^        $plugins = $app->getPlugins();$/;"	v
testBootstrapPluginWithoutHalt	.\tests\TestCase\ApplicationTest.php	/^    public function testBootstrapPluginWithoutHalt()$/;"	f
app	.\tests\TestCase\ApplicationTest.php	/^        $app = $this->getMockBuilder(Application::class)$/;"	v
testMiddleware	.\tests\TestCase\ApplicationTest.php	/^    public function testMiddleware()$/;"	f
app	.\tests\TestCase\ApplicationTest.php	/^        $app = new Application(dirname(dirname(__DIR__)) . '\/config');$/;"	v
middleware	.\tests\TestCase\ApplicationTest.php	/^        $middleware = new MiddlewareQueue();$/;"	v
middleware	.\tests\TestCase\ApplicationTest.php	/^        $middleware = $app->middleware($middleware);$/;"	v
EgCandidatureControllerTest	.\tests\TestCase\Controller\EgCandidatureControllerTest.php	/^class EgCandidatureControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\EgCandidatureControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\EgCandidatureControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\EgCandidatureControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\EgCandidatureControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\EgCandidatureControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\EgCandidatureControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\EgCandidatureControllerTest.php	/^    public function testDelete()$/;"	f
ElectionControllerTest	.\tests\TestCase\Controller\ElectionControllerTest.php	/^class ElectionControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\ElectionControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\ElectionControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\ElectionControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\ElectionControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\ElectionControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\ElectionControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\ElectionControllerTest.php	/^    public function testDelete()$/;"	f
EntiteGeoControllerTest	.\tests\TestCase\Controller\EntiteGeoControllerTest.php	/^class EntiteGeoControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\EntiteGeoControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\EntiteGeoControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\EntiteGeoControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\EntiteGeoControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\EntiteGeoControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\EntiteGeoControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\EntiteGeoControllerTest.php	/^    public function testDelete()$/;"	f
EtiquettePolitiqueControllerTest	.\tests\TestCase\Controller\EtiquettePolitiqueControllerTest.php	/^class EtiquettePolitiqueControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\EtiquettePolitiqueControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\EtiquettePolitiqueControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\EtiquettePolitiqueControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\EtiquettePolitiqueControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\EtiquettePolitiqueControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\EtiquettePolitiqueControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\EtiquettePolitiqueControllerTest.php	/^    public function testDelete()$/;"	f
IndiceCandidatureControllerTest	.\tests\TestCase\Controller\IndiceCandidatureControllerTest.php	/^class IndiceCandidatureControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\IndiceCandidatureControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\IndiceCandidatureControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\IndiceCandidatureControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\IndiceCandidatureControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\IndiceCandidatureControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\IndiceCandidatureControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\IndiceCandidatureControllerTest.php	/^    public function testDelete()$/;"	f
PagesControllerTest	.\tests\TestCase\Controller\PagesControllerTest.php	/^class PagesControllerTest extends IntegrationTestCase$/;"	c
testMultipleGet	.\tests\TestCase\Controller\PagesControllerTest.php	/^    public function testMultipleGet()$/;"	f
testDisplay	.\tests\TestCase\Controller\PagesControllerTest.php	/^    public function testDisplay()$/;"	f
testMissingTemplate	.\tests\TestCase\Controller\PagesControllerTest.php	/^    public function testMissingTemplate()$/;"	f
testMissingTemplateInDebug	.\tests\TestCase\Controller\PagesControllerTest.php	/^    public function testMissingTemplateInDebug()$/;"	f
testDirectoryTraversalProtection	.\tests\TestCase\Controller\PagesControllerTest.php	/^    public function testDirectoryTraversalProtection()$/;"	f
RattachementGeographiqueControllerTest	.\tests\TestCase\Controller\RattachementGeographiqueControllerTest.php	/^class RattachementGeographiqueControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\RattachementGeographiqueControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\RattachementGeographiqueControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\RattachementGeographiqueControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\RattachementGeographiqueControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\RattachementGeographiqueControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\RattachementGeographiqueControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\RattachementGeographiqueControllerTest.php	/^    public function testDelete()$/;"	f
RegroupementEtiquetteControllerTest	.\tests\TestCase\Controller\RegroupementEtiquetteControllerTest.php	/^class RegroupementEtiquetteControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\RegroupementEtiquetteControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\RegroupementEtiquetteControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\RegroupementEtiquetteControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\RegroupementEtiquetteControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\RegroupementEtiquetteControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\RegroupementEtiquetteControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\RegroupementEtiquetteControllerTest.php	/^    public function testDelete()$/;"	f
ScrutinControllerTest	.\tests\TestCase\Controller\ScrutinControllerTest.php	/^class ScrutinControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\ScrutinControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\ScrutinControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\ScrutinControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\ScrutinControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\ScrutinControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\ScrutinControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\ScrutinControllerTest.php	/^    public function testDelete()$/;"	f
TypeClassificationControllerTest	.\tests\TestCase\Controller\TypeClassificationControllerTest.php	/^class TypeClassificationControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeClassificationControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeClassificationControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeClassificationControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeClassificationControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeClassificationControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeClassificationControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeClassificationControllerTest.php	/^    public function testDelete()$/;"	f
TypeDecisionControllerTest	.\tests\TestCase\Controller\TypeDecisionControllerTest.php	/^class TypeDecisionControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeDecisionControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeDecisionControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeDecisionControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeDecisionControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeDecisionControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeDecisionControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeDecisionControllerTest.php	/^    public function testDelete()$/;"	f
TypeElectionControllerTest	.\tests\TestCase\Controller\TypeElectionControllerTest.php	/^class TypeElectionControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeElectionControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeElectionControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeElectionControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeElectionControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeElectionControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeElectionControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeElectionControllerTest.php	/^    public function testDelete()$/;"	f
TypeEntiteControllerTest	.\tests\TestCase\Controller\TypeEntiteControllerTest.php	/^class TypeEntiteControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeEntiteControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeEntiteControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeEntiteControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeEntiteControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeEntiteControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeEntiteControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeEntiteControllerTest.php	/^    public function testDelete()$/;"	f
TypeEntiteGeoControllerTest	.\tests\TestCase\Controller\TypeEntiteGeoControllerTest.php	/^class TypeEntiteGeoControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeEntiteGeoControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeEntiteGeoControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeEntiteGeoControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeEntiteGeoControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeEntiteGeoControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeEntiteGeoControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeEntiteGeoControllerTest.php	/^    public function testDelete()$/;"	f
TypeFonctionControllerTest	.\tests\TestCase\Controller\TypeFonctionControllerTest.php	/^class TypeFonctionControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeFonctionControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeFonctionControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeFonctionControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeFonctionControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeFonctionControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeFonctionControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeFonctionControllerTest.php	/^    public function testDelete()$/;"	f
TypeRappelControllerTest	.\tests\TestCase\Controller\TypeRappelControllerTest.php	/^class TypeRappelControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeRappelControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeRappelControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeRappelControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeRappelControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeRappelControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeRappelControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeRappelControllerTest.php	/^    public function testDelete()$/;"	f
TypeRattachementControllerTest	.\tests\TestCase\Controller\TypeRattachementControllerTest.php	/^class TypeRattachementControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeRattachementControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeRattachementControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeRattachementControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeRattachementControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeRattachementControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeRattachementControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeRattachementControllerTest.php	/^    public function testDelete()$/;"	f
TypeScrutinControllerTest	.\tests\TestCase\Controller\TypeScrutinControllerTest.php	/^class TypeScrutinControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\TypeScrutinControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\TypeScrutinControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\TypeScrutinControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\TypeScrutinControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\TypeScrutinControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\TypeScrutinControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\TypeScrutinControllerTest.php	/^    public function testDelete()$/;"	f
ValeurClassifGeoControllerTest	.\tests\TestCase\Controller\ValeurClassifGeoControllerTest.php	/^class ValeurClassifGeoControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\ValeurClassifGeoControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\ValeurClassifGeoControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\ValeurClassifGeoControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\ValeurClassifGeoControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\ValeurClassifGeoControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\ValeurClassifGeoControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\ValeurClassifGeoControllerTest.php	/^    public function testDelete()$/;"	f
VentilationControllerTest	.\tests\TestCase\Controller\VentilationControllerTest.php	/^class VentilationControllerTest extends TestCase$/;"	c
fixtures	.\tests\TestCase\Controller\VentilationControllerTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Controller\VentilationControllerTest.php	/^    public $fixtures = [$/;"	v
testIndex	.\tests\TestCase\Controller\VentilationControllerTest.php	/^    public function testIndex()$/;"	f
testView	.\tests\TestCase\Controller\VentilationControllerTest.php	/^    public function testView()$/;"	f
testAdd	.\tests\TestCase\Controller\VentilationControllerTest.php	/^    public function testAdd()$/;"	f
testEdit	.\tests\TestCase\Controller\VentilationControllerTest.php	/^    public function testEdit()$/;"	f
testDelete	.\tests\TestCase\Controller\VentilationControllerTest.php	/^    public function testDelete()$/;"	f
EgCandidatureTableTest	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^class EgCandidatureTableTest extends TestCase$/;"	c
EgCandidature	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^    public $EgCandidature;$/;"	v
fixtures	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('EgCandidature') ? [] : ['className' => EgCandidatureTable::class];$/;"	v
EgCandidature	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^        $this->EgCandidature = TableRegistry::getTableLocator()->get('EgCandidature', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\EgCandidatureTableTest.php	/^    public function testValidationDefault()$/;"	f
ElectionTableTest	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^class ElectionTableTest extends TestCase$/;"	c
Election	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^    public $Election;$/;"	v
fixtures	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('Election') ? [] : ['className' => ElectionTable::class];$/;"	v
Election	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^        $this->Election = TableRegistry::getTableLocator()->get('Election', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\ElectionTableTest.php	/^    public function testValidationDefault()$/;"	f
EntiteGeoTableTest	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^class EntiteGeoTableTest extends TestCase$/;"	c
EntiteGeo	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^    public $EntiteGeo;$/;"	v
fixtures	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('EntiteGeo') ? [] : ['className' => EntiteGeoTable::class];$/;"	v
EntiteGeo	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^        $this->EntiteGeo = TableRegistry::getTableLocator()->get('EntiteGeo', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\EntiteGeoTableTest.php	/^    public function testValidationDefault()$/;"	f
EtiquettePolitiqueTableTest	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^class EtiquettePolitiqueTableTest extends TestCase$/;"	c
EtiquettePolitique	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^    public $EtiquettePolitique;$/;"	v
fixtures	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('EtiquettePolitique') ? [] : ['className' => EtiquettePolitiqueTable::class];$/;"	v
EtiquettePolitique	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^        $this->EtiquettePolitique = TableRegistry::getTableLocator()->get('EtiquettePolitique', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\EtiquettePolitiqueTableTest.php	/^    public function testValidationDefault()$/;"	f
IndiceCandidatureTableTest	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^class IndiceCandidatureTableTest extends TestCase$/;"	c
IndiceCandidature	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^    public $IndiceCandidature;$/;"	v
fixtures	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('IndiceCandidature') ? [] : ['className' => IndiceCandidatureTable::class];$/;"	v
IndiceCandidature	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^        $this->IndiceCandidature = TableRegistry::getTableLocator()->get('IndiceCandidature', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\IndiceCandidatureTableTest.php	/^    public function testValidationDefault()$/;"	f
RattachementGeographiqueTableTest	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^class RattachementGeographiqueTableTest extends TestCase$/;"	c
RattachementGeographique	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^    public $RattachementGeographique;$/;"	v
fixtures	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('RattachementGeographique') ? [] : ['className' => RattachementGeographiqueTable::class];$/;"	v
RattachementGeographique	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^        $this->RattachementGeographique = TableRegistry::getTableLocator()->get('RattachementGeographique', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\RattachementGeographiqueTableTest.php	/^    public function testValidationDefault()$/;"	f
RegroupementEtiquetteTableTest	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^class RegroupementEtiquetteTableTest extends TestCase$/;"	c
RegroupementEtiquette	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^    public $RegroupementEtiquette;$/;"	v
fixtures	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('RegroupementEtiquette') ? [] : ['className' => RegroupementEtiquetteTable::class];$/;"	v
RegroupementEtiquette	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^        $this->RegroupementEtiquette = TableRegistry::getTableLocator()->get('RegroupementEtiquette', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\RegroupementEtiquetteTableTest.php	/^    public function testValidationDefault()$/;"	f
ScrutinTableTest	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^class ScrutinTableTest extends TestCase$/;"	c
Scrutin	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^    public $Scrutin;$/;"	v
fixtures	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('Scrutin') ? [] : ['className' => ScrutinTable::class];$/;"	v
Scrutin	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^        $this->Scrutin = TableRegistry::getTableLocator()->get('Scrutin', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\ScrutinTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeClassificationTableTest	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^class TypeClassificationTableTest extends TestCase$/;"	c
TypeClassification	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^    public $TypeClassification;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeClassification') ? [] : ['className' => TypeClassificationTable::class];$/;"	v
TypeClassification	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^        $this->TypeClassification = TableRegistry::getTableLocator()->get('TypeClassification', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeClassificationTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeDecisionTableTest	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^class TypeDecisionTableTest extends TestCase$/;"	c
TypeDecision	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^    public $TypeDecision;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeDecision') ? [] : ['className' => TypeDecisionTable::class];$/;"	v
TypeDecision	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^        $this->TypeDecision = TableRegistry::getTableLocator()->get('TypeDecision', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeDecisionTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeElectionTableTest	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^class TypeElectionTableTest extends TestCase$/;"	c
TypeElection	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^    public $TypeElection;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeElection') ? [] : ['className' => TypeElectionTable::class];$/;"	v
TypeElection	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^        $this->TypeElection = TableRegistry::getTableLocator()->get('TypeElection', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeElectionTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeEntiteGeoTableTest	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^class TypeEntiteGeoTableTest extends TestCase$/;"	c
TypeEntiteGeo	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^    public $TypeEntiteGeo;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeEntiteGeo') ? [] : ['className' => TypeEntiteGeoTable::class];$/;"	v
TypeEntiteGeo	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^        $this->TypeEntiteGeo = TableRegistry::getTableLocator()->get('TypeEntiteGeo', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeEntiteGeoTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeEntiteTableTest	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^class TypeEntiteTableTest extends TestCase$/;"	c
TypeEntite	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^    public $TypeEntite;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeEntite') ? [] : ['className' => TypeEntiteTable::class];$/;"	v
TypeEntite	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^        $this->TypeEntite = TableRegistry::getTableLocator()->get('TypeEntite', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeEntiteTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeFonctionTableTest	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^class TypeFonctionTableTest extends TestCase$/;"	c
TypeFonction	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^    public $TypeFonction;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeFonction') ? [] : ['className' => TypeFonctionTable::class];$/;"	v
TypeFonction	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^        $this->TypeFonction = TableRegistry::getTableLocator()->get('TypeFonction', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeFonctionTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeRappelTableTest	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^class TypeRappelTableTest extends TestCase$/;"	c
TypeRappel	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^    public $TypeRappel;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeRappel') ? [] : ['className' => TypeRappelTable::class];$/;"	v
TypeRappel	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^        $this->TypeRappel = TableRegistry::getTableLocator()->get('TypeRappel', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeRappelTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeRattachementTableTest	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^class TypeRattachementTableTest extends TestCase$/;"	c
TypeRattachement	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^    public $TypeRattachement;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeRattachement') ? [] : ['className' => TypeRattachementTable::class];$/;"	v
TypeRattachement	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^        $this->TypeRattachement = TableRegistry::getTableLocator()->get('TypeRattachement', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeRattachementTableTest.php	/^    public function testValidationDefault()$/;"	f
TypeScrutinTableTest	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^class TypeScrutinTableTest extends TestCase$/;"	c
TypeScrutin	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^    public $TypeScrutin;$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('TypeScrutin') ? [] : ['className' => TypeScrutinTable::class];$/;"	v
TypeScrutin	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^        $this->TypeScrutin = TableRegistry::getTableLocator()->get('TypeScrutin', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\TypeScrutinTableTest.php	/^    public function testValidationDefault()$/;"	f
ValeurClassifGeoTableTest	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^class ValeurClassifGeoTableTest extends TestCase$/;"	c
ValeurClassifGeo	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^    public $ValeurClassifGeo;$/;"	v
fixtures	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('ValeurClassifGeo') ? [] : ['className' => ValeurClassifGeoTable::class];$/;"	v
ValeurClassifGeo	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^        $this->ValeurClassifGeo = TableRegistry::getTableLocator()->get('ValeurClassifGeo', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\ValeurClassifGeoTableTest.php	/^    public function testValidationDefault()$/;"	f
VentilationTableTest	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^class VentilationTableTest extends TestCase$/;"	c
Ventilation	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^    public $Ventilation;$/;"	v
fixtures	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^    public $fixtures = [$/;"	v
setUp	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^    public function setUp()$/;"	f
config	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^        $config = TableRegistry::getTableLocator()->exists('Ventilation') ? [] : ['className' => VentilationTable::class];$/;"	v
Ventilation	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^        $this->Ventilation = TableRegistry::getTableLocator()->get('Ventilation', $config);$/;"	v
tearDown	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^    public function tearDown()$/;"	f
testInitialize	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^    public function testInitialize()$/;"	f
testValidationDefault	.\tests\TestCase\Model\Table\VentilationTableTest.php	/^    public function testValidationDefault()$/;"	f
BreakpointExtension	.\vendor\ajgl\breakpoint-twig-extension\src\BreakpointExtension.php	/^class BreakpointExtension extends AbstractExtension$/;"	c
getName	.\vendor\ajgl\breakpoint-twig-extension\src\BreakpointExtension.php	/^    public function getName()$/;"	f
getFunctions	.\vendor\ajgl\breakpoint-twig-extension\src\BreakpointExtension.php	/^    public function getFunctions()$/;"	f
setBreakpoint	.\vendor\ajgl\breakpoint-twig-extension\src\BreakpointExtension.php	/^    public function setBreakpoint(Environment $environment, $context)$/;"	f
arguments	.\vendor\ajgl\breakpoint-twig-extension\src\BreakpointExtension.php	/^            $arguments = func_get_args();$/;"	v
arguments	.\vendor\ajgl\breakpoint-twig-extension\src\BreakpointExtension.php	/^            $arguments = array_slice($arguments, 2);$/;"	v
AjglBreakpointTwigExtensionBundle	.\vendor\ajgl\breakpoint-twig-extension\src\SymfonyBundle\AjglBreakpointTwigExtensionBundle.php	/^class AjglBreakpointTwigExtensionBundle extends Bundle$/;"	c
AjglBreakpointTwigExtensionExtension	.\vendor\ajgl\breakpoint-twig-extension\src\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtension.php	/^class AjglBreakpointTwigExtensionExtension extends Extension$/;"	c
load	.\vendor\ajgl\breakpoint-twig-extension\src\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtension.php	/^    public function load(array $config, ContainerBuilder $container)$/;"	f
loader	.\vendor\ajgl\breakpoint-twig-extension\src\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtension.php	/^        $loader = new Loader\\XmlFileLoader($container, new FileLocator(__DIR__.'\/..\/Resources\/config'));$/;"	v
BreakpointExtensionTest	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^class BreakpointExtensionTest extends TestCase$/;"	c
extension	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^    protected $extension;$/;"	v
setUp	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^    protected function setUp()$/;"	f
extension	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^        $this->extension = new BreakpointExtension();$/;"	v
testGetName	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^    public function testGetName()$/;"	f
testGetFunctions	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^    public function testGetFunctions()$/;"	f
functions	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^        $functions = $this->extension->getFunctions();$/;"	v
function	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^        $function = reset($functions);$/;"	v
callable	.\vendor\ajgl\breakpoint-twig-extension\tests\BreakpointExtensionTest.php	/^        $callable = $function->getCallable();$/;"	v
AjglBreakpointTwigExtensionExtensionTest	.\vendor\ajgl\breakpoint-twig-extension\tests\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtensionTest.php	/^class AjglBreakpointTwigExtensionExtensionTest extends TestCase$/;"	c
container	.\vendor\ajgl\breakpoint-twig-extension\tests\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtensionTest.php	/^    protected $container;$/;"	v
extension	.\vendor\ajgl\breakpoint-twig-extension\tests\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtensionTest.php	/^    protected $extension;$/;"	v
setUp	.\vendor\ajgl\breakpoint-twig-extension\tests\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtensionTest.php	/^    protected function setUp()$/;"	f
container	.\vendor\ajgl\breakpoint-twig-extension\tests\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtensionTest.php	/^        $this->container = new ContainerBuilder();$/;"	v
extension	.\vendor\ajgl\breakpoint-twig-extension\tests\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtensionTest.php	/^        $this->extension = new AjglBreakpointTwigExtensionExtension();$/;"	v
testTwigExtensionsDefinition	.\vendor\ajgl\breakpoint-twig-extension\tests\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtensionTest.php	/^    public function testTwigExtensionsDefinition()$/;"	f
definition	.\vendor\ajgl\breakpoint-twig-extension\tests\SymfonyBundle\DependencyInjection\AjglBreakpointTwigExtensionExtensionTest.php	/^        $definition = $this->container->getDefinition('ajgl_twig_extension.breakpoint');$/;"	v
GitHubMarkdownEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^class GitHubMarkdownEngine implements MarkdownEngineInterface$/;"	c
__construct	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    public function __construct($contextRepo = null, $gfm = true, $cacheDir = '\/tmp\/github-markdown-cache', \\GitHub\\Client $client=null)$/;"	f
gfm	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    public function __construct($contextRepo = null, $gfm = true, $cacheDir = '\/tmp\/github-markdown-cache', \\GitHub\\Client $client=null)$/;"	v
repo	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^        $this->repo = $contextRepo;$/;"	v
mode	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^        $this->mode = $gfm ? 'gfm' : 'markdown';$/;"	v
cacheDir	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^        $this->cacheDir = rtrim($cacheDir, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR;$/;"	v
client	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^            $client = new \\Github\\Client();$/;"	v
api	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^        $this->api = $client->api('markdown');$/;"	v
transform	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    public function transform($content)$/;"	f
cacheFile	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^        $cacheFile = $this->getCachePath($content);$/;"	v
response	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^        $response = $this->api->render($content, $this->mode, $this->repo);$/;"	v
getName	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    public function getName()$/;"	f
getCachePath	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    private function getCachePath($content)$/;"	f
api	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    private $api;$/;"	v
cacheDir	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    private $cacheDir;$/;"	v
repo	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    private $repo;$/;"	v
mode	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\GitHubMarkdownEngine.php	/^    private $mode;$/;"	v
MichelfMarkdownEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\MichelfMarkdownEngine.php	/^class MichelfMarkdownEngine implements MarkdownEngineInterface$/;"	c
transform	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\MichelfMarkdownEngine.php	/^    public function transform($content)$/;"	f
getName	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\MichelfMarkdownEngine.php	/^    public function getName()$/;"	f
ParsedownEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngine.php	/^class ParsedownEngine implements MarkdownEngineInterface$/;"	c
engine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngine.php	/^    protected $engine;$/;"	v
__construct	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngine.php	/^    public function __construct($instanceName = null)$/;"	f
engine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngine.php	/^        $this->engine = Parsedown::instance($instanceName);$/;"	v
transform	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngine.php	/^    public function transform($content)$/;"	f
getName	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngine.php	/^    public function getName()$/;"	f
PHPLeagueCommonMarkEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngine.php	/^class PHPLeagueCommonMarkEngine implements MarkdownEngineInterface$/;"	c
converter	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngine.php	/^    private $converter;$/;"	v
__construct	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngine.php	/^    public function __construct(CommonMarkConverter $converter = null)$/;"	f
converter	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngine.php	/^    public function __construct(CommonMarkConverter $converter = null)$/;"	v
converter	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngine.php	/^        $this->converter = $converter ?: new CommonMarkConverter();$/;"	v
transform	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngine.php	/^    public function transform($content)$/;"	f
getName	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngine.php	/^    public function getName()$/;"	f
to	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngineInterface.php	/^ * Provide software interface to maps various Markdown engines$/;"	i
MarkdownEngineInterface	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngineInterface.php	/^interface MarkdownEngineInterface$/;"	i
transform	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngineInterface.php	/^    public function transform($content);$/;"	f
getName	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownEngineInterface.php	/^    public function getName();$/;"	f
MarkdownExtension	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownExtension.php	/^class MarkdownExtension extends \\Twig_Extension$/;"	c
markdownEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownExtension.php	/^    private $markdownEngine;$/;"	v
__construct	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownExtension.php	/^    public function __construct(MarkdownEngineInterface $markdownEngine)$/;"	f
markdownEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownExtension.php	/^        $this->markdownEngine = $markdownEngine;$/;"	v
getFilters	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownExtension.php	/^    public function getFilters()$/;"	f
parseMarkdown	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownExtension.php	/^    public function parseMarkdown($content)$/;"	f
getTokenParsers	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownExtension.php	/^    public function getTokenParsers()$/;"	f
getName	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Extension\MarkdownExtension.php	/^    public function getName()$/;"	f
MarkdownNode	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Node\MarkdownNode.php	/^class MarkdownNode extends \\Twig_Node$/;"	c
__construct	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Node\MarkdownNode.php	/^    public function __construct(\\Twig_NodeInterface $body, $lineno, $tag = 'markdown')$/;"	f
tag	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Node\MarkdownNode.php	/^    public function __construct(\\Twig_NodeInterface $body, $lineno, $tag = 'markdown')$/;"	v
compile	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\Node\MarkdownNode.php	/^    public function compile(\\Twig_Compiler $compiler)$/;"	f
MarkdownTokenParser	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^class MarkdownTokenParser extends \\Twig_TokenParser$/;"	c
markdownEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^    protected $markdownEngine;$/;"	v
__construct	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^    public function __construct(MarkdownEngineInterface $markdownEngine)$/;"	f
markdownEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^        $this->markdownEngine = $markdownEngine;$/;"	v
getEngine	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^    public function getEngine()$/;"	f
parse	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^    public function parse(\\Twig_Token $token)$/;"	f
lineno	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^        $lineno = $token->getLine();$/;"	v
body	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^        $body = $this->parser->subparse(array($this, 'decideMarkdownEnd'), true);$/;"	v
decideMarkdownEnd	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^    public function decideMarkdownEnd(\\Twig_Token $token)$/;"	f
getTag	.\vendor\aptoma\twig-markdown\src\Aptoma\Twig\TokenParser\MarkdownTokenParser.php	/^    public function getTag()$/;"	f
GitHubMarkdownEngineTest	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\GithubMarkdownEngineTest.php	/^class GitHubMarkdownEngineTest extends MarkdownExtensionTest$/;"	c
getParseMarkdownTests	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\GithubMarkdownEngineTest.php	/^    public function getParseMarkdownTests()$/;"	f
getEngine	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\GithubMarkdownEngineTest.php	/^    protected function getEngine()$/;"	f
if	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngineTest.php	/^\/\/ Require parent class if not autoloaded$/;"	c
ParsedownEngineTest	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngineTest.php	/^class ParsedownEngineTest extends MarkdownExtensionTest$/;"	c
getParseMarkdownTests	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngineTest.php	/^    public function getParseMarkdownTests()$/;"	f
getEngine	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\ParsedownEngineTest.php	/^    protected function getEngine()$/;"	f
if	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngineTest.php	/^\/\/ Require parent class if not autoloaded$/;"	c
PHPLeagueCommonMarkEngineTest	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngineTest.php	/^class PHPLeagueCommonMarkEngineTest extends MarkdownExtensionTest$/;"	c
getEngine	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownEngine\PHPLeagueCommonMarkEngineTest.php	/^    protected function getEngine()$/;"	f
MarkdownExtensionTest	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownExtensionTest.php	/^class MarkdownExtensionTest extends \\PHPUnit_Framework_TestCase$/;"	c
testParseMarkdown	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownExtensionTest.php	/^    public function testParseMarkdown($template, $expected, $context = array())$/;"	f
context	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownExtensionTest.php	/^    public function testParseMarkdown($template, $expected, $context = array())$/;"	v
getParseMarkdownTests	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownExtensionTest.php	/^    public function getParseMarkdownTests()$/;"	f
getEngine	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownExtensionTest.php	/^    protected function getEngine()$/;"	f
getTemplate	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownExtensionTest.php	/^    protected function getTemplate($template)$/;"	f
loader	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownExtensionTest.php	/^        $loader = new \\Twig_Loader_Array(array('index' => $template));$/;"	v
twig	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\Extension\MarkdownExtensionTest.php	/^        $twig = new \\Twig_Environment($loader, array('debug' => true, 'cache' => false));$/;"	v
MarkdownTokenParserTest	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^class MarkdownTokenParserTest extends \\Twig_Test_NodeTestCase$/;"	c
testConstructor	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^    public function testConstructor()$/;"	f
body	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $body = new \\Twig_Node(array(new \\Twig_Node_Text("#Title\\n\\nparagraph\\n", 1)));$/;"	v
node	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $node = new MarkdownNode($body, 1);$/;"	v
testMarkdownPrepareBehavior	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^    public function testMarkdownPrepareBehavior()$/;"	f
body	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $body = "    #Title\\n\\n    paragraph\\n\\n        code";$/;"	v
bodyPrepared	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $bodyPrepared = "#Title\\n\\nparagraph\\n\\n    code";$/;"	v
content	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $content = ob_get_clean();$/;"	v
lines	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $lines = explode("\\n", $content);$/;"	v
content	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $content = preg_replace('\/^' . $matches[0]. '\/', "", $lines);$/;"	v
content	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $content = join("\\n", $content);$/;"	v
expectedOutput	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $expectedOutput = "<h1>Title<\/h1>\\n\\n<p>paragraph<\/p>\\n\\n<pre><code>code\\n<\/code><\/pre>\\n";$/;"	v
testCompile	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^    public function testCompile($node, $source, $environment = null)$/;"	f
environment	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^    public function testCompile($node, $source, $environment = null)$/;"	v
getEngine	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^    protected function getEngine()$/;"	f
getTests	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^    public function getTests()$/;"	f
tests	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $tests = array();$/;"	v
body	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $body = new \\Twig_Node(array(new \\Twig_Node_Text("#Title\\n\\nparagraph\\n", 1)));$/;"	v
node	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $node = new MarkdownNode($body, 1);$/;"	v
body	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $body = new \\Twig_Node(array(new \\Twig_Node_Text("    #Title\\n\\n    paragraph\\n\\n        code\\n", 1)));$/;"	v
node	.\vendor\aptoma\twig-markdown\tests\Aptoma\Twig\TokenParser\MarkdownTokenParserTest.php	/^        $node = new MarkdownNode($body, 1);$/;"	v
to	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter.php	/^ * Adapter class to use the cache classes provider by Doctrine.$/;"	c
DoctrineCacheAdapter	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter.php	/^class DoctrineCacheAdapter implements CacheProviderInterface$/;"	c
cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter.php	/^    private $cache;$/;"	v
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter.php	/^    public function __construct(Cache $cache)$/;"	f
cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter.php	/^        $this->cache = $cache;$/;"	v
fetch	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter.php	/^    public function fetch($key)$/;"	f
save	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter.php	/^    public function save($key, $value, $lifetime = 0)$/;"	f
lifetime	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter.php	/^    public function save($key, $value, $lifetime = 0)$/;"	v
to	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^ * Adapter class to make extension interoperable with every PSR-6 adapter.$/;"	c
PsrCacheAdapter	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^class PsrCacheAdapter implements CacheProviderInterface$/;"	c
cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^    private $cache;$/;"	v
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^    public function __construct(CacheItemPoolInterface $cache)$/;"	f
cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^        $this->cache = $cache;$/;"	v
fetch	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^    public function fetch($key)$/;"	f
item	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^        $item = $this->cache->getItem($key);$/;"	v
save	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^    public function save($key, $value, $lifetime = 0)$/;"	f
lifetime	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^    public function save($key, $value, $lifetime = 0)$/;"	v
item	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProvider\PsrCacheAdapter.php	/^        $item = $this->cache->getItem($key);$/;"	v
CacheProviderInterface	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProviderInterface.php	/^interface CacheProviderInterface$/;"	i
fetch	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProviderInterface.php	/^    public function fetch($key);$/;"	f
save	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProviderInterface.php	/^    public function save($key, $value, $lifetime = 0);$/;"	f
lifetime	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheProviderInterface.php	/^    public function save($key, $value, $lifetime = 0);$/;"	v
BlackholeCacheStrategy	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\BlackholeCacheStrategy.php	/^class BlackholeCacheStrategy implements CacheStrategyInterface$/;"	c
fetchBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\BlackholeCacheStrategy.php	/^    public function fetchBlock($key)$/;"	f
generateKey	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\BlackholeCacheStrategy.php	/^    public function generateKey($annotation, $value)$/;"	f
saveBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\BlackholeCacheStrategy.php	/^    public function saveBlock($key, $block)$/;"	f
GenerationalCacheStrategy	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^class GenerationalCacheStrategy implements CacheStrategyInterface$/;"	c
keyGenerator	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^    private $keyGenerator;$/;"	v
cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^    private $cache;$/;"	v
lifetime	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^    private $lifetime;$/;"	v
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^    public function __construct(CacheProviderInterface $cache, KeyGeneratorInterface $keyGenerator, $lifetime = 0)$/;"	f
lifetime	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^    public function __construct(CacheProviderInterface $cache, KeyGeneratorInterface $keyGenerator, $lifetime = 0)$/;"	v
keyGenerator	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^        $this->keyGenerator = $keyGenerator;$/;"	v
cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^        $this->cache        = $cache;$/;"	v
lifetime	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^        $this->lifetime     = $lifetime;$/;"	v
fetchBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^    public function fetchBlock($key)$/;"	f
generateKey	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^    public function generateKey($annotation, $value)$/;"	f
key	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^        $key = $this->keyGenerator->generateKey($value);$/;"	v
saveBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\GenerationalCacheStrategy.php	/^    public function saveBlock($key, $block)$/;"	f
IndexedChainingCacheStrategy	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\IndexedChainingCacheStrategy.php	/^class IndexedChainingCacheStrategy implements CacheStrategyInterface$/;"	c
strategies	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\IndexedChainingCacheStrategy.php	/^    private $strategies;$/;"	v
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\IndexedChainingCacheStrategy.php	/^    public function __construct(array $strategies)$/;"	f
strategies	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\IndexedChainingCacheStrategy.php	/^        $this->strategies = $strategies;$/;"	v
fetchBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\IndexedChainingCacheStrategy.php	/^    public function fetchBlock($key)$/;"	f
generateKey	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\IndexedChainingCacheStrategy.php	/^    public function generateKey($annotation, $value)$/;"	f
strategyKey	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\IndexedChainingCacheStrategy.php	/^        if (!is_array($value) || null === $strategyKey = key($value)) {$/;"	v
saveBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\IndexedChainingCacheStrategy.php	/^    public function saveBlock($key, $block)$/;"	f
KeyGeneratorInterface	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\KeyGeneratorInterface.php	/^interface KeyGeneratorInterface$/;"	i
generateKey	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\KeyGeneratorInterface.php	/^    public function generateKey($value);$/;"	f
LifetimeCacheStrategy	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy.php	/^class LifetimeCacheStrategy implements CacheStrategyInterface$/;"	c
cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy.php	/^    private $cache;$/;"	v
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy.php	/^    public function __construct(CacheProviderInterface $cache)$/;"	f
cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy.php	/^        $this->cache = $cache;$/;"	v
fetchBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy.php	/^    public function fetchBlock($key)$/;"	f
generateKey	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy.php	/^    public function generateKey($annotation, $value)$/;"	f
saveBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy.php	/^    public function saveBlock($key, $block)$/;"	f
CacheStrategyInterface	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategyInterface.php	/^interface CacheStrategyInterface$/;"	i
fetchBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategyInterface.php	/^    public function fetchBlock($key);$/;"	f
generateKey	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategyInterface.php	/^    public function generateKey($annotation, $value);$/;"	f
saveBlock	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\CacheStrategyInterface.php	/^    public function saveBlock($key, $block);$/;"	f
BaseException	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\BaseException.php	/^class BaseException extends \\RuntimeException$/;"	c
InvalidCacheKeyException	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\InvalidCacheKeyException.php	/^class InvalidCacheKeyException extends BaseException$/;"	c
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\InvalidCacheKeyException.php	/^    public function __construct($message = 'Key generator did not return a key.', $code = 0, \\Exception $previous = null)$/;"	f
code	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\InvalidCacheKeyException.php	/^    public function __construct($message = 'Key generator did not return a key.', $code = 0, \\Exception $previous = null)$/;"	v
InvalidCacheLifetimeException	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\InvalidCacheLifetimeException.php	/^class InvalidCacheLifetimeException extends BaseException$/;"	c
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\InvalidCacheLifetimeException.php	/^    public function __construct($lifetime, $code = 0, \\Exception $previous = null)$/;"	f
code	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\InvalidCacheLifetimeException.php	/^    public function __construct($lifetime, $code = 0, \\Exception $previous = null)$/;"	v
NonExistingStrategyException	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\NonExistingStrategyException.php	/^class NonExistingStrategyException extends BaseException$/;"	c
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\NonExistingStrategyException.php	/^    public function __construct($strategyKey, $code = 0, \\Exception $previous = null)$/;"	f
code	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\NonExistingStrategyException.php	/^    public function __construct($strategyKey, $code = 0, \\Exception $previous = null)$/;"	v
NonExistingStrategyKeyException	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\NonExistingStrategyKeyException.php	/^class NonExistingStrategyKeyException extends BaseException$/;"	c
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\NonExistingStrategyKeyException.php	/^    public function __construct($message = 'No strategy key found in value.', $code = 0, \\Exception $previous = null)$/;"	f
code	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Exception\NonExistingStrategyKeyException.php	/^    public function __construct($message = 'No strategy key found in value.', $code = 0, \\Exception $previous = null)$/;"	v
Extension	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Extension.php	/^class Extension extends \\Twig_Extension$/;"	c
cacheStrategy	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Extension.php	/^    private $cacheStrategy;$/;"	v
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Extension.php	/^    public function __construct(CacheStrategyInterface $cacheStrategy)$/;"	f
cacheStrategy	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Extension.php	/^        $this->cacheStrategy = $cacheStrategy;$/;"	v
getCacheStrategy	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Extension.php	/^    public function getCacheStrategy()$/;"	f
getName	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Extension.php	/^    public function getName()$/;"	f
getTokenParsers	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Extension.php	/^    public function getTokenParsers()$/;"	f
CacheNode	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^class CacheNode extends \\Twig_Node$/;"	c
cacheCount	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^    private static $cacheCount = 1;$/;"	v
cacheCount	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^    private static $cacheCount = 1;$/;"	v
__construct	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^    public function __construct(\\Twig_Node_Expression $annotation, \\Twig_Node_Expression $keyInfo, \\Twig_Node $body, $lineno, $tag = null)$/;"	f
tag	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^    public function __construct(\\Twig_Node_Expression $annotation, \\Twig_Node_Expression $keyInfo, \\Twig_Node $body, $lineno, $tag = null)$/;"	v
compile	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^    public function compile(\\Twig_Compiler $compiler)$/;"	f
i	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^        $i = self::$cacheCount++;$/;"	v
extension	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^            $extension = 'Asm89\\Twig\\CacheExtension\\Extension';$/;"	v
extension	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\Node\CacheNode.php	/^            $extension = 'asm89_cache';$/;"	v
Cache	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^class Cache extends \\Twig_TokenParser$/;"	c
decideCacheEnd	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^    public function decideCacheEnd(\\Twig_Token $token)$/;"	f
getTag	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^    public function getTag()$/;"	f
parse	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^    public function parse(\\Twig_Token $token)$/;"	f
lineno	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^        $lineno = $token->getLine();$/;"	v
stream	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^        $stream = $this->parser->getStream();$/;"	v
annotation	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^        $annotation = $this->parser->getExpressionParser()->parseExpression();$/;"	v
key	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^        $key = $this->parser->getExpressionParser()->parseExpression();$/;"	v
body	.\vendor\asm89\twig-cache-extension\lib\Asm89\Twig\CacheExtension\TokenParser\Cache.php	/^        $body = $this->parser->subparse(array($this, 'decideCacheEnd'), true);$/;"	v
DoctrineCacheAdapterTest	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheProvider\DoctrineCacheAdapterTest.php	/^class DoctrineCacheAdapterTest extends \\PHPUnit_Framework_TestCase$/;"	c
testFetch	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheProvider\DoctrineCacheAdapterTest.php	/^    public function testFetch()$/;"	f
cacheMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheProvider\DoctrineCacheAdapterTest.php	/^        $cacheMock = $this->createCacheMock();$/;"	v
cache	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheProvider\DoctrineCacheAdapterTest.php	/^        $cache = new DoctrineCacheAdapter($cacheMock);$/;"	v
testSave	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheProvider\DoctrineCacheAdapterTest.php	/^    public function testSave()$/;"	f
cacheMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheProvider\DoctrineCacheAdapterTest.php	/^        $cacheMock = $this->createCacheMock();$/;"	v
cache	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheProvider\DoctrineCacheAdapterTest.php	/^        $cache = new DoctrineCacheAdapter($cacheMock);$/;"	v
createCacheMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheProvider\DoctrineCacheAdapterTest.php	/^    public function createCacheMock()$/;"	f
GenerationalCacheStrategyTest	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^class GenerationalCacheStrategyTest extends \\PHPUnit_Framework_TestCase$/;"	c
keyGeneratorMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    private $keyGeneratorMock;$/;"	v
cacheProviderMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    private $cacheProviderMock;$/;"	v
createCacheStrategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    public function createCacheStrategy($lifetime = 0)$/;"	f
keyGeneratorMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^        $this->keyGeneratorMock  = $this->createKeyGeneratorMock();$/;"	v
cacheProviderMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^        $this->cacheProviderMock = $this->createCacheProviderMock();$/;"	v
testGenerateKeyContainsAnnotation	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    public function testGenerateKeyContainsAnnotation()$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy();$/;"	v
testGenerationKeyThrowsExceptionWhenKeyGeneratorReturnsNull	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    public function testGenerationKeyThrowsExceptionWhenKeyGeneratorReturnsNull()$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy();$/;"	v
testSaveBlockUsesConfiguredLifetime	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    public function testSaveBlockUsesConfiguredLifetime($lifetime)$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy($lifetime);$/;"	v
getLifetimes	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    public function getLifetimes()$/;"	f
createKeyGeneratorMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    public function createKeyGeneratorMock()$/;"	f
createCacheProviderMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\GenerationCacheStrategyTest.php	/^    public function createCacheProviderMock()$/;"	f
IndexedChainingCacheStrategyTest	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^class IndexedChainingCacheStrategyTest extends \\PHPUnit_Framework_TestCase$/;"	c
cacheStrategyMocks	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^    private $cacheStrategyMocks = array();$/;"	v
cacheStrategyMocks	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^    private $cacheStrategyMocks = array();$/;"	v
createCacheStrategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^    public function createCacheStrategy()$/;"	f
cacheStrategyMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^            $cacheStrategyMock = $this->createCacheStrategyMock();$/;"	v
testGenerateKeyProxiesToAppropriateStrategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^    public function testGenerateKeyProxiesToAppropriateStrategy($key, $return)$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy();$/;"	v
generatedKey	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^        $generatedKey = $strategy->generateKey('v42', array($key => 'proxied_value'));$/;"	v
testGenerateKeyThrowsExceptionOnMissingKey	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^    public function testGenerateKeyThrowsExceptionOnMissingKey()$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy();$/;"	v
testGenerateKeyThrowsExceptionOnUnknownKey	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^    public function testGenerateKeyThrowsExceptionOnUnknownKey()$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy();$/;"	v
getStrategies	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^    public function getStrategies()$/;"	f
createCacheStrategyMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\IndexedChainingCacheStrategyTest.php	/^    public function createCacheStrategyMock()$/;"	f
LifetimeCacheStrategyTest	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^class LifetimeCacheStrategyTest extends \\PHPUnit_Framework_TestCase$/;"	c
cacheProviderMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^    private $cacheProviderMock;$/;"	v
createCacheStrategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^    public function createCacheStrategy()$/;"	f
cacheProviderMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^        $this->cacheProviderMock = $this->createCacheProviderMock();$/;"	v
testGenerateKeyUsesGivenLifetime	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^    public function testGenerateKeyUsesGivenLifetime()$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy();$/;"	v
key	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^        $key = $strategy->generateKey('v42', 42);$/;"	v
testGenerateKeyAnnotatesKey	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^    public function testGenerateKeyAnnotatesKey()$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy();$/;"	v
key	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^        $key = $strategy->generateKey('the_annotation', 42);$/;"	v
testGenerateKeyThrowsExceptionWhenNoLifetimeProvided	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^    public function testGenerateKeyThrowsExceptionWhenNoLifetimeProvided($value)$/;"	f
strategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^        $strategy = $this->createCacheStrategy();$/;"	v
getInvalidLifetimeValues	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^    public function getInvalidLifetimeValues()$/;"	f
createCacheProviderMock	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\CacheStrategy\LifetimeCacheStrategyTest.php	/^    public function createCacheProviderMock()$/;"	f
FunctionalExtensionTest	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^class FunctionalExtensionTest extends \\PHPUnit_Framework_TestCase$/;"	c
cache	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    private $cache;$/;"	v
createCacheProvider	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    protected function createCacheProvider()$/;"	f
cache	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $this->cache = new ArrayCache();$/;"	v
createCacheStrategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    protected function createCacheStrategy($name = null)$/;"	f
cacheProvider	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $cacheProvider = $this->createCacheProvider();$/;"	v
keyGenerator	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $keyGenerator  = $this->createKeyGenerator();$/;"	v
lifetime	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $lifetime      = 0;$/;"	v
createKeyGenerator	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    protected function createKeyGenerator()$/;"	f
createTwig	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    protected function createTwig($cacheStrategyName = null)$/;"	f
loader	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $loader = new Twig_Loader_Filesystem(__DIR__ . '\/fixtures\/');$/;"	v
twig	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $twig = new Twig_Environment($loader);$/;"	v
cacheExtension	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $cacheExtension = new Extension($this->createCacheStrategy($cacheStrategyName));$/;"	v
getValue	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    protected function getValue($value, $updatedAt)$/;"	f
testCachesWithSameCacheKey	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function testCachesWithSameCacheKey()$/;"	f
twig	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $twig = $this->createTwig();$/;"	v
rendered	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered = $twig->render('gcs_value.twig', array('value' => $this->getValue('asm89', 1)));$/;"	v
rendered2	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered2 = $twig->render('gcs_value.twig', array('value' => $this->getValue('fabpot', 1)));$/;"	v
testDifferentCacheOnDifferentAnnotation	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function testDifferentCacheOnDifferentAnnotation()$/;"	f
twig	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $twig = $this->createTwig();$/;"	v
rendered	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered = $twig->render('gcs_value.twig', array('value' => $this->getValue('asm89', 1)));$/;"	v
rendered2	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered2 = $twig->render('gcs_value.twig', array('value' => $this->getValue('fabpot', 1)));$/;"	v
rendered3	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered3 = $twig->render('gcs_value_v2.twig', array('value' => $this->getValue('fabpot', 1)));$/;"	v
testLifetimeCacheStrategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function testLifetimeCacheStrategy()$/;"	f
twig	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $twig = $this->createTwig('time');$/;"	v
rendered	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered = $twig->render('lcs_value.twig', array('value' => $this->getValue('asm89', 1)));$/;"	v
rendered2	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered2 = $twig->render('lcs_value.twig', array('value' => $this->getValue('fabpot', 1)));$/;"	v
rendered3	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered3 = $twig->render('lcs_value.twig', array('value' => $this->getValue('fabpot', 1)));$/;"	v
testIndexedChainingStrategy	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function testIndexedChainingStrategy()$/;"	f
twig	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $twig = $this->createTwig('indexed');$/;"	v
rendered	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered = $twig->render('ics_value.twig', array('value' => $this->getValue('asm89', 1)));$/;"	v
rendered2	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered2 = $twig->render('ics_value.twig', array('value' => $this->getValue('fabpot', 1)));$/;"	v
rendered3	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered3 = $twig->render('ics_value.twig', array('value' => $this->getValue('fabpot', 1)));$/;"	v
testIndexedChainingStrategyNeedsKey	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function testIndexedChainingStrategyNeedsKey()$/;"	f
twig	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $twig = $this->createTwig('indexed');$/;"	v
testAnnotationExpression	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function testAnnotationExpression()$/;"	f
twig	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $twig = $this->createTwig('indexed');$/;"	v
rendered	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $rendered = $twig->render('annotation_expression.twig', array('value' => $this->getValue('asm89', 1), 'version' => 1));$/;"	v
KeyGenerator	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^class KeyGenerator implements KeyGeneratorInterface$/;"	c
generateKey	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function generateKey($value)$/;"	f
Value	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^class Value$/;"	c
value	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    private $value;$/;"	v
updatedAt	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    private $updatedAt;$/;"	v
__construct	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function __construct($value, $updatedAt)$/;"	f
value	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $this->value     = $value;$/;"	v
updatedAt	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^        $this->updatedAt = $updatedAt;$/;"	v
getUpdatedAt	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function getUpdatedAt()$/;"	f
__toString	.\vendor\asm89\twig-cache-extension\test\Asm89\Twig\CacheExtension\Tests\FunctionalExtensionTest.php	/^    public function __toString()$/;"	f
autoload	.\vendor\asm89\twig-cache-extension\test\bootstrap.php	/^    $autoload = require_once $file;$/;"	v
autoloader	.\vendor\aura\intl\phpunit.php	/^$autoloader = __DIR__ . '\/vendor\/autoload.php';$/;"	v
BasicFormatter	.\vendor\aura\intl\src\BasicFormatter.php	/^class BasicFormatter implements FormatterInterface$/;"	c
format	.\vendor\aura\intl\src\BasicFormatter.php	/^    public function format($locale, $string, array $tokens_values)$/;"	f
replace	.\vendor\aura\intl\src\BasicFormatter.php	/^        $replace = [];$/;"	v
token	.\vendor\aura\intl\src\BasicFormatter.php	/^        foreach ($tokens_values as $token => $value) {$/;"	v
value	.\vendor\aura\intl\src\BasicFormatter.php	/^                $value = '"' . implode('", "', $value) . '"';$/;"	v
CannotFormat	.\vendor\aura\intl\src\Exception\CannotFormat.php	/^class CannotFormat extends \\Exception$/;"	c
CannotInstantiateFormatter	.\vendor\aura\intl\src\Exception\CannotInstantiateFormatter.php	/^class CannotInstantiateFormatter extends \\Exception$/;"	c
FormatterNotMapped	.\vendor\aura\intl\src\Exception\FormatterNotMapped.php	/^class FormatterNotMapped extends \\Exception$/;"	c
IcuVersionTooLow	.\vendor\aura\intl\src\Exception\IcuVersionTooLow.php	/^class IcuVersionTooLow extends \\Exception$/;"	c
Exception	.\vendor\aura\intl\src\Exception.php	/^class Exception extends \\Exception$/;"	c
FormatterInterface	.\vendor\aura\intl\src\FormatterInterface.php	/^interface FormatterInterface$/;"	i
format	.\vendor\aura\intl\src\FormatterInterface.php	/^    public function format($locale, $string, array $tokens_values);$/;"	f
FormatterLocator	.\vendor\aura\intl\src\FormatterLocator.php	/^class FormatterLocator$/;"	c
registry	.\vendor\aura\intl\src\FormatterLocator.php	/^    protected $registry;$/;"	v
converted	.\vendor\aura\intl\src\FormatterLocator.php	/^    protected $converted = [];$/;"	v
converted	.\vendor\aura\intl\src\FormatterLocator.php	/^    protected $converted = [];$/;"	v
__construct	.\vendor\aura\intl\src\FormatterLocator.php	/^    public function __construct(array $registry = [])$/;"	f
registry	.\vendor\aura\intl\src\FormatterLocator.php	/^    public function __construct(array $registry = [])$/;"	v
name	.\vendor\aura\intl\src\FormatterLocator.php	/^        foreach ($registry as $name => $spec) {$/;"	v
set	.\vendor\aura\intl\src\FormatterLocator.php	/^    public function set($name, $spec)$/;"	f
get	.\vendor\aura\intl\src\FormatterLocator.php	/^    public function get($name)$/;"	f
func	.\vendor\aura\intl\src\FormatterLocator.php	/^            $func = $this->registry[$name];$/;"	v
IntlFormatter	.\vendor\aura\intl\src\IntlFormatter.php	/^class IntlFormatter implements FormatterInterface$/;"	c
__construct	.\vendor\aura\intl\src\IntlFormatter.php	/^    public function __construct($icu_version = INTL_ICU_VERSION)$/;"	f
format	.\vendor\aura\intl\src\IntlFormatter.php	/^    public function format($locale, $string, array $tokens_values)$/;"	f
values	.\vendor\aura\intl\src\IntlFormatter.php	/^        $values = [];$/;"	v
token	.\vendor\aura\intl\src\IntlFormatter.php	/^        foreach ($tokens_values as $token => $value) {$/;"	v
value	.\vendor\aura\intl\src\IntlFormatter.php	/^                $value = '"' . implode('", "', $value) . '"';$/;"	v
formatter	.\vendor\aura\intl\src\IntlFormatter.php	/^            $formatter = new MessageFormatter($locale, $string);$/;"	v
result	.\vendor\aura\intl\src\IntlFormatter.php	/^        $result = $formatter->format($values);$/;"	v
throwCannotInstantiateFormatter	.\vendor\aura\intl\src\IntlFormatter.php	/^    protected function throwCannotInstantiateFormatter()$/;"	f
Package	.\vendor\aura\intl\src\Package.php	/^class Package$/;"	c
messages	.\vendor\aura\intl\src\Package.php	/^    protected $messages;$/;"	v
fallback	.\vendor\aura\intl\src\Package.php	/^    protected $fallback;$/;"	v
formatter	.\vendor\aura\intl\src\Package.php	/^    protected $formatter;$/;"	v
__construct	.\vendor\aura\intl\src\Package.php	/^    public function __construct($/;"	f
formatter	.\vendor\aura\intl\src\Package.php	/^        $formatter      = 'basic',$/;"	v
fallback	.\vendor\aura\intl\src\Package.php	/^        $fallback       = null,$/;"	v
messages	.\vendor\aura\intl\src\Package.php	/^        array $messages = []$/;"	v
formatter	.\vendor\aura\intl\src\Package.php	/^        $this->formatter = $formatter;$/;"	v
fallback	.\vendor\aura\intl\src\Package.php	/^        $this->fallback  = $fallback;$/;"	v
messages	.\vendor\aura\intl\src\Package.php	/^        $this->messages  = $messages;$/;"	v
setMessages	.\vendor\aura\intl\src\Package.php	/^    public function setMessages(array $messages)$/;"	f
messages	.\vendor\aura\intl\src\Package.php	/^        $this->messages = $messages;$/;"	v
addMessage	.\vendor\aura\intl\src\Package.php	/^    public function addMessage($key, $message)$/;"	f
addMessages	.\vendor\aura\intl\src\Package.php	/^    public function addMessages($messages)$/;"	f
messages	.\vendor\aura\intl\src\Package.php	/^        $this->messages = array_merge($this->messages, $messages);$/;"	v
getMessages	.\vendor\aura\intl\src\Package.php	/^    public function getMessages()$/;"	f
getMessage	.\vendor\aura\intl\src\Package.php	/^    public function getMessage($key)$/;"	f
setFormatter	.\vendor\aura\intl\src\Package.php	/^    public function setFormatter($formatter)$/;"	f
formatter	.\vendor\aura\intl\src\Package.php	/^        $this->formatter = $formatter;$/;"	v
getFormatter	.\vendor\aura\intl\src\Package.php	/^    public function getFormatter()$/;"	f
setFallback	.\vendor\aura\intl\src\Package.php	/^    public function setFallback($fallback)$/;"	f
fallback	.\vendor\aura\intl\src\Package.php	/^        $this->fallback = $fallback;$/;"	v
getFallback	.\vendor\aura\intl\src\Package.php	/^    public function getFallback()$/;"	f
PackageFactory	.\vendor\aura\intl\src\PackageFactory.php	/^class PackageFactory$/;"	c
newInstance	.\vendor\aura\intl\src\PackageFactory.php	/^    public function newInstance(array $info)$/;"	f
package	.\vendor\aura\intl\src\PackageFactory.php	/^        $package = new Package;$/;"	v
PackageLocator	.\vendor\aura\intl\src\PackageLocator.php	/^class PackageLocator implements PackageLocatorInterface$/;"	c
registry	.\vendor\aura\intl\src\PackageLocator.php	/^    protected $registry = [];$/;"	v
registry	.\vendor\aura\intl\src\PackageLocator.php	/^    protected $registry = [];$/;"	v
converted	.\vendor\aura\intl\src\PackageLocator.php	/^    protected $converted = [];$/;"	v
converted	.\vendor\aura\intl\src\PackageLocator.php	/^    protected $converted = [];$/;"	v
__construct	.\vendor\aura\intl\src\PackageLocator.php	/^    public function __construct(array $registry = [])$/;"	f
registry	.\vendor\aura\intl\src\PackageLocator.php	/^    public function __construct(array $registry = [])$/;"	v
name	.\vendor\aura\intl\src\PackageLocator.php	/^        foreach ($registry as $name => $locales) {$/;"	v
locale	.\vendor\aura\intl\src\PackageLocator.php	/^            foreach ($locales as $locale => $spec) {$/;"	v
set	.\vendor\aura\intl\src\PackageLocator.php	/^    public function set($name, $locale, callable $spec)$/;"	f
get	.\vendor\aura\intl\src\PackageLocator.php	/^    public function get($name, $locale)$/;"	f
func	.\vendor\aura\intl\src\PackageLocator.php	/^            $func = $this->registry[$name][$locale];$/;"	v
PackageLocatorInterface	.\vendor\aura\intl\src\PackageLocatorInterface.php	/^interface PackageLocatorInterface$/;"	i
set	.\vendor\aura\intl\src\PackageLocatorInterface.php	/^    public function set($name, $locale, callable $spec);$/;"	f
get	.\vendor\aura\intl\src\PackageLocatorInterface.php	/^    public function get($name, $locale);$/;"	f
Translator	.\vendor\aura\intl\src\Translator.php	/^class Translator implements TranslatorInterface$/;"	c
fallback	.\vendor\aura\intl\src\Translator.php	/^    protected $fallback;$/;"	v
formatter	.\vendor\aura\intl\src\Translator.php	/^    protected $formatter;$/;"	v
locale	.\vendor\aura\intl\src\Translator.php	/^    protected $locale;$/;"	v
package	.\vendor\aura\intl\src\Translator.php	/^    protected $package;$/;"	v
__construct	.\vendor\aura\intl\src\Translator.php	/^    public function __construct($/;"	f
fallback	.\vendor\aura\intl\src\Translator.php	/^        TranslatorInterface $fallback = null$/;"	v
locale	.\vendor\aura\intl\src\Translator.php	/^        $this->locale    = $locale;$/;"	v
package	.\vendor\aura\intl\src\Translator.php	/^        $this->package   = $package;$/;"	v
formatter	.\vendor\aura\intl\src\Translator.php	/^        $this->formatter = $formatter;$/;"	v
fallback	.\vendor\aura\intl\src\Translator.php	/^        $this->fallback  = $fallback;$/;"	v
getMessage	.\vendor\aura\intl\src\Translator.php	/^    protected function getMessage($key)$/;"	f
message	.\vendor\aura\intl\src\Translator.php	/^        $message = $this->package->getMessage($key);$/;"	v
message	.\vendor\aura\intl\src\Translator.php	/^            $message = $this->fallback->getMessage($key);$/;"	v
translate	.\vendor\aura\intl\src\Translator.php	/^    public function translate($key, array $tokens_values = [])$/;"	f
tokens_values	.\vendor\aura\intl\src\Translator.php	/^    public function translate($key, array $tokens_values = [])$/;"	v
message	.\vendor\aura\intl\src\Translator.php	/^        $message = $this->getMessage($key);$/;"	v
message	.\vendor\aura\intl\src\Translator.php	/^            $message = $key;$/;"	v
getPackage	.\vendor\aura\intl\src\Translator.php	/^    public function getPackage()$/;"	f
TranslatorFactory	.\vendor\aura\intl\src\TranslatorFactory.php	/^class TranslatorFactory$/;"	c
to	.\vendor\aura\intl\src\TranslatorFactory.php	/^     * The class to use for new instances.$/;"	c
class	.\vendor\aura\intl\src\TranslatorFactory.php	/^    protected $class = Translator::class;$/;"	v
class	.\vendor\aura\intl\src\TranslatorFactory.php	/^    protected $class = Translator::class;$/;"	v
newInstance	.\vendor\aura\intl\src\TranslatorFactory.php	/^    public function newInstance($/;"	f
fallback	.\vendor\aura\intl\src\TranslatorFactory.php	/^        TranslatorInterface $fallback = null$/;"	v
class	.\vendor\aura\intl\src\TranslatorFactory.php	/^        $class = $this->class;$/;"	v
TranslatorInterface	.\vendor\aura\intl\src\TranslatorInterface.php	/^interface TranslatorInterface$/;"	i
translate	.\vendor\aura\intl\src\TranslatorInterface.php	/^    public function translate($key, array $tokens_values = []);$/;"	f
tokens_values	.\vendor\aura\intl\src\TranslatorInterface.php	/^    public function translate($key, array $tokens_values = []);$/;"	v
TranslatorLocator	.\vendor\aura\intl\src\TranslatorLocator.php	/^class TranslatorLocator$/;"	c
registry	.\vendor\aura\intl\src\TranslatorLocator.php	/^    protected $registry;$/;"	v
locale	.\vendor\aura\intl\src\TranslatorLocator.php	/^    protected $locale;$/;"	v
factory	.\vendor\aura\intl\src\TranslatorLocator.php	/^    protected $factory;$/;"	v
packages	.\vendor\aura\intl\src\TranslatorLocator.php	/^    protected $packages;$/;"	v
formatters	.\vendor\aura\intl\src\TranslatorLocator.php	/^    protected $formatters;$/;"	v
__construct	.\vendor\aura\intl\src\TranslatorLocator.php	/^    public function __construct($/;"	f
packages	.\vendor\aura\intl\src\TranslatorLocator.php	/^        $this->packages = $packages;$/;"	v
factory	.\vendor\aura\intl\src\TranslatorLocator.php	/^        $this->factory = $factory;$/;"	v
formatters	.\vendor\aura\intl\src\TranslatorLocator.php	/^        $this->formatters = $formatters;$/;"	v
setLocale	.\vendor\aura\intl\src\TranslatorLocator.php	/^    public function setLocale($locale)$/;"	f
locale	.\vendor\aura\intl\src\TranslatorLocator.php	/^        $this->locale = $locale;$/;"	v
getLocale	.\vendor\aura\intl\src\TranslatorLocator.php	/^    public function getLocale()$/;"	f
getFactory	.\vendor\aura\intl\src\TranslatorLocator.php	/^    public function getFactory()$/;"	f
getPackages	.\vendor\aura\intl\src\TranslatorLocator.php	/^    public function getPackages()$/;"	f
getFormatters	.\vendor\aura\intl\src\TranslatorLocator.php	/^    public function getFormatters()$/;"	f
get	.\vendor\aura\intl\src\TranslatorLocator.php	/^    public function get($name, $locale = null)$/;"	f
locale	.\vendor\aura\intl\src\TranslatorLocator.php	/^    public function get($name, $locale = null)$/;"	v
locale	.\vendor\aura\intl\src\TranslatorLocator.php	/^            $locale = $this->getLocale();$/;"	v
package	.\vendor\aura\intl\src\TranslatorLocator.php	/^            $package = $this->packages->get($name, $locale);$/;"	v
translator	.\vendor\aura\intl\src\TranslatorLocator.php	/^            $translator = $this->factory->newInstance($/;"	v
TranslatorLocatorFactory	.\vendor\aura\intl\src\TranslatorLocatorFactory.php	/^class TranslatorLocatorFactory$/;"	c
newInstance	.\vendor\aura\intl\src\TranslatorLocatorFactory.php	/^    public function newInstance()$/;"	f
BasicFormatterTest	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^class BasicFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
newFormatter	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^    protected function newFormatter()$/;"	f
testFormat	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^    public function testFormat()$/;"	f
formatter	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $formatter = $this->newFormatter();$/;"	v
locale	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $locale = 'en_US';$/;"	v
expect	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $expect = 'Hello world 88!';$/;"	v
tokens_values	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $tokens_values = ['foo' => 'world', 'bar' => '88', 'baz' => '!'];$/;"	v
string	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $string = 'Hello {foo} {bar}{baz}';$/;"	v
actual	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $actual = $formatter->format($locale, $string, $tokens_values);$/;"	v
tokens_values	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $tokens_values = ['array' => ['foo', 'bar', 'baz']];$/;"	v
string	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $string = 'Array {array}';$/;"	v
expect	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $expect = 'Array "foo", "bar", "baz"';$/;"	v
actual	.\vendor\aura\intl\tests\BasicFormatterTest.php	/^        $actual = $formatter->format($locale, $string, $tokens_values);$/;"	v
FormatterLocatorTest	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^class FormatterLocatorTest extends \\PHPUnit_Framework_TestCase$/;"	c
test__constructAndGet	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^    public function test__constructAndGet()$/;"	f
formatters	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^        $formatters = new FormatterLocator([$/;"	v
expect	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^        $expect = 'Aura\\Intl\\MockFormatter';$/;"	v
actual	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^        $actual = $formatters->get('mock');$/;"	v
testSetAndGet	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^    public function testSetAndGet()$/;"	f
formatters	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^        $formatters = new FormatterLocator;$/;"	v
expect	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^        $expect = 'Aura\\Intl\\MockFormatter';$/;"	v
actual	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^        $actual = $formatters->get('mock');$/;"	v
testGet_noSuchFormatter	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^    public function testGet_noSuchFormatter()$/;"	f
formatters	.\vendor\aura\intl\tests\FormatterLocatorTest.php	/^        $formatters = new FormatterLocator;$/;"	v
IntlFormatterTest	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^class IntlFormatterTest extends BasicFormatterTest$/;"	c
newFormatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    protected function newFormatter()$/;"	f
setUp	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function setUp()$/;"	f
testIntlVersion	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function testIntlVersion()$/;"	f
formatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $formatter = new IntlFormatter('4.7');$/;"	v
fmt	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^     * It seems $fmt = msgfmt_create($locale, $string); is not creating with$/;"	v
testFormat_plural	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function testFormat_plural()$/;"	f
formatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $formatter = $this->newFormatter();$/;"	v
locale	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $locale = 'en_US';$/;"	v
string	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $string = '{pages,plural,'$/;"	v
tokens_values	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $tokens_values = ['page' => 0, 'pages' => 0];$/;"	v
expect	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $expect = 'No pages.';$/;"	v
actual	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $actual = $formatter->format($locale, $string, $tokens_values);$/;"	v
tokens_values	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $tokens_values = ['page' => 1, 'pages' => 1];$/;"	v
expect	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $expect = 'One page only.';$/;"	v
actual	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $actual = $formatter->format($locale, $string, $tokens_values);$/;"	v
tokens_values	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $tokens_values = ['page' => 1, 'pages' => 2];$/;"	v
expect	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $expect = 'Page 1 of 2 pages.';$/;"	v
actual	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $actual = $formatter->format($locale, $string, $tokens_values);$/;"	v
testFormat_select	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function testFormat_select($tokens_values, $expect)$/;"	f
locale	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $locale = 'en_US';$/;"	v
string	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $string = "$/;"	v
formatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $formatter = $this->newFormatter();$/;"	v
actual	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $actual = $formatter->format($locale, $string, $tokens_values);$/;"	v
provide_testFormat_select	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function provide_testFormat_select()$/;"	f
testFormat_cannotInstantiateFormatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function testFormat_cannotInstantiateFormatter()$/;"	f
locale	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $locale = 'en_US';$/;"	v
string	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $string = "$/;"	v
formatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $formatter = $this->newFormatter();$/;"	v
actual	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $actual = $formatter->format($locale, $string, array('gender' => 'female', 'count' => 5,  'from' => 'Alice', 'to' => 'Bob'));$/;"	v
testFormat_cannotFormat	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function testFormat_cannotFormat()$/;"	f
locale	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $locale = 'en_US';$/;"	v
string	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $string = 'Hello {foo}';$/;"	v
tokens_values	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $tokens_values = ['bar' => 'baz']; \/\/ no 'foo' token$/;"	v
formatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $formatter = $this->newFormatter();$/;"	v
expect	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $expect = 'Hello {foo}';$/;"	v
actual	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $actual = $formatter->format($locale, $string, $tokens_values);$/;"	v
testIssue6	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function testIssue6($tokens_values, $expect)$/;"	f
locale	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $locale = 'en_US';$/;"	v
string	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $string = '{gender, select, female{{name} is {gender} and she report bugs!} male{{name} is {gender} and he report bugs!} other{{name} report bugs!}}';$/;"	v
formatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $formatter = $this->newFormatter();$/;"	v
actual	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $actual = $formatter->format($locale, $string, $tokens_values);$/;"	v
testEmptyStringThrowsException	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function testEmptyStringThrowsException()$/;"	f
locale	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $locale = 'en_US';$/;"	v
string	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $string = '';$/;"	v
formatter	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $formatter = $this->newFormatter();$/;"	v
actual	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^        $actual = $formatter->format($locale, $string, []);$/;"	v
expect	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^            $expect = '';$/;"	v
provide_testIssue6	.\vendor\aura\intl\tests\IntlFormatterTest.php	/^    public function provide_testIssue6()$/;"	f
MockFormatter	.\vendor\aura\intl\tests\MockFormatter.php	/^class MockFormatter implements FormatterInterface$/;"	c
format	.\vendor\aura\intl\tests\MockFormatter.php	/^    public function format($locale, $string, array $tokens_values = [])$/;"	f
tokens_values	.\vendor\aura\intl\tests\MockFormatter.php	/^    public function format($locale, $string, array $tokens_values = [])$/;"	v
for	.\vendor\aura\intl\tests\PackageLocatorTest.php	/^ * Test class for Package.$/;"	c
PackageLocatorTest	.\vendor\aura\intl\tests\PackageLocatorTest.php	/^class PackageLocatorTest extends \\PHPUnit_Framework_TestCase$/;"	c
packages	.\vendor\aura\intl\tests\PackageLocatorTest.php	/^    protected $packages;$/;"	v
setUp	.\vendor\aura\intl\tests\PackageLocatorTest.php	/^    protected function setUp()$/;"	f
packages	.\vendor\aura\intl\tests\PackageLocatorTest.php	/^        $this->packages = new PackageLocator([$/;"	v
testGet	.\vendor\aura\intl\tests\PackageLocatorTest.php	/^    public function testGet()$/;"	f
first	.\vendor\aura\intl\tests\PackageLocatorTest.php	/^        $first = $this->packages->get('Vendor.Foo', 'en_US');$/;"	v
again	.\vendor\aura\intl\tests\PackageLocatorTest.php	/^        $again = $this->packages->get('Vendor.Foo', 'en_US');$/;"	v
for	.\vendor\aura\intl\tests\PackageTest.php	/^ * Test class for Package.$/;"	c
PackageTest	.\vendor\aura\intl\tests\PackageTest.php	/^class PackageTest extends \\PHPUnit_Framework_TestCase$/;"	c
package	.\vendor\aura\intl\tests\PackageTest.php	/^    protected $package;$/;"	v
setUp	.\vendor\aura\intl\tests\PackageTest.php	/^    protected function setUp()$/;"	f
factory	.\vendor\aura\intl\tests\PackageTest.php	/^        $factory = new PackageFactory;$/;"	v
package	.\vendor\aura\intl\tests\PackageTest.php	/^        $this->package = $factory->newInstance([$/;"	v
testGet	.\vendor\aura\intl\tests\PackageTest.php	/^    public function testGet()$/;"	f
expect	.\vendor\aura\intl\tests\PackageTest.php	/^        $expect = 'Vendor.Fallback';$/;"	v
actual	.\vendor\aura\intl\tests\PackageTest.php	/^        $actual = $this->package->getFallback();$/;"	v
expect	.\vendor\aura\intl\tests\PackageTest.php	/^        $expect = 'intl';$/;"	v
actual	.\vendor\aura\intl\tests\PackageTest.php	/^        $actual = $this->package->getFormatter();$/;"	v
expect	.\vendor\aura\intl\tests\PackageTest.php	/^        $expect = [$/;"	v
actual	.\vendor\aura\intl\tests\PackageTest.php	/^        $actual = $this->package->getMessages();$/;"	v
TranslatorLocatorFactoryTest	.\vendor\aura\intl\tests\TranslatorLocatorFactoryTest.php	/^class TranslatorLocatorFactoryTest extends \\PHPUnit_Framework_TestCase$/;"	c
test__newInstance	.\vendor\aura\intl\tests\TranslatorLocatorFactoryTest.php	/^    public function test__newInstance()$/;"	f
factory	.\vendor\aura\intl\tests\TranslatorLocatorFactoryTest.php	/^        $factory = new TranslatorLocatorFactory();$/;"	v
TranslatorLocatorTest	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^class TranslatorLocatorTest extends \\PHPUnit_Framework_TestCase$/;"	c
factory	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    protected $factory;$/;"	v
translators	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    protected $translators;$/;"	v
packages	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    protected $packages;$/;"	v
formatters	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    protected $formatters;$/;"	v
setUp	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    protected function setUp()$/;"	f
packages	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $this->packages = new PackageLocator($registry);$/;"	v
formatters	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $this->formatters = new FormatterLocator([$/;"	v
factory	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $this->factory = new TranslatorFactory;$/;"	v
translators	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $this->translators = new TranslatorLocator($/;"	v
testSetAndGetLocale	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    public function testSetAndGetLocale()$/;"	f
expect	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $expect = 'pt_BR';$/;"	v
actual	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $actual = $this->translators->getLocale();$/;"	v
testGetFactory	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    public function testGetFactory()$/;"	f
actual	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $actual = $this->translators->getFactory();$/;"	v
testGet	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    public function testGet()$/;"	f
actual	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $actual = $this->translators->get('Vendor.Package');$/;"	v
testGetPackages	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    public function testGetPackages()$/;"	f
actual	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $actual = $this->translators->getPackages();$/;"	v
testGetFormatterLocator	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    public function testGetFormatterLocator()$/;"	f
actual	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $actual = $this->translators->getFormatters();$/;"	v
testIssue9	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    public function testIssue9()$/;"	f
package	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^            $package = new Package('mock');$/;"	v
translator	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $translator = $this->translators->get('Vendor.Package', 'en_UK');$/;"	v
expect	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $expect = 'The text for "foo."';$/;"	v
testIssue9Failure	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^    public function testIssue9Failure()$/;"	f
package	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        $package = new Package;$/;"	v
translator	.\vendor\aura\intl\tests\TranslatorLocatorTest.php	/^        \/\/ $translator = $this->translators->get('Vendor.Package', 'en_UK');$/;"	v
TranslatorTest	.\vendor\aura\intl\tests\TranslatorTest.php	/^class TranslatorTest extends \\PHPUnit_Framework_TestCase$/;"	c
translator	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected $translator;$/;"	v
factory	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected $factory;$/;"	v
package	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected $package;$/;"	v
locale	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected $locale = 'en_US';$/;"	v
locale	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected $locale = 'en_US';$/;"	v
messages	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected $messages = [$/;"	v
messages	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected $messages = [$/;"	v
formatter	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected $formatter;$/;"	v
newTranslator	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected function newTranslator(TranslatorInterface $fallback = null)$/;"	f
fallback	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected function newTranslator(TranslatorInterface $fallback = null)$/;"	v
setUp	.\vendor\aura\intl\tests\TranslatorTest.php	/^    protected function setUp()$/;"	f
factory	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $this->factory = new TranslatorFactory;$/;"	v
formatter	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $this->formatter = new MockFormatter;$/;"	v
package	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $this->package = new Package;$/;"	v
translator	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $this->translator = $this->newTranslator();$/;"	v
testTranslate	.\vendor\aura\intl\tests\TranslatorTest.php	/^    public function testTranslate()$/;"	f
expect	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $expect = 'Foo text';$/;"	v
actual	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $actual = $this->translator->translate('TEXT_FOO');$/;"	v
expect	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $expect = 'Foo text';$/;"	v
actual	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $actual = $this->translator->translate('TEXT_FOO', ['foo' => 'bar']);$/;"	v
expect	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $expect = 'TEXT_NONE';$/;"	v
actual	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $actual = $this->translator->translate('TEXT_NONE');$/;"	v
testTranslate_fallback	.\vendor\aura\intl\tests\TranslatorTest.php	/^    public function testTranslate_fallback()$/;"	f
package	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $package = new Package;$/;"	v
fallback	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $fallback = new Translator($/;"	v
translator	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $translator = $this->newTranslator($fallback);$/;"	v
expect	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $expect = 'Fallback text';$/;"	v
actual	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $actual = $translator->translate('TEXT_NONE');$/;"	v
testTranslateMissingKey	.\vendor\aura\intl\tests\TranslatorTest.php	/^    public function testTranslateMissingKey()$/;"	f
formatter	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $formatter = $this->getMockBuilder(get_class($this->formatter))$/;"	v
translator	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $translator = new Translator('en_US', new Package, $formatter);$/;"	v
expect	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $expect = 'FORMATTED';$/;"	v
actual	.\vendor\aura\intl\tests\TranslatorTest.php	/^        $actual = $translator->translate('TEXT', ['var' => 'SOME']);$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    protected $_configInitialized = false;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    protected $_configInitialized = false;$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    public function config($key = null, $value = null, $merge = true)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    public function config($key = null, $value = null, $merge = true)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            $this->_config = $this->_defaultConfig;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            $this->_configInitialized = true;$/;"	v
_configWrite	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    protected function _configWrite($key, $value, $merge = false)$/;"	f
merge	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    protected function _configWrite($key, $value, $merge = false)$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        if (is_string($key) && $value === null) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            $update = is_array($key) ? $key : [$key => $value];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^                $this->_config = array_merge($this->_config, Hash::expand($update));$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^                $this->_config = Hash::merge($this->_config, Hash::expand($update));$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            foreach ($key as $k => $val) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        $update =& $this->_config;$/;"	v
stack	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        $stack = explode('.', $key);$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            $update =& $update[$k];$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        $update = $value;$/;"	v
_configDelete	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    protected function _configDelete($key)$/;"	f
update	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        $update =& $this->_config;$/;"	v
stack	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        $stack = explode('.', $key);$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        $length = count($stack);$/;"	v
i	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        foreach ($stack as $i => $k) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            $update =& $update[$k];$/;"	v
_configRead	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    protected function _configRead($key)$/;"	f
return	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^        $return = $this->_config;$/;"	v
return	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^                $return = null;$/;"	v
return	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            $return = $return[$k];$/;"	v
configShallow	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    public function configShallow($key, $value = null)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^    public function configShallow($key, $value = null)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            $this->_config = $this->_defaultConfig;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver\src\Config\ConfigTrait.php	/^            $this->_configInitialized = true;$/;"	v
_instance	.\vendor\cakedc\cakephp-oracle-driver\src\Core\Singleton.php	/^    protected static $_instance;$/;"	v
getInstance	.\vendor\cakedc\cakephp-oracle-driver\src\Core\Singleton.php	/^    final public static function getInstance()$/;"	f
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Core\Singleton.php	/^    final private function __construct()$/;"	f
init	.\vendor\cakedc\cakephp-oracle-driver\src\Core\Singleton.php	/^    protected function init()$/;"	f
__wakeup	.\vendor\cakedc\cakephp-oracle-driver\src\Core\Singleton.php	/^    final private function __wakeup()$/;"	f
__clone	.\vendor\cakedc\cakephp-oracle-driver\src\Core\Singleton.php	/^    final private function __clone()$/;"	f
_startQuote	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_startQuote = '"';$/;"	v
_startQuote	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_startQuote = '"';$/;"	v
_endQuote	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_endQuote = '"';$/;"	v
_endQuote	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_endQuote = '"';$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^     * The schema dialect class for this driver$/;"	c
_schemaDialect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_schemaDialect;$/;"	v
_transformDistinct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _transformDistinct($query)$/;"	f
_selectQueryTranslator	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _selectQueryTranslator($query)$/;"	f
limit	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $limit = $query->clause('limit');$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $offset = $query->clause('offset');$/;"	v
_pagingSubquery	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _pagingSubquery($original, $limit, $offset)$/;"	f
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $field = 'cake_paging_out."_cake_page_rownum_"';$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $query = clone $original;$/;"	v
outer	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $outer = new Query($query->getConnection());$/;"	v
outer2	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $outer2 = new Query($query->getConnection());$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            $value = (int) $offset + (int) $limit;$/;"	v
_expressionTranslators	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _expressionTranslators()$/;"	f
namespace	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $namespace = 'Cake\\Database\\Expression';$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^     * @param \\Cake\\Database\\Expression\\FunctionExpression $expression The function expression$/;"	f
_transformFunctionExpression	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _transformFunctionExpression(FunctionExpression $expression)$/;"	f
p	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                                $p = ['value' => [$p => 'literal'], 'type' => null];$/;"	v
time	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                $time = new FunctionExpression('LOCALTIMESTAMP',$/;"	v
time	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                $time = new FunctionExpression('LOCALTIMESTAMP',$/;"	v
keys	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                                $keys = explode(' ', $p);$/;"	v
unit	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                                $unit = array_pop($keys);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                                $value = implode(' ', $keys);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                                $value = str_replace("'", '', $value);$/;"	v
p	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                                $p = sprintf("'%s' %s", $value, $unit);$/;"	v
schemaDialect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    public function schemaDialect()$/;"	f
_schemaDialect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            $this->_schemaDialect = new OracleSchema($this);$/;"	v
disableForeignKeySQL	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    public function disableForeignKeySQL()$/;"	f
enableForeignKeySQL	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    public function enableForeignKeySQL()$/;"	f
_processAllForeignKeys	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _processAllForeignKeys($type)$/;"	f
startQuote	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $startQuote = $this->_startQuote;$/;"	v
endQuote	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $endQuote = $this->_endQuote;$/;"	v
schemaName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            $schemaName = strtoupper($this->_config['schema']);$/;"	v
fromWhere	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            $fromWhere = "from all_constraints$/;"	v
fromWhere	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            $fromWhere = "from user_constraints$/;"	v
newCompiler	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    public function newCompiler()$/;"	f
_insertQueryTranslator	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _insertQueryTranslator($query)$/;"	f
v	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $v = $query->clause('values');$/;"	v
newQuery	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $newQuery = $query->connection()->newQuery();$/;"	v
cols	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $cols = $v->columns();$/;"	v
placeholder	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $placeholder = 0;$/;"	v
replaceQuery	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        $replaceQuery = false;$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^        foreach ($v->values() as $k => $val) {$/;"	v
fillLength	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            $fillLength = count($cols) - count($val);$/;"	v
val	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                $val = array_merge($val, array_fill(0, $fillLength, null));$/;"	v
col	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            foreach ($val as $col => $attr) {$/;"	v
select	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            $select = array_combine($cols, $val);$/;"	v
replaceQuery	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^                $replaceQuery = true;$/;"	v
q	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Dialect\OracleDialectTrait.php	/^            $q = $newQuery->connection()->newQuery();$/;"	v
OracleBase	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^abstract class OracleBase extends Driver$/;"	c
_baseConfig	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    protected $_baseConfig = [$/;"	v
_baseConfig	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    protected $_baseConfig = [$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    protected $_defaultConfig = [];$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    protected $_defaultConfig = [];$/;"	v
connect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function connect()$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $config = $this->_config;$/;"	v
dsn	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $dsn = $this->getDSN();$/;"	v
getDSN	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function getDSN()$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $config = $this->_config;$/;"	v
service	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^            $service = 'SERVICE_NAME=' . $config['database'];$/;"	v
serviceName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $serviceName = $config['sid'];$/;"	v
service	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $service = 'SID=' . $serviceName;$/;"	v
pooled	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^            $pooled = '';$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^            $instance = '';$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $instance = '(INSTANCE_NAME = ' . $config['instance'] . ')';$/;"	v
pooled	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $pooled = '(SERVER=POOLED)';$/;"	v
supportsDynamicConstraints	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function supportsDynamicConstraints()$/;"	f
prepare	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function prepare($query)$/;"	f
isObject	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $isObject = ($query instanceof \\Cake\\ORM\\Query) || ($query instanceof \\Cake\\Database\\Query);$/;"	v
queryStringRaw	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $queryStringRaw = $isObject ? $query->sql() : $query;$/;"	v
queryString	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $queryString = $this->_fromDualIfy($queryStringRaw);$/;"	v
innerStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $innerStatement = $this->_connection->prepare($queryString);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $statement = $this->_wrapStatement($innerStatement);$/;"	v
disableBuffer	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $disableBuffer = false;$/;"	v
normalizedQuery	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $normalizedQuery = substr(strtolower(trim($queryString, " \\t\\n\\r\\0\\x0B(")), 0, 6);$/;"	v
disableBuffer	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^            $disableBuffer = true;$/;"	v
_fromDualIfy	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    protected function _fromDualIfy($queryString)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $statement = strtolower(trim($queryString));$/;"	v
convertPositionalToNamedPlaceholders	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function convertPositionalToNamedPlaceholders($query)$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $count = 0;$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $inLiteral = false;$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $stmtLen = strlen($query);$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $paramMap = [];$/;"	v
len	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $len = strlen($paramMap[$count]);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $query = substr_replace($query, ":param$count", $i, 1);$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $stmtLen = strlen($query);$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $inLiteral = !$inLiteral;$/;"	v
lastInsertId	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function lastInsertId($table = null, $column = null)$/;"	f
column	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function lastInsertId($table = null, $column = null)$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $sequenceName = 'seq_' . strtolower($table);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $statement = $this->_connection->query("SELECT {$sequenceName}.CURRVAL FROM DUAL");$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $result = $statement->fetch();$/;"	v
isConnected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function isConnected()$/;"	f
connected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^            $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $connected = $this->_connection->query('SELECT 1 FROM DUAL');$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^                $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^        $this->connected = !empty($connected);$/;"	v
quoteIfAutoQuote	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function quoteIfAutoQuote($identifier)$/;"	f
_wrapStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    protected function _wrapStatement($statement)$/;"	f
isOci	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function isOci()$/;"	f
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function prepareMethod($queryString, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleBase.php	/^    public function prepareMethod($queryString, $options = [])$/;"	v
OracleOCI	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^class OracleOCI extends OracleBase$/;"	c
_connect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^    protected function _connect($dsn, array $config)$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^        $connection = new OCI8Connection($dsn, $config['username'], $config['password'], $config['flags']);$/;"	v
enabled	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^    public function enabled()$/;"	f
isConnected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^    public function isConnected()$/;"	f
connected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^            $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^                $connected = $this->_connection->query('SELECT 1 FROM DUAL');$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^                $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^        $this->connected = !empty($connected);$/;"	v
lastInsertId	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^    public function lastInsertId($table = null, $column = null)$/;"	f
column	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^    public function lastInsertId($table = null, $column = null)$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^        $sequenceName = 'seq_' . strtolower($table);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^        $statement = $this->_connection->query("SELECT {$sequenceName}.CURRVAL FROM DUAL");$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^        $result = $statement->fetch(PDO::FETCH_NUM);$/;"	v
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^    public function prepareMethod($queryString, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^    public function prepareMethod($queryString, $options = [])$/;"	v
innerStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^        $innerStatement = $this->_connection->prepare($queryString);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^        $statement = new MethodPDOStatement($innerStatement, $this);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^            $statement = new MethodOracleStatement($statement, $this);$/;"	v
isOci	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OracleOCI.php	/^    public function isOci() {$/;"	f
OraclePDO	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OraclePDO.php	/^class OraclePDO extends OracleBase {$/;"	c
_connect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OraclePDO.php	/^    protected function _connect($database, array $config) {$/;"	f
database	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OraclePDO.php	/^        $database = 'oci:dbname=' . $database;$/;"	v
enabled	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Driver\OraclePDO.php	/^    public function enabled() {$/;"	f
UnallowedDataTypeException	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Exception\UnallowedDataTypeException.php	/^class UnallowedDataTypeException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Exception\UnallowedDataTypeException.php	/^    protected $_messageTemplate = 'Column type %s not supported.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Exception\UnallowedDataTypeException.php	/^    protected $_messageTemplate = 'Column type %s not supported.';$/;"	v
represents	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^ * This class represents a function call string in a SQL statement. Calls can be$/;"	c
call	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^ * This class represents a function call string in a SQL statement. Calls can be$/;"	f
and	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^ * constructed by passing the name of the function and a list of params.$/;"	f
SimpleExpression	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^class SimpleExpression implements ExpressionInterface$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^     * The name of the function to be constructed when generating the SQL string$/;"	f
_name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^    protected $_name;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^     * Constructor. Takes a name for the function to be invoked.$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^     * @param string $name the name of the function to be constructed$/;"	f
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^    public function __construct($name, $returnType = 'string')$/;"	f
returnType	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^    public function __construct($name, $returnType = 'string')$/;"	v
_name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^        $this->_name = $name;$/;"	v
_returnType	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^        $this->_returnType = $returnType;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^     * Sets the name of the SQL function to be invoke in this expression,$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^    public function name($name = null)$/;"	f
_name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^        $this->_name = $name;$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^    public function sql(ValueBinder $generator)$/;"	f
traverse	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Expression\SimpleExpression.php	/^    public function traverse(callable $callable) {$/;"	f
FunctionsBuilder	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^class FunctionsBuilder$/;"	c
_defaultDateFormat	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    protected $_defaultDateFormat = 'YYYY-MM-DD HH24:MI:SS';$/;"	v
_defaultDateFormat	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    protected $_defaultDateFormat = 'YYYY-MM-DD HH24:MI:SS';$/;"	v
calls	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * arbitrary function calls in the final SQL string.$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param string $name the name of the SQL function to constructed$/;"	f
param	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param array $types list of types for each function param$/;"	f
_build	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    protected function _build($name, $params = [], $types = [])$/;"	f
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    protected function _build($name, $params = [], $types = [])$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * Helper function to build a function expression argument that$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument.$/;"	f
_literalArgument	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    protected function _literalArgument($expression)$/;"	f
expression	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^            $expression = [$expression => 'literal'];$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^            $expression = [$expression];$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
toChar	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    public static function toChar($expression, $types = [])$/;"	f
types	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    public static function toChar($expression, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param mixed $format the function argument$/;"	f
toCharWithFormat	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    public static function toCharWithFormat($expression, $format = null, $types = [])$/;"	f
format	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    public static function toCharWithFormat($expression, $format = null, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
format	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^            $format = $builder->_defaultDateFormat;$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param mixed $format the function argument$/;"	f
toDate	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    public static function toDate($expression, $format = null, $types = [])$/;"	f
format	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    public static function toDate($expression, $format = null, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
format	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^            $format = $builder->_defaultDateFormat;$/;"	v
calls	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * Magic method dispatcher to create custom SQL function calls$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * @param string $name the SQL function name to construct$/;"	f
and	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^     * parameters for the SQL function and second one a list of types to bind to those$/;"	f
__call	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^    public function __call($name, $args)$/;"	f
builder	.\vendor\cakedc\cakephp-oracle-driver\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
DebugMethodLog	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^class DebugMethodLog extends MethodLogger$/;"	c
_queries	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    protected $_queries = [];$/;"	v
_queries	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    protected $_queries = [];$/;"	v
_logger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    protected $_logger;$/;"	v
_connectionName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    protected $_connectionName;$/;"	v
_totalTime	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    protected $_totalTime = 0;$/;"	v
_totalTime	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    protected $_totalTime = 0;$/;"	v
_totalRows	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    protected $_totalRows = 0;$/;"	v
_totalRows	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    protected $_totalRows = 0;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    public function __construct($logger, $name)$/;"	f
_logger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^        $this->_logger = $logger;$/;"	v
_connectionName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^        $this->_connectionName = $name;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    public function name()$/;"	f
queries	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    public function queries()$/;"	f
totalTime	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    public function totalTime()$/;"	f
totalRows	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    public function totalRows()$/;"	f
log	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\DebugMethodLog.php	/^    public function log(LoggedMethod $method)$/;"	f
LoggedMethod	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^class LoggedMethod$/;"	c
method	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $method = '';$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $method = '';$/;"	v
took	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $took = 0;$/;"	v
took	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $took = 0;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $params = [];$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $params = [];$/;"	v
numRows	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $numRows = 0;$/;"	v
numRows	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $numRows = 0;$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public $error;$/;"	v
__toString	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\LoggedMethod.php	/^    public function __toString()$/;"	f
MethodLogger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^class MethodLogger$/;"	c
log	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^    public function log(LoggedMethod $method)$/;"	f
for	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^     * Wrapper function for the logger object, useful for unit testing$/;"	f
_log	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^    protected function _log($method)$/;"	f
used	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^     * Helper function used to replace method placeholders by the real$/;"	f
_interpolate	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^    protected function _interpolate($method)$/;"	f
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^        $params = array_map(function ($p) {$/;"	v
keys	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^        $keys = [];$/;"	v
limit	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^        $limit = is_int(key($params)) ? 1 : -1;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^        foreach ($params as $key => $param) {$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLogger.php	/^            if ($param == 'NULL' || $key == ':result') {$/;"	v
MethodLoggingStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^class MethodLoggingStatement extends MethodStatementDecorator$/;"	c
_logger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    protected $_logger;$/;"	v
_compiledParams	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    protected $_compiledParams = [];$/;"	v
_compiledParams	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    protected $_compiledParams = [];$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for the execute function to calculate time spent$/;"	f
execute	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    public function execute($params = null)$/;"	f
t	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^        $t = microtime(true);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^        $method = new LoggedMethod();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^            $result = parent::execute($params);$/;"	v
_log	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    protected function _log($method, $params, $startTime)$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for bindValue function to gather each parameter to be later used$/;"	f
bindValue	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^            $type = 'string';$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^            $value = $this->cast($value, $type)[0];$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    public function logger($instance = null)$/;"	f
_logger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^        return $this->_logger = $instance;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for bindValue function to gather each parameter to be later used$/;"	f
bindParam	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^            $type = 'string';$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Log\MethodLoggingStatement.php	/^            $value = $this->cast($value, $type)[0];$/;"	v
OCI8Connection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^class OCI8Connection extends PDO$/;"	c
_inTransaction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    protected $_inTransaction = false;$/;"	v
_inTransaction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    protected $_inTransaction = false;$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    protected $dbh;$/;"	v
executeMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    protected $executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
executeMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    protected $executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    protected $_defaultConfig = [];$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    protected $_defaultConfig = [];$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function __construct($dsn, $username, $password, $options)$/;"	f
persistent	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $persistent = !empty($options['persistent']);$/;"	v
charset	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $charset = !empty($options['charset']) ? $options['charset'] : null;$/;"	v
sessionMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $sessionMode = !empty($options['sessionMode']) ? $options['sessionMode'] : null;$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^            $this->dbh = @oci_pconnect($username, $password, $dsn, $charset, $sessionMode);$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^            $this->dbh = @oci_connect($username, $password, $dsn, $charset, $sessionMode);$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function dbh()$/;"	f
getServerVersion	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function getServerVersion()$/;"	f
versionData	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $versionData = oci_server_version($this->dbh);$/;"	v
prepare	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function prepare($statement, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function prepare($statement, $options = null)$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function query($statement, $mode = PDO::ATTR_DEFAULT_FETCH_MODE, $arg3 = null)$/;"	f
mode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function query($statement, $mode = PDO::ATTR_DEFAULT_FETCH_MODE, $arg3 = null)$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $args = func_get_args();$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $sql = $args[0];$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $stmt = $this->prepare($sql);$/;"	v
quote	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function quote($string, $type = \\PDO::PARAM_STR)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function quote($string, $type = \\PDO::PARAM_STR)$/;"	v
string	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $string = str_replace("'", "''", $string);$/;"	v
exec	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function exec($statement)$/;"	f
stmt	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $stmt = $this->prepare($statement);$/;"	v
getExecuteMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function getExecuteMode()$/;"	f
isTransaction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function isTransaction()$/;"	f
inTransaction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function inTransaction()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        return $this->executeMode == OCI_NO_AUTO_COMMIT;$/;"	v
beginTransaction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function beginTransaction()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_NO_AUTO_COMMIT;$/;"	v
commit	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function commit()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
rollBack	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function rollBack()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
errorCode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function errorCode()$/;"	f
error	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^        $error = oci_error($this->dbh);$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^            $error = $error['code'];$/;"	v
errorInfo	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Connection.php	/^    public function errorInfo()$/;"	f
OCI8Exception	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Exception.php	/^class OCI8Exception extends Exception$/;"	c
fromErrorInfo	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Exception.php	/^    public static function fromErrorInfo($error)$/;"	f
OCI8Statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^class OCI8Statement extends \\PDOStatement implements \\IteratorAggregate$/;"	c
_returnLobs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_returnLobs = true;$/;"	v
_returnLobs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_returnLobs = true;$/;"	v
_dbh	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_dbh;$/;"	v
_sth	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_sth;$/;"	v
_conn	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_conn;$/;"	v
_PARAM	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected static $_PARAM = ':param';$/;"	v
_PARAM	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected static $_PARAM = ':param';$/;"	v
fetchModeMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected static $fetchModeMap = [$/;"	v
fetchModeMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected static $fetchModeMap = [$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchColumnNumber = 0;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchColumnNumber = 0;$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_defaultFetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_defaultFetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_paramMap = [];$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_paramMap = [];$/;"	v
_values	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_values = [];$/;"	v
_values	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_values = [];$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchClassName = '\\stdClass';$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchClassName = '\\stdClass';$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchIntoObject = null;$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchIntoObject = null;$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchArguments = array();$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchArguments = array();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_results = array();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    protected $_results = array();$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function __construct($dbh, $statement, OCI8Connection $conn)$/;"	f
_sth	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^            $this->_sth = $statement;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^            $paramMap = [];$/;"	v
_sth	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^            $this->_sth = oci_parse($dbh, $statement);$/;"	v
_dbh	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $this->_dbh = $dbh;$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $this->_paramMap = $paramMap;$/;"	v
_conn	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $this->_conn = $conn;$/;"	v
convertPositionalToNamedPlaceholders	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    static public function convertPositionalToNamedPlaceholders($statement)$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $count = 1;$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $inLiteral = false;$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $stmtLen = strlen($statement);$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $paramMap = [];$/;"	v
len	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $len = strlen($paramMap[$count]);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $statement = substr_replace($statement, ":param$count", $i, 1);$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $stmtLen = strlen($statement);$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $inLiteral = !$inLiteral;$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function bindValue($param, $value, $type = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function bindValue($param, $value, $type = null)$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function bindParam($column, &$variable, $type = null, $length = null, $driverData = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function bindParam($column, &$variable, $type = null, $length = null, $driverData = null)$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $column = isset($this->_paramMap[$column]) ? $this->_paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        \/\/ where $type = ['ociType' => "REAL_OCI_TYPE", 'plsql_type' => 'VARRAY', 'php_type' => 'string']$/;"	v
like	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        \/\/ this way we could choose correct type and correct binding function like oci_bind_array_by_name$/;"	f
variable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^            $variable = oci_new_cursor($this->_dbh);$/;"	v
lob	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^            $lob = oci_new_descriptor($this->_dbh, OCI_D_LOB);$/;"	v
closeCursor	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function __destruct()$/;"	f
columnCount	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function columnCount()$/;"	f
errorCode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function errorCode()$/;"	f
error	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $error = oci_error($this->_sth);$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^            $error = $error['code'];$/;"	v
errorInfo	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function errorInfo()$/;"	f
execute	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function execute($params = null)$/;"	f
hasZeroIndex	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^            $hasZeroIndex = array_key_exists(0, $params);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^            foreach ($params as $key => $val) {$/;"	v
ret	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $ret = @oci_execute($this->_sth, $this->_conn->getExecuteMode());$/;"	v
getIterator	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function getIterator()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $data = $this->fetchAll();$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function fetch($fetchMode = null, $orientation = null, $offset = null)$/;"	f
orientation	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function fetch($fetchMode = null, $orientation = null, $offset = null)$/;"	v
toLowercase	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $toLowercase = ($this->getAttribute(PDO::ATTR_CASE) == PDO::CASE_LOWER);$/;"	v
nullToString	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $nullToString = ($this->getAttribute(PDO::ATTR_ORACLE_NULLS) == PDO::NULL_TO_STRING);$/;"	v
nullEmptyString	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $nullEmptyString = ($this->getAttribute(PDO::ATTR_ORACLE_NULLS) == PDO::NULL_EMPTY_STRING);$/;"	v
fetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $fetchMode = $fetchMode ?: $this->_defaultFetchMode;$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_array($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $rs = @oci_fetch_assoc($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_row($this->_sth);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_row($this->_sth);$/;"	v
columnNumber	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $columnNumber = (int)$this->_fetchColumnNumber;$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                    $value = $rs[$columnNumber];$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_assoc($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                        $object = $this->_fetchIntoObject;$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                        $className = '\\stdClass';$/;"	v
arguments	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                        $arguments = [];$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                        $className = $this->_fetchClassName;$/;"	v
arguments	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                        $arguments = $this->_fetchArguments;$/;"	v
reflectionClass	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                        $reflectionClass = new \\ReflectionClass($className);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                        $object = $reflectionClass->newInstanceArgs($arguments);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                        $object = new $className();$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                foreach ($rs as $field => $value) {$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function fetchAll($fetchMode = null, $className = null, $arguments = null)$/;"	f
className	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function fetchAll($fetchMode = null, $className = null, $arguments = null)$/;"	v
fetchArgument	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $fetchArgument = $className;$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $this->_results = [];$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $stmt = new OCI8Statement($this->_dbh, reset($row), $this->_conn);$/;"	v
fetchColumn	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function fetchColumn($columnIndex = 0)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $row = oci_fetch_array($this->_sth, OCI_NUM | OCI_RETURN_NULLS | OCI_RETURN_LOBS);$/;"	v
rowCount	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function rowCount()$/;"	f
getAttribute	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function getAttribute($attribute)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^     * @param mixed|null $param Column number, class name or object.$/;"	c
setFetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function setFetchMode($fetchMode, $param = null, $arguments = [])$/;"	f
param	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^    public function setFetchMode($fetchMode, $param = null, $arguments = [])$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^        $this->_defaultFetchMode = $fetchMode;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                    $this->_fetchClassName = $param;$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = $arguments;$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = $param;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = (int)$param;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
OracleCompiler	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleCompiler.php	/^class OracleCompiler extends QueryCompiler$/;"	c
_selectParts	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleCompiler.php	/^    protected $_selectParts = [$/;"	v
_selectParts	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleCompiler.php	/^    protected $_selectParts = [$/;"	v
_buildInsertPart	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleCompiler.php	/^    protected function _buildInsertPart($parts, $query, $generator)$/;"	f
driver	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleCompiler.php	/^        $driver = $query->connection()->driver();$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleCompiler.php	/^        $table = $driver->quoteIfAutoQuote($parts[0]);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleCompiler.php	/^        $columns = $this->_stringifyExpressions($parts[1], $generator);$/;"	v
OracleConnection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^class OracleConnection extends Connection$/;"	c
_driver	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    protected $_driver;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    protected $_methodLogger = null;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    protected $_methodLogger = null;$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    protected $_schemaMethodsCollection;$/;"	v
build	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    public static function build(Connection $connection)$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^        $config = $connection->config();$/;"	v
methodSchemaCollection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    public function methodSchemaCollection(MethodsCollection $collection = null)$/;"	f
collection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    public function methodSchemaCollection(MethodsCollection $collection = null)$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^            return $this->_schemaMethodsCollection = $collection;$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^            return $this->_schemaMethodsCollection = new CachedMethodsCollection($this, $this->_config['cacheMetadata']);$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^        return $this->_schemaMethodsCollection = new MethodsCollection($this);$/;"	v
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    public function prepareMethod($sql, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    public function prepareMethod($sql, $options = [])$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^        $statement = $this->_driver->prepareMethod($sql, $options);$/;"	v
_logQueries	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^        $this->_logQueries = true;$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^            $statement = $this->_getMethodLogger($statement);$/;"	v
_getMethodLogger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    protected function _getMethodLogger(StatementInterface $statement)$/;"	f
log	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^        $log = new MethodLoggingStatement($statement, $this->driver());$/;"	v
methodLogger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    public function methodLogger(MethodLogger $instance = null)$/;"	f
instance	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    public function methodLogger(MethodLogger $instance = null)$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^                $this->_methodLogger = new MethodLogger;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^        $this->_methodLogger = $instance;$/;"	v
cacheMetadata	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^    public function cacheMetadata($cache)$/;"	f
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\OracleConnection.php	/^        $this->_schemaMethodsCollection = null;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^ * Extends the schema collection class to provide caching$/;"	c
CachedMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^class CachedMethodsCollection extends MethodsCollection$/;"	c
_cache	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^    protected $_cache = false;$/;"	v
_cache	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^    protected $_cache = false;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^    public function __construct(ConnectionInterface $connection, $cacheKey = true)$/;"	f
cacheKey	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^    public function __construct(ConnectionInterface $connection, $cacheKey = true)$/;"	v
describe	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	v
cacheConfig	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^        $cacheConfig = $this->cacheMetadata();$/;"	v
cacheKey	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^        $cacheKey = $this->cacheKey($name);$/;"	v
cached	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^            $cached = Cache::read($cacheKey, $cacheConfig);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^        $method = parent::describe($name, $options);$/;"	v
cacheKey	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^    public function cacheKey($name)$/;"	f
cacheMetadata	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^    public function cacheMetadata($enable = null)$/;"	f
enable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^            $enable = '_cake_method_';$/;"	v
_cache	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\CachedMethodsCollection.php	/^        return $this->_cache = $enable;$/;"	v
Method	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^class Method$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected $_method;$/;"	v
_isFunction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected $_isFunction;$/;"	v
_parameters	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected $_parameters = [];$/;"	v
_parameters	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected $_parameters = [];$/;"	v
_typeMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected $_typeMap = [];$/;"	v
_typeMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected $_typeMap = [];$/;"	v
_columnParameters	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected static $_columnParameters = [$/;"	v
_columnParameters	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected static $_columnParameters = [$/;"	v
_columnExtras	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected static $_columnExtras = [$/;"	v
_columnExtras	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    protected static $_columnExtras = [$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function __construct($method, array $parameters = [])$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function __construct($method, array $parameters = [])$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^        $this->_method = $method;$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^        foreach ($parameters as $parameter => $definition) {$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function name()$/;"	f
addParameter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function addParameter($name, $attrs)$/;"	f
attrs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^            $attrs = ['type' => $attrs];$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^        $valid = static::$_columnParameters;$/;"	v
_isFunction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^            $this->_isFunction = true;$/;"	v
attrs	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^        $attrs = array_intersect_key($attrs, $valid);$/;"	v
parameters	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function parameters()$/;"	f
parameter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function parameter($name)$/;"	f
parameter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^        $parameter = $this->_parameters[$name];$/;"	v
parameterType	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function parameterType($name, $type = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function parameterType($name, $type = null)$/;"	v
parameterDirection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function parameterDirection($name, $direction = null)$/;"	f
direction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function parameterDirection($name, $direction = null)$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^        $result = null;$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^            $result = 'IN';$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function typeMap()$/;"	f
isFunction	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\Method.php	/^    public function isFunction()$/;"	f
MethodsCollection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^class MethodsCollection$/;"	c
_connection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^    protected $_connection;$/;"	v
_dialect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^    protected $_dialect;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^    public function __construct(ConnectionInterface $connection)$/;"	f
_connection	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $this->_connection = $connection;$/;"	v
_dialect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $this->_dialect = $connection->driver()->schemaDialect();$/;"	v
listMethods	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^    public function listMethods()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $result = [];$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $statement = $this->_connection->execute($sql, $params);$/;"	v
getMethod	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^    public function getMethod($name)$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $config = $this->_connection->config();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $result = [];$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $statement = $this->_connection->execute($sql, $params);$/;"	v
describe	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $config = $this->_connection->config();$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $methods = $this->getMethod($name);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^        $method = new Method($name);$/;"	v
_reflect	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^    protected function _reflect($method, $name, $config)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\MethodsCollection.php	/^            $statement = $this->_connection->execute($sql, $params);$/;"	v
OracleSchema	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^class OracleSchema extends BaseSchema$/;"	c
_constraints	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected $_constraints = [];$/;"	v
_constraints	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected $_constraints = [];$/;"	v
listMethodsSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function listMethodsSql($config)$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $table = 'user_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $params = [];$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $table = 'all_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $params = [':ownerParam' => strtoupper($config['schema'])];$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $ownerCondition = 'AND OWNER = :ownerParam';$/;"	v
objectNameField	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $objectNameField = $this->_transformFieldCase("OBJECT_NAME");$/;"	v
procedureName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $procedureName = $this->_transformFieldCase("PROCEDURE_NAME");$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $objectCondition = '';$/;"	v
objectName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $objectName = $config['objectName'];$/;"	v
items	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $items = explode('.', $objectName);$/;"	v
itemsCount	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $itemsCount = count($items);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $schema = $package = null;$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $object = $objectName;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $ownerCondition = '';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $params = [$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $table = 'user_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $useOwner = false;$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $objectCondition = " AND $objectNameField = :objectParam ";$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $table = 'all_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $useOwner = true;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $ownerCondition = " AND OWNER = :ownerParam AND $objectNameField = :packageParam ";$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $params = [$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $objectCondition = " AND $procedureName = :objectParam ";$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $ownerCondition = " AND (OWNER = :packageParam OR $objectNameField = :packageParam) ";$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $params = [$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $objectCondition = " AND $procedureName = :objectParam ";$/;"	v
procedureName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $procedureName = $this->_transformFieldCase("PROCEDURE_NAME");$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT $objectNameField as object, $procedureName as name, OBJECT_TYPE FROM $table$/;"	v
listTablesSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function listTablesSql($config)$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $table = 'user_tables';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $params = [];$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $table = 'all_tables';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $params = [':ownerParam' => strtoupper($config['schema'])];$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $tableName = $this->_transformFieldCase("TABLE_NAME");$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT $tableName as name FROM $table " . ($useOwner ? 'WHERE owner = :ownerParam' : '') . " ORDER BY name";$/;"	v
describeColumnSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function describeColumnSql($tableName, $config)$/;"	f
columnsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $columnsTable = 'user_tab_columns';$/;"	v
commentsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $commentsTable = 'user_col_comments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $params = [':tableParam' => $table];$/;"	v
columnsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $columnsTable = 'all_tab_columns';$/;"	v
commentsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $commentsTable = 'all_col_comments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $params = [$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
convertColumnDescription	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function convertColumnDescription(TableSchema $table, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $length = $row['char_length'];$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
describeParametersSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function describeParametersSql($objectName, $config)$/;"	f
items	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $items = explode('.', $objectName);$/;"	v
itemsCount	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $itemsCount = count($items);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $schema = $package = null;$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $object = $objectName;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $ownerCondition = '';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $params = [$/;"	v
argumentsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $argumentsTable = 'user_arguments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
argumentsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $argumentsTable = 'all_arguments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $ownerCondition = 'AND args.OWNER = :ownerParam AND args.PACKAGE_NAME = :packageParam ';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $params = [$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $ownerCondition = 'AND (args.OWNER = :packageParam OR args.PACKAGE_NAME = :packageParam) ';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $params = [$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
convertParametersDescription	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function convertParametersDescription(Method $method, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $length = $row['data_length'];$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $out = strpos($row['direction'], 'OUT') !== false ? true : false;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $name = $row['name'];$/;"	v
function	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $function = $out && $name === null ? true : false;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $name = ':result';$/;"	v
describeIndexSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function describeIndexSql($tableName, $config)$/;"	f
constraintsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $constraintsTable = 'user_constraints';$/;"	v
indexesTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $indexesTable = 'user_indexes';$/;"	v
indexColumnsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $indexColumnsTable = 'user_ind_columns';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
constraintsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $constraintsTable = 'all_constraints';$/;"	v
indexesTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $indexesTable = 'all_indexes';$/;"	v
indexColumnsTable	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $indexColumnsTable = 'all_ind_columns';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $params = [$/;"	v
convertIndexDescription	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function convertIndexDescription(TableSchema $table, $row)$/;"	f
tableIndex	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $tableIndex = array_change_key_case($row);$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $type = null;$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $columns = $length = [];$/;"	v
keyName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $keyName = $this->_transformValueCase($tableIndex['name']);$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $name = $this->_transformValueCase($tableIndex['column_name']);$/;"	v
keyName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $keyName = $type = TableSchema::CONSTRAINT_PRIMARY;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $type = TableSchema::CONSTRAINT_UNIQUE;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $type = TableSchema::INDEX_INDEX;$/;"	v
isIndex	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $isIndex = $type === TableSchema::INDEX_INDEX;$/;"	v
existing	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $existing = $table->getIndex($keyName);$/;"	v
existing	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $existing = $table->getConstraint($keyName);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $columns = array_merge($existing['columns'], $columns);$/;"	v
_convertColumnList	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected function _convertColumnList($columns)$/;"	f
columns	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $columns = explode(', ', $columns);$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $column = trim($column, '"');$/;"	v
describeForeignKeySql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function describeForeignKeySql($tableName, $config)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $sql = "SELECT$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = "$/;"	v
convertForeignKeyDescription	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function convertForeignKeyDescription(TableSchema $table, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
data	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $data = [$/;"	v
_convertOnClause	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected function _convertOnClause($clause)$/;"	f
columnSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function columnSql(TableSchema $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $data = $table->column($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $out = $this->_driver->quoteIfAutoQuote($name);$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $typeMap = [$/;"	v
isFixed	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $isFixed = !empty($data['fixed']);$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $type = ' VARCHAR2';$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $type = ' CHAR';$/;"	v
defaultValue	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $defaultValue = $data['default'];$/;"	v
defaultValue	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $defaultValue = (int)$defaultValue;$/;"	v
addConstraintSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function addConstraintSql(TableSchema $table)$/;"	f
sqlPattern	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sqlPattern = 'ALTER TABLE %s ADD %s;';$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
dropConstraintSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function dropConstraintSql(TableSchema $table)$/;"	f
sqlPattern	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sqlPattern = 'ALTER TABLE %s DROP CONSTRAINT %s;';$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
constraintName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^                $constraintName = $this->_driver->quoteIfAutoQuote($name);$/;"	v
indexSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function indexSql(TableSchema $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $data = $table->index($name);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $columns = array_map([$/;"	v
constraintSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function constraintSql(TableSchema $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $data = $table->constraint($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $out = 'CONSTRAINT ' . $this->_driver->quoteIfAutoQuote($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $out = 'PRIMARY KEY';$/;"	v
_keySql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected function _keySql($prefix, $data)$/;"	f
columns	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $columns = array_map([$/;"	v
createTableSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function createTableSql(TableSchema $table, $columns, $constraints, $indexes)$/;"	f
content	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $content = array_merge($columns, $constraints);$/;"	v
content	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $content = implode(",\\n", array_filter($content));$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
temporary	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $temporary = $table->temporary() ? ' TEMPORARY ' : ' ';$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $out = [];$/;"	v
columnData	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $columnData = $table->column($column);$/;"	v
pk	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $pk = $this->_getPrimaryKey($table);$/;"	v
fieldName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $fieldName = $pk['columns'][0];$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $out = Hash::merge($out, $this->getCreateAutoincrementSql($fieldName, $table->name()));$/;"	v
truncateTableSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function truncateTableSql(TableSchema $table)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $name = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sequenceName = $this->_getSequenceName($table->name());$/;"	v
dropTableSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function dropTableSql(TableSchema $table)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = sprintf('DROP TABLE %s CASCADE CONSTRAINTS', $this->_driver->quoteIfAutoQuote($table->name()));$/;"	v
tableSplit	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function tableSplit($name, $config)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $schema = null;$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $table = $name;$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $schema = strtoupper($config['schema']);$/;"	v
_getPrimaryKey	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected function _getPrimaryKey(TableSchema $table)$/;"	f
constraints	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $constraints = $table->constraints();$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
_isSingleKey	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected function _isSingleKey(TableSchema $table, $constraints)$/;"	f
constraint	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $constraint = $constraints[0];$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $columns = $constraint['columns'];$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $column = $table->column($columns[0]);$/;"	v
getCreateSequenceSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function getCreateSequenceSql($sequenceName)$/;"	f
getDropSequenceSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function getDropSequenceSql($sequenceName)$/;"	f
createSequenceIfNotExists	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function createSequenceIfNotExists($name, $createCommand = null)$/;"	f
createCommand	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function createSequenceIfNotExists($name, $createCommand = null)$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
createCommand	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $createCommand = $this->getCreateSequenceSql($name);$/;"	v
wrapper	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $wrapper = <<<SQL$/;"	v
dropSequenceIfExists	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function dropSequenceIfExists($name, $dropCommand = null)$/;"	f
dropCommand	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function dropSequenceIfExists($name, $dropCommand = null)$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
dropCommand	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^            $dropCommand = $this->getDropSequenceSql($name);$/;"	v
wrapper	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $wrapper = <<<SQL$/;"	v
getCreateAutoincrementSql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function getCreateAutoincrementSql($name, $tableName, $start = 1)$/;"	f
start	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    public function getCreateAutoincrementSql($name, $tableName, $start = 1)$/;"	v
quotedTableName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $quotedTableName = $this->_driver->quoteIfAutoQuote($tableName);$/;"	v
quotedName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $quotedName = $this->_driver->quoteIfAutoQuote($name);$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
autoincrementIdentifierName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $autoincrementIdentifierName = 't_' . $tableName;$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $sequenceName = $this->_getSequenceName($tableName);$/;"	v
_getSequenceName	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected function _getSequenceName($name)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $name = 'seq_' . $name;$/;"	v
_transformValueCase	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected function _transformValueCase($value)$/;"	f
case	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $case = $this->_driver->config('case');$/;"	v
_transformFieldCase	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^    protected function _transformFieldCase($field)$/;"	f
case	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Schema\OracleSchema.php	/^        $case = $this->_driver->config('case');$/;"	v
meant	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
MethodOracleStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^class MethodOracleStatement extends MethodStatementDecorator$/;"	c
queryString	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public $queryString;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public $paramMap;$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function execute($params = null)$/;"	f
_statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^            $this->_statement = $this->_statement->getInnerStatement();$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^            $this->_statement = new OracleBufferedStatement($this->_statement, $this->_driver);$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function __get($property)$/;"	f
bind	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bind($params, $types)$/;"	f
annonymousParams	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^        $annonymousParams = is_int(key($params)) ? true : false;$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^        $offset = 0;$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^        foreach ($params as $index => $value) {$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^            $type = null;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^                $type = $types[$index];$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^        $column = isset($this->paramMap[$column]) ? $this->paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^        $type = $type == 'boolean' ? 'integer' : $type;$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function fetch($type = 'num')$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^        $result = $this->_statement->fetch($type);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^            foreach ($result as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
mainly	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^ * Decorator for \\PDOStatement class mainly used for converting human readable$/;"	c
MethodPDOStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^class MethodPDOStatement extends MethodStatementDecorator$/;"	c
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function __construct(Statement $statement = null, $driver = null)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function __construct(Statement $statement = null, $driver = null)$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^        $this->_statement = $statement;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^        $this->_driver = $driver;$/;"	v
val	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $val = 'a title';$/;"	v
boolVal	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $boolVal = true;$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $date = new \\DateTime();$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^            $type = 'string';$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^            $type = 'string';$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function fetch($type = 'num')$/;"	f
fetchAll	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
is	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodStatementDecorator.php	/^ * This class is but a decorator of an actual statement implementation, such as$/;"	c
MethodStatementDecorator	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodStatementDecorator.php	/^class MethodStatementDecorator extends StatementDecorator implements StatementInterface, Countable, IteratorAggregate$/;"	c
val	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $val = 'a title';$/;"	v
boolVal	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $boolVal = true;$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $date = new \\DateTime();$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodStatementDecorator.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\MethodStatementDecorator.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
Oci8Statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\Oci8Statement.php	/^class Oci8Statement extends Statement$/;"	c
closeCursor	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\Oci8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\Oci8Statement.php	/^    public function __destruct()$/;"	f
meant	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleBufferedStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^class OracleBufferedStatement extends MethodStatementDecorator$/;"	c
_count	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_count = 0;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_count = 0;$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_records = [];$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_records = [];$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_allFetched = true;$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_allFetched = true;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_counter = 0;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_counter = 0;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function __construct($statement = null, $driver = null)$/;"	f
driver	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function __construct($statement = null, $driver = null)$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function execute($params = null)$/;"	f
fetch	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function fetch($type = 'num')$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $row = ($this->_counter < $this->_count) ? $this->_records[$this->_counter++] : false;$/;"	v
row	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $row = ($row && $type === 'num') ? array_values($row) : $row;$/;"	v
_fetchType	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_fetchType = $type;$/;"	v
record	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $record = $this->_statement->fetch($type);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_allFetched = true;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_counter = $this->_count + 1;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^            foreach ($record as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
_records	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_records = parent::fetchAll($type);$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_count = count($this->_records);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_allFetched = true;$/;"	v
rowCount	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function rowCount()$/;"	f
counter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $counter = $this->_counter;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_counter = $counter;$/;"	v
rewind	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function rewind()$/;"	f
_counter	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_counter = 0;$/;"	v
_reset	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected function _reset()$/;"	f
_count	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_count = $this->_counter = 0;$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_records = [];$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_allFetched = false;$/;"	v
Oci8Statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Oci8Statement.php	/^class Oci8Statement extends Statement$/;"	c
closeCursor	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Oci8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\Oci8Statement.php	/^    public function __destruct()$/;"	f
meant	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleBufferedStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^class OracleBufferedStatement extends BufferedStatement$/;"	c
fetch	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^    public function fetch($type = self::FETCH_TYPE_NUM)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^            $row = false;$/;"	v
row	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^                $row = $this->buffer[$this->index];$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^            if ($row && $type === static::FETCH_TYPE_NUM) {$/;"	v
record	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^        $record = $this->statement->fetch($type);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^            $this->_allFetched = true;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^            foreach ($record as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleBufferedStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
meant	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^class OracleStatement extends StatementDecorator$/;"	c
queryString	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public $queryString;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public $paramMap;$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public function execute($params = null)$/;"	f
_statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^            $this->_statement = $this->_statement->getInnerStatement();$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^            $this->_statement = new OracleBufferedStatement($this->_statement, $this->_driver);$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public function __get($property)$/;"	f
bind	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public function bind($params, $types)$/;"	f
annonymousParams	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^        $annonymousParams = is_int(key($params)) ? true : false;$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^        $offset = 0;$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^        foreach ($params as $index => $value) {$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^            $type = null;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^                $type = $types[$index];$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^        $column = isset($this->paramMap[$column]) ? $this->paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^        $type = $type == 'boolean' ? 'integer' : $type;$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public function fetch($type = 'num')$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^        $result = $this->_statement->fetch($type);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^            foreach ($result as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Statement\OracleStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
CursorType	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Type\CursorType.php	/^class CursorType extends Type$/;"	c
toDatabase	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Type\CursorType.php	/^    public function toDatabase($value, Driver $driver)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Type\CursorType.php	/^        if ($value === null || $value === '') {$/;"	v
marshal	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Type\CursorType.php	/^    public function marshal($value)$/;"	f
toStatement	.\vendor\cakedc\cakephp-oracle-driver\src\Database\Type\CursorType.php	/^    public function toStatement($value, Driver $driver)$/;"	f
MissingMethodClassException	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Exception\MissingMethodClassException.php	/^class MissingMethodClassException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Exception\MissingMethodClassException.php	/^    protected $_messageTemplate = 'Method class %s could not be found.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Exception\MissingMethodClassException.php	/^    protected $_messageTemplate = 'Method class %s could not be found.';$/;"	v
MissingRequestException	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Exception\MissingRequestException.php	/^class MissingRequestException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Exception\MissingRequestException.php	/^    protected $_messageTemplate = 'Request class %s could not be found.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Exception\MissingRequestException.php	/^    protected $_messageTemplate = 'Request class %s could not be found.';$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorAwareTrait.php	/^    protected $_methodLocator;$/;"	v
methodLocator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorAwareTrait.php	/^    public function methodLocator(LocatorInterface $methodLocator = null)$/;"	f
methodLocator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorAwareTrait.php	/^    public function methodLocator(LocatorInterface $methodLocator = null)$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorAwareTrait.php	/^            $this->_methodLocator = $methodLocator;$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorAwareTrait.php	/^            $this->_methodLocator = MethodRegistry::locator();$/;"	v
LocatorInterface	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^interface LocatorInterface$/;"	i
config	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^    public function config($alias = null, $options = null);$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^    public function config($alias = null, $options = null);$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^    public function get($alias, array $options = []);$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^    public function get($alias, array $options = []);$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^    public function exists($alias);$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^    public function set($alias, Method $object);$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^    public function clear();$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\LocatorInterface.php	/^    public function remove($alias);$/;"	f
MethodLocator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^class MethodLocator implements LocatorInterface$/;"	c
_config	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected $_config = [];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected $_config = [];$/;"	v
_instances	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected $_instances = [];$/;"	v
_instances	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected $_instances = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected $_fallbacked = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected $_fallbacked = [];$/;"	v
_options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected $_options = [];$/;"	v
_options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected $_options = [];$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function config($alias = null, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function config($alias = null, $options = null)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^            return $this->_config = $alias;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^     * class name based on the alias. If this class does not exist,$/;"	c
will	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^     * then the default `CakeDC\\OracleDriver\\ORM\\Method` class will be used. By setting the `className`$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^     * option you can define the specific class to use. This className can$/;"	c
reference	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^     * use a plugin short class reference.$/;"	c
get	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function get($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function get($alias, array $options = [])$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^        $options = ['alias' => $classAlias] + $options;$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^        $className = $this->_getClassName($alias, $options);$/;"	v
connectionName	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^            $connectionName = $options['className']::defaultConnectionName();$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^     * Gets the method class name.$/;"	c
_getClassName	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected function _getClassName($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected function _getClassName($alias, array $options = [])$/;"	v
_create	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    protected function _create(array $options)$/;"	f
exists	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function exists($alias)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function set($alias, Method $object)$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function clear()$/;"	f
_instances	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^        $this->_instances = [];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^        $this->_config = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^        $this->_fallbacked = [];$/;"	v
genericInstances	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function genericInstances()$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Locator\MethodLocator.php	/^    public function remove($alias)$/;"	f
ResultSet	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^class ResultSet implements ResultSetInterface$/;"	c
_statement	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_statement;$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_index = 0;$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_index = 0;$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_current;$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_results = [];$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_results = [];$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_hydrate = true;$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_hydrate = true;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^     * The fully namespaced name of the class to use for hydrating results$/;"	c
_entityClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_entityClass;$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_useBuffering = false;$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_useBuffering = false;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_count;$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_types = [];$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_types = [];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_schema = [];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_schema = [];$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected $_driver;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function __construct($repository, $statement, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function __construct($repository, $statement, $options = [])$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_statement = $statement;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_driver = $repository->connection()->driver();$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_hydrate = $options['hydrate'];$/;"	v
_entityClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_entityClass = $options['entityClass'];$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_useBuffering = $options['useBuffering'];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_schema = $options['schema'];$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_types = $this->_getTypes(array_keys($this->_schema));$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^             $count = $this->count();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^             $this->_results = new SplFixedArray($count);$/;"	v
current	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function current()$/;"	f
key	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function key()$/;"	f
next	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function next()$/;"	f
rewind	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function rewind()$/;"	f
msg	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^            $msg = 'You cannot rewind an un-buffered ResultSet';$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_index = 0;$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function valid()$/;"	f
valid	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^            $valid = $this->_index < $this->_count;$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^                $this->_current = $this->_results[$this->_index];$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_current = $this->_fetchResult();$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $valid = $this->_current !== false;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^     * Helper function to fetch the next result from the statement or$/;"	f
_fetchResult	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected function _fetchResult()$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $row = $this->_statement->fetch('assoc');$/;"	v
_groupResult	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected function _groupResult($row)$/;"	f
results	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $results = $this->_castValues($row);$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $options = [];$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^            $results = new $this->_entityClass($results, $options);$/;"	v
first	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function first()$/;"	f
serialize	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function serialize()$/;"	f
unserialize	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function unserialize($serialized)$/;"	f
_results	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_results = unserialize($serialized);$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_useBuffering = true;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $this->_count = count($this->_results);$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function count()$/;"	f
_count	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^            return $this->_count = $this->_statement->rowCount();$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        return $this->_count = count($this->_results);$/;"	v
_castValues	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected function _castValues($values)$/;"	f
field	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        foreach ($this->_types as $field => $type) {$/;"	v
_getTypes	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    protected function _getTypes($fields)$/;"	f
types	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $types = [];$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $schema = $this->_schema;$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $map = array_keys(Type::map() + ['string' => 1, 'text' => 1, 'boolean' => 1]);$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^        $typeMap = array_combine($/;"	v
typeName	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^            $typeName = $schema[$col];$/;"	v
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method\ResultSet.php	/^    public function __debugInfo()$/;"	f
Method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^class Method {$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    protected $_method;$/;"	v
_connection	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    protected $_connection;$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    protected $_schema;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^     * The request class name for the method.$/;"	c
_requestClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    protected $_requestClass;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function __construct(array $config = [])$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function __construct(array $config = [])$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function method($method = null)$/;"	f
_method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $this->_method = $method;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $method = namespaceSplit(get_class($this));$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $method = substr(end($method), 0, -6);$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $this->_method = Inflector::underscore($method);$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function connection(OracleConnection $conn = null)$/;"	f
conn	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function connection(OracleConnection $conn = null)$/;"	v
_connection	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        return $this->_connection = $conn;$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function schema($schema = null)$/;"	f
_schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^                $this->_schema = $this->_initializeSchema($this->connection()$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $schema = new Schema($this->method(), $schema);$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        return $this->_schema = $schema;$/;"	v
in	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^     * Override this function in order to alter the schema used by this method.$/;"	f
is	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^     * This function is only called after fetching the schema out of the database.$/;"	f
_initializeSchema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^     * protected function _initializeSchema(\\CakeDC\\OracleDriver\\Database\\Schema\\Method $method) {$/;"	f
_initializeSchema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    protected function _initializeSchema(Schema $method)$/;"	f
used	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^     * Returns the class used to keep request parameters for this method$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^     * @param string|null $name the name of the class to use$/;"	c
cannot	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^     * @throws \\CakeDC\\OracleDriver\\ORM\\Exception\\MissingRequestException when the request class cannot be found$/;"	c
requestClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function requestClass($name = null)$/;"	f
default	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $default = '\\CakeDC\\OracleDriver\\ORM\\Request';$/;"	v
self	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $self = get_called_class();$/;"	v
parts	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $parts = explode('\\\\', $self);$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^                return $this->_requestClass = $default;$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $alias = Inflector::singularize(substr(array_pop($parts), 0, -6));$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $name = implode('\\\\', array_slice($parts, 0, -1)) . '\\Request\\\\' . $alias;$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^                return $this->_requestClass = $default;$/;"	v
class	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $class = App::className($name, 'Model\/Request');$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $this->_requestClass = $class;$/;"	v
initialize	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^     *  public function initialize(array $config)$/;"	f
initialize	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function initialize(array $config)$/;"	f
newRequest	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function newRequest($data = null)$/;"	f
class	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $class = $this->requestClass();$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $request = new $class([], [$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function execute(RequestInterface $request)$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $query = $this->_generateSql();$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $statement = $this->connection()$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $result = $statement->execute();$/;"	v
_generateSql	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function _generateSql()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $query = '';$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^            $query = ':result := ';$/;"	v
parameters	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $parameters = $this->schema()$/;"	v
names	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $names = [];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $query = 'begin ' . $query . ' end;';$/;"	v
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public function __debugInfo()$/;"	f
conn	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^        $conn = $this->connection();$/;"	v
defaultConnectionName	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Method.php	/^    public static function defaultConnectionName()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^ * $method = MethodRegistry::get('Procedure', $config);$/;"	v
MethodRegistry	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^class MethodRegistry$/;"	c
_locator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    protected static $_locator;$/;"	v
_defaultLocatorClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    protected static $_defaultLocatorClass = 'CakeDC\\OracleDriver\\ORM\\Locator\\MethodLocator';$/;"	v
_defaultLocatorClass	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    protected static $_defaultLocatorClass = 'CakeDC\\OracleDriver\\ORM\\Locator\\MethodLocator';$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function config($alias = null, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function config($alias = null, $options = null)$/;"	v
locator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function locator(LocatorInterface $locator = null)$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function locator(LocatorInterface $locator = null)$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function get($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function get($alias, array $options = [])$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function exists($alias)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function set($alias, Method $object)$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function remove($alias)$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function clear()$/;"	f
__callStatic	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\MethodRegistry.php	/^    public static function __callStatic($name, $arguments)$/;"	f
Request	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Request.php	/^class Request implements RequestInterface$/;"	c
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Request.php	/^    public function __construct(array $properties = [], array $options = [])$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Request.php	/^    public function __construct(array $properties = [], array $options = [])$/;"	v
_className	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Request.php	/^        $this->_className = get_class($this);$/;"	v
_repository	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Request.php	/^            $this->_repository = $options['repository'];$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\Request.php	/^            $this->_driver = $this->_repository->connection()$/;"	v
representing	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestInterface.php	/^ * Describes the methods that any class representing a data storage should$/;"	c
RequestInterface	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestInterface.php	/^interface RequestInterface extends ArrayAccess, JsonSerializable$/;"	i
set	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestInterface.php	/^    public function set($property, $value = null, array $options = []);$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestInterface.php	/^    public function set($property, $value = null, array $options = []);$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestInterface.php	/^    public function &get($property);$/;"	f
toArray	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestInterface.php	/^    public function toArray();$/;"	f
isNew	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestInterface.php	/^    public function isNew($new = null);$/;"	f
_accessors	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected static $_accessors = [];$/;"	v
_accessors	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected static $_accessors = [];$/;"	v
_properties	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_properties = [];$/;"	v
_properties	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_properties = [];$/;"	v
_castedProperties	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_castedProperties = [];$/;"	v
_castedProperties	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_castedProperties = [];$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^     * Holds the name of the class for the instance object$/;"	c
_className	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_className;$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^     * Holds the repository of the method class for the instance object$/;"	c
_repository	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_repository;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_driver;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_new = true;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected $_new = true;$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function &__get($property)$/;"	f
__set	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function __set($property, $value)$/;"	f
get	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function &get($property)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $value = null;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $method = '_get' . Inflector::camelize($property);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^            $value =& $this->_properties[$property];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^            $result = $this->{$method}($value);$/;"	v
_methodExists	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    protected function _methodExists($method)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function set($property, $value = null, array $options = [])$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function set($property, $value = null, array $options = [])$/;"	v
isString	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $isString = is_string($property);$/;"	v
property	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^            $property = [$property => $value];$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^            $options = (array)$value;$/;"	v
p	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        foreach ($property as $p => $value) {$/;"	v
setter	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^            $setter = '_set' . Inflector::camelize($p);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^                $value = $this->{$setter}($value);$/;"	v
__isset	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function __isset($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^     * $request = new Request(['id' => 1, 'name' => null]);$/;"	v
has	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function has($property)$/;"	f
__unset	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function __unset($property)$/;"	f
unsetProperty	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function unsetProperty($property)$/;"	f
property	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $property = (array)$property;$/;"	v
jsonSerialize	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function jsonSerialize()$/;"	f
toArray	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function toArray()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $result = [];$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^            $value = $this->get($property);$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^                foreach ($value as $k => $object) {$/;"	v
visibleProperties	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function visibleProperties()$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $properties = array_keys($this->_properties);$/;"	v
offsetExists	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function offsetExists($offset)$/;"	f
offsetGet	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function &offsetGet($offset)$/;"	f
offsetSet	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function offsetSet($offset, $value)$/;"	f
offsetUnset	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function offsetUnset($offset)$/;"	f
attachTo	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function attachTo($statement)$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $properties = $this->_properties;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        foreach ($properties as $name => $value) {$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^            $parameter = $this->_repository->schema()$/;"	v
paramName	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^                $paramName = $name;$/;"	v
paramName	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^                $paramName = ':' . $name;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^                $type = $parameter['type'];$/;"	v
fetchCursor	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function fetchCursor($name, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function fetchCursor($name, $options = [])$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $parameter = $this->_repository->schema()->parameter($name);$/;"	v
property	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $property = $this->get($name);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $statement = $this->_repository->connection()->prepareMethod($property);$/;"	v
isNew	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function isNew($new = null)$/;"	f
new	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $new = (bool)$new;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        return $this->_new = $new;$/;"	v
applySchema	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function applySchema(MethodSchema $schema)$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^        $parameters = $schema->parameters();$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^            $parameter = $schema->parameter($name);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^     * Helper method to get function result. Should be used only in case function was called.$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function result()$/;"	f
__toString	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function __toString()$/;"	f
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver\src\ORM\RequestTrait.php	/^    public function __debugInfo()$/;"	f
MethodLogPanel	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^class MethodLogPanel extends DebugPanel$/;"	c
plugin	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^    public $plugin = 'OracleDriver';$/;"	v
plugin	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^    public $plugin = 'OracleDriver';$/;"	v
_loggers	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^    protected $_loggers = [];$/;"	v
_loggers	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^    protected $_loggers = [];$/;"	v
initialize	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^    public function initialize()$/;"	f
configs	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^        $configs = ConnectionManager::configured();$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^            $connection = ConnectionManager::get($name);$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^            $logger = null;$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^                $logger = $connection->methodLogger();$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^            $logger = new DebugMethodLog($logger, $name);$/;"	v
data	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^    public function data()$/;"	f
summary	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^    public function summary()$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver\src\Panel\MethodLogPanel.php	/^        $count = $time = 0;$/;"	v
MethodTestFixture	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^class MethodTestFixture$/;"	c
connection	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $connection = 'test';$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $connection = 'test';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $name = null;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $name = null;$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $create = [];$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $create = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $drop = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $drop = [];$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function __construct()$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^            $connection = $this->connection;$/;"	v
message	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^                $message = sprintf($/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function connection()$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function name()$/;"	f
init	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function init()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^            $method = $class;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^                $method = $matches[1];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^            $this->name = Inflector::tableize($method);$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function create(ConnectionInterface $db)$/;"	f
queries	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^            $queries = [];$/;"	v
queries	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^                $queries = (array)$this->create;$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^                $stmt = $db->prepare($query);$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^            $msg = sprintf($/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function drop(ConnectionInterface $db)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^            $sql = [];$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^                $sql = (array)$this->drop;$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^                $stmt = $db->prepare($query);$/;"	v
insert	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function insert(ConnectionInterface $db)$/;"	f
createConstraints	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function createConstraints(ConnectionInterface $db)$/;"	f
dropConstraints	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function dropConstraints(ConnectionInterface $db)$/;"	f
truncate	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function truncate(ConnectionInterface $db)$/;"	f
OracleFixtureInjector	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^class OracleFixtureInjector implements PHPUnit_Framework_TestListener$/;"	c
_fixtureManager	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    protected $_fixtureManager;$/;"	v
_first	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    protected $_first;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function __construct(OracleFixtureManager $manager)$/;"	f
_fixtureManager	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^        $this->_fixtureManager = $manager;$/;"	v
startTestSuite	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function startTestSuite(PHPUnit_Framework_TestSuite $suite)$/;"	f
_first	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^            $this->_first = $suite;$/;"	v
endTestSuite	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function endTestSuite(PHPUnit_Framework_TestSuite $suite)$/;"	f
addError	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addError(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
addWarning	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addWarning(PHPUnit_Framework_Test $test, PHPUnit_Framework_Warning $e, $time)$/;"	f
addFailure	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time)$/;"	f
addIncompleteTest	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
addSkippedTest	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
startTest	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function startTest(PHPUnit_Framework_Test $test)$/;"	f
endTest	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function endTest(PHPUnit_Framework_Test $test, $time)$/;"	f
addRiskyTest	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addRiskyTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^ * A factory class to manage the life cycle of test fixtures$/;"	c
OracleFixtureManager	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^class OracleFixtureManager$/;"	c
_initialized	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_initialized = false;$/;"	v
_initialized	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_initialized = false;$/;"	v
_loaded	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_loaded = [];$/;"	v
_loaded	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_loaded = [];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Holds the fixture classes that where instantiated indexed by class name$/;"	c
_fixtureMap	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_fixtureMap = [];$/;"	v
_fixtureMap	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_fixtureMap = [];$/;"	v
_insertionMap	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_insertionMap = [];$/;"	v
_insertionMap	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_insertionMap = [];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * List of TestCase class name that have been processed$/;"	c
_processed	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_processed = [];$/;"	v
_processed	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_processed = [];$/;"	v
_debug	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_debug = false;$/;"	v
_debug	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_debug = false;$/;"	v
setDebug	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function setDebug($debug)$/;"	f
_debug	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $this->_debug = $debug;$/;"	v
fixturize	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function fixturize($test)$/;"	f
loaded	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loaded()$/;"	f
_aliasConnections	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _aliasConnections()$/;"	f
connections	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $connections = ConnectionManager::configured();$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $map = [];$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            if ($connection === 'test' || $connection === 'default') {$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        foreach ($map as $alias => $connection) {$/;"	v
with	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Initializes this class with a DataSource object to use as default for all fixtures$/;"	c
_initDb	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _initDb()$/;"	f
_initialized	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $this->_initialized = true;$/;"	v
_loadCodeFixtures	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _loadCodeFixtures($test)$/;"	f
path	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $path = explode('\/', $pathName);$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $name = array_pop($path);$/;"	v
additionalPath	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $additionalPath = implode('\\\\', $path);$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = 'Cake';$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = Configure::read('App.namespace');$/;"	v
path	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $path = implode('\\\\', explode('\/', $plugin));$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = Inflector::camelize(str_replace('\\\\', '\\ ', $path));$/;"	v
additionalPath	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $additionalPath = null;$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = '';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $name = $fixture;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $name = Inflector::camelize($name);$/;"	v
nameSegments	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $nameSegments = [$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $className = implode('\\\\', array_filter($nameSegments));$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $msg = sprintf($/;"	v
_setupMethod	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _setupMethod($fixture, $db, array $sources, $drop = true)$/;"	f
drop	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _setupMethod($fixture, $db, array $sources, $drop = true)$/;"	v
configName	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $configName = $db->configName();$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $name = $fixture->name();$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $exists = in_array($name, $sources);$/;"	v
load	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function load($test)$/;"	f
fixtures	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $fixtures = $test->codeFixtures;$/;"	v
createMethods	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $createMethods = function ($db, $fixtures) use ($test) {$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $methods = $db->methodSchemaCollection()->listMethods();$/;"	v
configName	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $configName = $db->configName();$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $msg = sprintf('Unable to insert fixtures for "%s" test case. %s', get_class($test), $e->getMessage());$/;"	v
on	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Run a function on each connection and collection of fixtures.$/;"	f
_runOperation	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _runOperation($fixtures, $operation)$/;"	f
dbs	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $dbs = $this->_fixtureConnections($fixtures);$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        foreach ($dbs as $connection => $fixtures) {$/;"	v
db	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $db = ConnectionManager::get($connection, false);$/;"	v
logQueries	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $logQueries = $db->logQueries();$/;"	v
_fixtureConnections	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _fixtureConnections($fixtures)$/;"	f
dbs	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $dbs = [];$/;"	v
fixture	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $fixture = $this->_loaded[$f];$/;"	v
unload	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function unload($test)$/;"	f
loadSingleMethod	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loadSingleMethod($name, $db = null, $drop = true)$/;"	f
db	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loadSingleMethod($name, $db = null, $drop = true)$/;"	v
fixture	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $fixture = $this->_fixtureMap[$name];$/;"	v
db	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $db = ConnectionManager::get($fixture->connection());$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $methods = $db->methodSchemaCollection()->listMethods();$/;"	v
shutDown	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function shutDown()$/;"	f
shutdown	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $shutdown = function ($db, $fixtures) {$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $connection = $db->configName();$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^                    $index = array_search($fixture, $this->_insertionMap[$connection]);$/;"	v
isFixtureSetup	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function isFixtureSetup($connection, $fixture)$/;"	f
TestCase	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\TestCase.php	/^abstract class TestCase extends CakeTestCase$/;"	c
responsible	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\TestCase.php	/^     * The class responsible for managing the creation, loading and removing of fixtures$/;"	c
methodFixtureManager	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\TestCase.php	/^    public $methodFixtureManager = null;$/;"	v
methodFixtureManager	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\TestCase.php	/^    public $methodFixtureManager = null;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\TestCase.php	/^     * Each parameter is a code module name that corresponds to a fixture, i.e. package, procedure or function name.$/;"	f
loadMethodFixtures	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\TestCase.php	/^    public function loadMethodFixtures()$/;"	f
args	.\vendor\cakedc\cakephp-oracle-driver\src\TestSuite\TestCase.php	/^        $args = func_get_args();$/;"	v
findRoot	.\vendor\cakedc\cakephp-oracle-driver\tests\bootstrap.php	/^$findRoot = function () {$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver\tests\bootstrap.php	/^    $root = dirname(__DIR__);$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver\tests\bootstrap.php	/^    $root = dirname(dirname(__DIR__));$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver\tests\bootstrap.php	/^    $root = dirname(dirname(dirname(__DIR__)));$/;"	v
DS	.\vendor\cakedc\cakephp-oracle-driver\tests\bootstrap.php	/^    define('DS', DIRECTORY_SEPARATOR);$/;"	d
_define	.\vendor\cakedc\cakephp-oracle-driver\tests\bootstrap.php	/^function _define($name, $value)$/;"	f
TMP	.\vendor\cakedc\cakephp-oracle-driver\tests\bootstrap.php	/^$TMP = new \\Cake\\Filesystem\\Folder(TMP);$/;"	v
cache	.\vendor\cakedc\cakephp-oracle-driver\tests\bootstrap.php	/^$cache = [$/;"	v
CalcCodeFixture	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^class CalcCodeFixture extends MethodTestFixture$/;"	c
type	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^\/\/    public $type = 'package';$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^\/\/    public $type = 'package';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^    public $name = 'CALC';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^    public $name = 'CALC';$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^    public $create = [];$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^    public $create = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^    public $drop = 'drop package calc';$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^    public $drop = 'drop package calc';$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^    public function __construct()$/;"	f
sum	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^                		function sum(a number, b number) return number;$/;"	f
sum	.\vendor\cakedc\cakephp-oracle-driver\tests\CodeFixture\CalcCodeFixture.php	/^                	function sum(a number, b number) return number is$/;"	f
ArticlesFixture	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesFixture.php	/^class ArticlesFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesFixture.php	/^    public $records = [$/;"	v
ArticlesTagsFixture	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesTagsFixture.php	/^class ArticlesTagsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesTagsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesTagsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesTagsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\ArticlesTagsFixture.php	/^    public $records = [$/;"	v
AuthorsFixture	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\AuthorsFixture.php	/^class AuthorsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\AuthorsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\AuthorsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\AuthorsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\AuthorsFixture.php	/^    public $records = [$/;"	v
TagsFixture	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\TagsFixture.php	/^class TagsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\TagsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\TagsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\TagsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver\tests\Fixture\TagsFixture.php	/^    public $records = [$/;"	v
QueryTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^class QueryTest extends CakeQueryTest$/;"	c
testSelectAliasedTables	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectAliasedTables()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['text' => FunctionsBuilder::toChar(new IdentifierExpression('a.body')), 'a.author_id'])$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['name' => 'b.name'])->from(['b' => 'authors'])$/;"	v
testSelectOrderBy	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrderBy()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['id' => 'asc'])->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc'])->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc'], true)->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc', 'published' => 'asc'], true)$/;"	v
driver	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $driver = $query->connection()->driver();$/;"	v
idField	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $idField = $driver->quoteIfAutoQuote('id');$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expression = $query->newExpr(["MOD(($idField + :offset), 2)"]);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
testSelectGroup	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectGroup()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['total' => 'count(author_id)', 'author_id'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1], ['total' => '1', 'author_id' => 3]];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'name' => 'larry'], ['total' => 2, 'name' => 'mariano']];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
testSelectWhereUsingExpressionInField	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectWhereUsingExpressionInField()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
subquery	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $subquery = clone $query;$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^                $field = clone $exp;$/;"	v
testSQLFunctions	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSQLFunctions()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select($/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 6]];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select([$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $date = $result->fetchAll('assoc');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
d	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $d = $result->fetchAll('assoc')[0]['d'];$/;"	v
date1	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $date1 = date('U');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
created	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $created = new IdentifierExpression('created');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
testSelectOrderByString	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrderByString()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
testSelectHaving	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'author_id' => 3]];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->having(['count(author_id)' => 2], ['count(author_id)' => 'integer'], true)$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1]];$/;"	v
testSelectOrHaving	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'author_id' => 3]];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1], ['total' => 1, 'author_id' => 3]];$/;"	v
testSelectAndHaving	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectAndHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1]];$/;"	v
testBind	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testBind()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
driver	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $driver = $query->connection()->driver();$/;"	v
createdField	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $createdField = $driver->quoteIfAutoQuote('created');$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $results = $query->select(['id', 'comment'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [['id' => '4', 'comment' => 'Fourth Comment for First Article']];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $results = $query->select(['id', 'comment'])$/;"	v
testInsertExpressionValues	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testInsertExpressionValues()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = (new Query($this->connection))->select('*')$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
subquery	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $subquery = new Query($this->connection);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = (new Query($this->connection))->select('*')$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
testSelectDistinctON	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testSelectDistinctON()$/;"	f
testUnion	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testUnion()$/;"	f
union	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))->select(['id', 'title'])->from(['a' => 'articles']);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['id', FunctionsBuilder::toChar(new IdentifierExpression('comment'))])$/;"	v
rows	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $rows = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $rows2 = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows3	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $rows3 = $result->fetchAll();$/;"	v
testUnionOrderBy	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testUnionOrderBy()$/;"	f
testUnionAll	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^    public function testUnionAll()$/;"	f
union	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))->select(['id', 'title'])->from(['a' => 'articles']);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['id', FunctionsBuilder::toChar(new IdentifierExpression('comment'))])$/;"	v
rows	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $rows = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\QueryTest.php	/^        $rows2 = $result->fetchAll();$/;"	v
CollectionTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^class CollectionTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $codeFixtures = [$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $codeFixtures = [$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^     * Oracle connection class instance.$/;"	c
connection	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $connection;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function setUp()$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^        $this->connection = ConnectionManager::get('test');$/;"	v
tearDown	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function tearDown()$/;"	f
testDescribeIncorrectMethod	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function testDescribeIncorrectMethod()$/;"	f
schema	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = new MethodsCollection($this->connection);$/;"	v
testDescribeCache	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function testDescribeCache()$/;"	f
schema	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = $this->connection->methodSchemaCollection();$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^        $method = $this->connection->methodSchemaCollection()->describe('CALC.SUM');$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = $this->connection->methodSchemaCollection();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^        $result = $schema->describe('CALC.SUM');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\CollectionTest.php	/^        $result = Cache::read('test_CALC_SUM', '_cake_method_');$/;"	v
MethodTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\MethodTest.php	/^class MethodTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\MethodTest.php	/^    public $codeFixtures = [$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\MethodTest.php	/^    public $codeFixtures = [$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\MethodTest.php	/^    public function setUp()$/;"	f
tearDown	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\MethodTest.php	/^    public function tearDown()$/;"	f
testConstructWithParameters	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\MethodTest.php	/^    public function testConstructWithParameters()$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\MethodTest.php	/^        $parameters = [$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\MethodTest.php	/^        $method = new Method('CALC.SUM', $parameters);$/;"	v
TableTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\TableTest.php	/^class TableTest extends CakeTableTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\TableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\Database\Schema\TableTest.php	/^    public $fixtures = [$/;"	v
DatabaseSuite	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^class DatabaseSuite extends TestSuite$/;"	c
suite	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^    public static function suite()$/;"	f
suite	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^        $suite = new self('Database related tests');$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^    \/\/ public function count()$/;"	f
run	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^    public function run($/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^        PHPUnit_Framework_TestResult $result = null,$/;"	v
filter	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^        $filter = false,$/;"	v
groups	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^        array $groups = [],$/;"	v
excludeGroups	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^        array $excludeGroups = [],$/;"	v
processIsolation	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^        $processIsolation = false$/;"	v
permutations	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^        $permutations = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\DatabaseSuite.php	/^            $result = parent::run($result, $filter, $groups, $excludeGroups, $processIsolation);$/;"	v
AssociationCollectionTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\AssociationCollectionTest.php	/^class AssociationCollectionTest extends CakeAssociationCollectionTest$/;"	c
AssociationProxyTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\AssociationProxyTest.php	/^class AssociationProxyTest extends CakeAssociationProxyTest$/;"	c
testUpdateAllFromAssociation	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\AssociationProxyTest.php	/^    public function testUpdateAllFromAssociation()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\AssociationProxyTest.php	/^        $articles = TableRegistry::get('articles');$/;"	v
comments	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\AssociationProxyTest.php	/^        $comments = TableRegistry::get('comments');$/;"	v
changed	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\AssociationProxyTest.php	/^        $changed = $comments$/;"	v
AssociationTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\AssociationTest.php	/^class AssociationTest extends CakeAssociationTest$/;"	c
TreeBehaviorTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Behavior\TreeBehaviorTest.php	/^class TreeBehaviorTest extends CakeTreeBehaviorTest$/;"	c
BehaviorRegistryTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\BehaviorRegistryTest.php	/^class BehaviorRegistryTest extends CakeBehaviorRegistryTest$/;"	c
BehaviorTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\BehaviorTest.php	/^class BehaviorTest extends CakeBehaviorTest$/;"	c
BindingKeyTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\BindingKeyTest.php	/^class BindingKeyTest extends CakeBindingKeyTest$/;"	c
EagerLoaderTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\EagerLoaderTest.php	/^class EagerLoaderTest extends CakeEagerLoaderTest$/;"	c
EntityTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\EntityTest.php	/^class EntityTest extends CakeEntityTest$/;"	c
LocatorAwareTraitTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^class LocatorAwareTraitTest extends TestCase$/;"	c
setUp	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^    public function setUp()$/;"	f
subject	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $this->subject = $this->getObjectForTrait('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorAwareTrait');$/;"	v
testMethodLocator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^    public function testMethodLocator()$/;"	f
methodLocator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $methodLocator = $this->subject->methodLocator();$/;"	v
newLocator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $newLocator = $this->getMock('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorInterface');$/;"	v
subjectLocator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $subjectLocator = $this->subject->methodLocator($newLocator);$/;"	v
is	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^ * Used to test correct class is instantiated when using $this->_locator->get();$/;"	c
MyUsersMethod	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^class MyUsersMethod extends Method$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_method = 'users';$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_method = 'users';$/;"	v
MethodLocatorTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^class MethodLocatorTest extends TestCase$/;"	c
_locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_locator;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function setUp()$/;"	f
_locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $this->_locator = new MethodLocator;$/;"	v
testConfig	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfig()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $data = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config('Tests', $data);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config();$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $expected = ['Tests' => $data];$/;"	v
testConfigPlugin	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigPlugin()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $data = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config('TestPlugin.TestPluginComments', $data);$/;"	v
testConfigOnDefinedInstance	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigOnDefinedInstance()$/;"	f
users	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $users = $this->_locator->get('Users');$/;"	v
testExists	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testExists()$/;"	f
testExistsPlugin	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testExistsPlugin()$/;"	f
testGet	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGet()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Articles', [$/;"	v
result2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result2 = $this->_locator->get('Articles');$/;"	v
testGetFallbacks	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetFallbacks()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Droids');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('R2D2', ['className' => 'Droids']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('C3P0', ['className' => 'Droids', 'method' => 'rebels']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Funky.Chipmunks');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Awesome', ['className' => 'Funky.Monkies']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Stuff', ['className' => 'CakeDC\\OracleDriver\\ORM\\Method']);$/;"	v
testGetWithConfig	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithConfig()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Articles');$/;"	v
testGetWithConfigClassName	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithConfigClassName()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('MyUsersMethodAlias');$/;"	v
testGetExistingWithConfigData	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetExistingWithConfigData()$/;"	f
users	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $users = $this->_locator->get('Users');$/;"	v
testGetWithSameOption	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithSameOption()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Users', ['className' => 'CakeDC\\OracleDriver\\Test\\TestCase\\ORM\\Locator\\MyUsersMethod']);$/;"	v
result2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result2 = $this->_locator->get('Users', ['className' => 'CakeDC\\OracleDriver\\Test\\TestCase\\ORM\\Locator\\MyUsersMethod']);$/;"	v
testGetWithConventions	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetWithConventions()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('articles');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Articles');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('authors');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Authors');$/;"	v
testGetPlugin	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPlugin()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('TestPlugin.TestPluginComments');$/;"	v
second	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $second = $this->_locator->get('TestPlugin.TestPluginComments');$/;"	v
testGetMultiplePlugins	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetMultiplePlugins()$/;"	f
app	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
plugin1	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin1 = $this->_locator->get('TestPlugin.Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin1	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin1 = $this->_locator->get('TestPlugin.Comments');$/;"	v
app	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
testGetPluginWithClassNameOption	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPluginWithClassNameOption()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Comments', [$/;"	v
class	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $class = 'TestPlugin\\Model\\Method\\TestPluginCommentsMethod';$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $this->assertFalse($this->_locator->exists('TestPlugin.TestPluginComments'), 'Full class alias should not exist');$/;"	c
second	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $second = $this->_locator->get('Comments');$/;"	v
testGetPluginWithFullNamespaceName	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPluginWithFullNamespaceName()$/;"	f
class	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $class = 'TestPlugin\\Model\\Method\\TestPluginCommentsMethod';$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Comments', [$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $this->assertFalse($this->_locator->exists('TestPlugin.TestPluginComments'), 'Full class alias should not exist');$/;"	c
testConfigAndBuild	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigAndBuild()$/;"	f
map	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $map = $this->_locator->config();$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $connection = ConnectionManager::get('test', false);$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $options = ['connection' => $connection];$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $map = $this->_locator->config();$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $schema = ['id' => ['type' => 'rubbish']];$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $method = $this->_locator->get('users', ['method' => 'users']);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $method = $this->_locator->get('users', ['className' => __NAMESPACE__ . '\\MyUsersMethod']);$/;"	v
testSet	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testSet()$/;"	f
mock	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $mock = $this->getMock('CakeDC\\OracleDriver\\ORM\\Method');$/;"	v
testSetPlugin	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testSetPlugin()$/;"	f
mock	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $mock = $this->getMock('TestPlugin\\Model\\Method\\CommentsMethod');$/;"	v
testGenericInstances	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGenericInstances()$/;"	f
foos	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $foos = $this->_locator->get('Foos');$/;"	v
bars	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $bars = $this->_locator->get('Bars');$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $expected = ['Foos' => $foos, 'Bars' => $bars];$/;"	v
testRemove	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testRemove()$/;"	f
first	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $first = $this->_locator->get('Comments');$/;"	v
second	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $second = $this->_locator->get('Comments');$/;"	v
testRemovePlugin	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testRemovePlugin()$/;"	f
app	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
plugin	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
app2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app2 = $this->_locator->get('Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin3	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin3 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
MarshallerTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MarshallerTest.php	/^class MarshallerTest extends CakeMarshallerTest$/;"	c
MethodRegistryTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^class MethodRegistryTest extends TestCase$/;"	c
_originalLocator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    protected $_originalLocator;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function setUp()$/;"	f
_originalLocator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $this->_originalLocator = MethodRegistry::locator();$/;"	v
tearDown	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function tearDown()$/;"	f
_setMockLocator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    protected function _setMockLocator()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->getMock('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorInterface');$/;"	v
testLocator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testLocator()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testLocatorDefault	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testLocatorDefault()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = MethodRegistry::locator();$/;"	v
testConfig	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testConfig()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testGet	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testGet()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testSet	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testSet()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $method = $this->getMock('CakeDC\\OracleDriver\\ORM\\Method');$/;"	v
locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testRemove	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testRemove()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testClear	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testClear()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
MethodTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^class MethodTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^    public $codeFixtures = ['plugin.CakeDC\/OracleDriver.Calc'];$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^    public $codeFixtures = ['plugin.CakeDC\/OracleDriver.Calc'];$/;"	v
testMethodCall	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^    public function testMethodCall()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^        $method = MethodRegistry::get('CalcSum', ['method' => 'CALC.SUM']);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^        $request = $method->newRequest(['A' => 5, 'B' => 10]);$/;"	v
testOutParameterMethodCall	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^    public function testOutParameterMethodCall()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^        $method = MethodRegistry::get('CalcTwice', ['method' => 'CALC.TWICE']);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\MethodTest.php	/^        $request = $method->newRequest(['A' => 5]);$/;"	v
QueryRegressionTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^class QueryRegressionTest extends CakeQueryRegressionTest$/;"	c
testComplexOrderWithUnion	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testComplexOrderWithUnion()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Comments');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find();$/;"	v
inner	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $inner = $table->find()$/;"	v
inner2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $inner2 = $table->find()$/;"	v
order	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $order = $query->func()$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $results = $query->toArray();$/;"	v
testSaveWithExpressionProperty	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testSaveWithExpressionProperty()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $articles = TableRegistry::get('Articles');$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $article = $articles->newEntity();$/;"	v
testDeepBelongsToManySubqueryStrategy	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testDeepBelongsToManySubqueryStrategy()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Authors');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $result = $table->find()$/;"	v
testDeepBelongsToManySubqueryStrategy2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testDeepBelongsToManySubqueryStrategy2()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Authors');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $result = $table->Articles$/;"	v
testSubqueryInSelectExpression	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testSubqueryInSelectExpression()$/;"	f
testCountWithUnionQuery	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testCountWithUnionQuery()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find()$/;"	v
query2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query2 = $table->find()$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $fields = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find()$/;"	v
query2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query2 = $table->find()$/;"	v
QueryTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^class QueryTest extends CakeQueryTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public $fixtures = [$/;"	v
testAutoFields	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFields()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find('all')$/;"	v
testAutoFieldsWithAssociations	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFieldsWithAssociations()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find()$/;"	v
testAutoFieldsWithContainQueryBuilder	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFieldsWithContainQueryBuilder()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find()$/;"	v
testCountWithGroup	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testCountWithGroup()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $query = $table->find('all');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $result = $query->count();$/;"	v
testNotMatchingNested	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testNotMatchingNested()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('authors');$/;"	v
articles	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $articles = $table->hasMany('articles');$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $expected = [$/;"	v
testLeftJoinWith	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testLeftJoinWith()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('authors');$/;"	v
orderFn	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $orderFn = function ($q) {$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $expected = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $fields = ['total_articles', 'id', 'name'];$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $results = $table$/;"	v
testCustomBindings	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testCustomBindings()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        $query = $table->find()->where(['id >' => 1]);$/;"	v
e	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^            $e = new QueryExpression();$/;"	v
testNotMatchingDeep	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testNotMatchingDeep()$/;"	f
testLeftJoinWithSelect	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^    public function testLeftJoinWithSelect()$/;"	f
for	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\QueryTest.php	/^        \/\/ @todo implement Expression class for analytic functions$/;"	c
RequestTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^class RequestTest extends TestCase$/;"	c
testSetOneParamNoSetters	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testSetOneParamNoSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testSetMultiplePropertiesNoSetters	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testSetMultiplePropertiesNoSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testSetOneParamWithSetter	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testSetOneParamWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\\\ORM\\Request', ['_setName']);$/;"	v
testMultipleWithSetter	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testMultipleWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName', '_setStuff']);$/;"	v
testBypassSetters	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testBypassSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName', '_setStuff']);$/;"	v
testConstructor	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testConstructor()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
testGetNoGetters	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testGetNoGetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'foo' => 'bar']);$/;"	v
testGetCustomGetters	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCustomGetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testGetCustomGettersAfterSet	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCustomGettersAfterSet()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testGetCacheClearedByUnset	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCacheClearedByUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testMagicSet	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicSet()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testMagicSetWithSetter	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicSetWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName']);$/;"	v
testMagicGetWithGetter	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicGetWithGetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testIndirectModification	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testIndirectModification()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testHas	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testHas()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getThings']);$/;"	v
testUnset	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'bar']);$/;"	v
testUnsetMultiple	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testUnsetMultiple()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'bar', 'thing' => 2]);$/;"	v
testMagicIsset	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicIsset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
testMagicUnset	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['unsetProperty']);$/;"	v
testIssetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testIssetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
testGetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testGetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['get']);$/;"	v
testSetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testSetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['set']);$/;"	v
testUnsetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testUnsetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['unsetProperty']);$/;"	v
testMethodCache	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testMethodCache()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setFoo', '_getBar']);$/;"	v
request2	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request2 = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setBar']);$/;"	v
testSetGetLongProperyNames	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testSetGetLongProperyNames()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getVeryLongProperty', '_setVeryLongProperty']);$/;"	v
testJsonSerialize	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testJsonSerialize()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $data = ['name' => 'James', 'age' => 20, 'phones' => ['123', '457']];$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testIsNew	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testIsNew()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $data = [$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testConstructorWithMarkNew	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testConstructorWithMarkNew()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
testToArray	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testToArray()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $data = ['name' => 'James', 'age' => 20, 'phones' => ['123', '457']];$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testToArrayWithAccessor	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testToArrayWithAccessor()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $expected = ['name' => 'Jose', 'email' => 'mark@example.com'];$/;"	v
testToString	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testToString()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['foo' => 1, 'bar' => 2]);$/;"	v
testDebugInfo	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testDebugInfo()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['foo' => 'bar'], ['markClean' => true]);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $result = $request->__debugInfo();$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $expected = [$/;"	v
testRepository	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^\/\/    public function testRepository()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^\/\/        $request = new Request;$/;"	v
emptyNamesProvider	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function emptyNamesProvider()$/;"	f
testEmptyProperties	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testEmptyProperties($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request();$/;"	v
testSetEmptyPropertyName	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^    public function testSetEmptyPropertyName($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request();$/;"	v
ResultSetTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\ResultSetTest.php	/^class ResultSetTest extends CakeResultSetTest$/;"	c
RulesCheckerIntegrationTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\RulesCheckerIntegrationTest.php	/^class RulesCheckerIntegrationTest extends CakeRulesCheckerIntegrationTest$/;"	c
TableRegistryTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableRegistryTest.php	/^class TableRegistryTest extends CakeTableRegistryTest$/;"	c
TableTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^class TableTest extends CakeTableTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^    public $fixtures = [$/;"	v
testFindListNoHydration	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^    public function testFindListNoHydration()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $table = new Table([$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $query = $table$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['fields' => ['id', 'username']])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['groupField' => 'odd'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
testFindListHydrated	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^    public function testFindListHydrated()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $table = new Table([$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['fields' => ['id', 'username']])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['groupField' => 'odd'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
testSaveReplaceSaveStrategyAdding	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^    public function testSaveReplaceSaveStrategyAdding()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $articles = new Table([$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->newEntity([$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->save($article, ['associated' => ['Comments']]);$/;"	v
commentId	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $commentId = $article->comments[0]->id;$/;"	v
sizeComments	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $sizeComments = count($article->comments);$/;"	v
articleId	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $articleId = $article->id;$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->save($article, ['associated' => ['Comments']]);$/;"	v
TableUuidTest	.\vendor\cakedc\cakephp-oracle-driver\tests\TestCase\ORM\TableUuidTest.php	/^class TableUuidTest extends CakeTableUuidTest$/;"	c
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    protected $_configInitialized = false;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    protected $_configInitialized = false;$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    public function config($key = null, $value = null, $merge = true)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    public function config($key = null, $value = null, $merge = true)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            $this->_config = $this->_defaultConfig;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            $this->_configInitialized = true;$/;"	v
_configWrite	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    protected function _configWrite($key, $value, $merge = false)$/;"	f
merge	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    protected function _configWrite($key, $value, $merge = false)$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        if (is_string($key) && $value === null) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            $update = is_array($key) ? $key : [$key => $value];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^                $this->_config = array_merge($this->_config, Hash::expand($update));$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^                $this->_config = Hash::merge($this->_config, Hash::expand($update));$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            foreach ($key as $k => $val) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        $update =& $this->_config;$/;"	v
stack	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        $stack = explode('.', $key);$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            $update =& $update[$k];$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        $update = $value;$/;"	v
_configDelete	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    protected function _configDelete($key)$/;"	f
update	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        $update =& $this->_config;$/;"	v
stack	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        $stack = explode('.', $key);$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        $length = count($stack);$/;"	v
i	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        foreach ($stack as $i => $k) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            $update =& $update[$k];$/;"	v
_configRead	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    protected function _configRead($key)$/;"	f
return	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^        $return = $this->_config;$/;"	v
return	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^                $return = null;$/;"	v
return	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            $return = $return[$k];$/;"	v
configShallow	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    public function configShallow($key, $value = null)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^    public function configShallow($key, $value = null)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            $this->_config = $this->_defaultConfig;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Config\ConfigTrait.php	/^            $this->_configInitialized = true;$/;"	v
_instance	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Core\Singleton.php	/^    protected static $_instance;$/;"	v
getInstance	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Core\Singleton.php	/^    final public static function getInstance()$/;"	f
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Core\Singleton.php	/^    final private function __construct()$/;"	f
init	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Core\Singleton.php	/^    protected function init()$/;"	f
__wakeup	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Core\Singleton.php	/^    final private function __wakeup()$/;"	f
__clone	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Core\Singleton.php	/^    final private function __clone()$/;"	f
_startQuote	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_startQuote = '"';$/;"	v
_startQuote	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_startQuote = '"';$/;"	v
_endQuote	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_endQuote = '"';$/;"	v
_endQuote	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_endQuote = '"';$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^     * The schema dialect class for this driver$/;"	c
_schemaDialect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_schemaDialect;$/;"	v
_transformDistinct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _transformDistinct($query)$/;"	f
_selectQueryTranslator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _selectQueryTranslator($query)$/;"	f
limit	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $limit = $query->clause('limit');$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $offset = $query->clause('offset');$/;"	v
_pagingSubquery	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _pagingSubquery($original, $limit, $offset)$/;"	f
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $field = 'cake_paging_out."_cake_page_rownum_"';$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $query = clone $original;$/;"	v
outer	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $outer = new Query($query->connection());$/;"	v
outer2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $outer2 = new Query($query->connection());$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            $value = (int)$offset + (int)$limit;$/;"	v
_expressionTranslators	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _expressionTranslators()$/;"	f
namespace	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $namespace = 'Cake\\Database\\Expression';$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^     * @param \\Cake\\Database\\Expression\\FunctionExpression $expression The function expression$/;"	f
_transformFunctionExpression	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _transformFunctionExpression(FunctionExpression $expression)$/;"	f
p	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                            $p = ['value' => [$p => 'literal'], 'type' => null];$/;"	v
time	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                $time = new FunctionExpression('LOCALTIMESTAMP', [' 0 ' => 'literal']);$/;"	v
time	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                $time = new FunctionExpression('LOCALTIMESTAMP', [' 0 ' => 'literal']);$/;"	v
keys	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                            $keys = explode(' ', $p);$/;"	v
unit	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                            $unit = array_pop($keys);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                            $value = implode(' ', $keys);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                            $value = str_replace("'", '', $value);$/;"	v
p	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                            $p = sprintf("'%s' %s", $value, $unit);$/;"	v
schemaDialect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    public function schemaDialect()$/;"	f
_schemaDialect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            $this->_schemaDialect = new OracleSchema($this);$/;"	v
disableForeignKeySQL	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    public function disableForeignKeySQL()$/;"	f
enableForeignKeySQL	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    public function enableForeignKeySQL()$/;"	f
_processAllForeignKeys	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _processAllForeignKeys($type)$/;"	f
startQuote	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $startQuote = $this->_startQuote;$/;"	v
endQuote	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $endQuote = $this->_endQuote;$/;"	v
schemaName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            $schemaName = strtoupper($this->_config['schema']);$/;"	v
fromWhere	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            $fromWhere = "from all_constraints$/;"	v
fromWhere	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            $fromWhere = "from user_constraints$/;"	v
newCompiler	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    public function newCompiler()$/;"	f
_insertQueryTranslator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _insertQueryTranslator($query)$/;"	f
v	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $v = $query->clause('values');$/;"	v
newQuery	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $newQuery = $query->connection()->newQuery();$/;"	v
cols	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $cols = $v->columns();$/;"	v
placeholder	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $placeholder = 0;$/;"	v
replaceQuery	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        $replaceQuery = false;$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^        foreach ($v->values() as $k => $val) {$/;"	v
fillLength	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            $fillLength = count($cols) - count($val);$/;"	v
val	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                $val = array_merge($val, array_fill(0, $fillLength, null));$/;"	v
col	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            foreach ($val as $col => $attr) {$/;"	v
select	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            $select = array_combine($cols, $val);$/;"	v
replaceQuery	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^                $replaceQuery = true;$/;"	v
q	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Dialect\OracleDialectTrait.php	/^            $q = $newQuery->connection()->newQuery();$/;"	v
OracleBase	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^abstract class OracleBase extends Driver$/;"	c
_baseConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    protected $_baseConfig = [$/;"	v
_baseConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    protected $_baseConfig = [$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    protected $_defaultConfig = [];$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    protected $_defaultConfig = [];$/;"	v
connect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function connect()$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $config = $this->_config;$/;"	v
dsn	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $dsn = $this->getDSN();$/;"	v
getDSN	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function getDSN()$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $config = $this->_config;$/;"	v
service	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^            $service = 'SERVICE_NAME=' . $config['database'];$/;"	v
serviceName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $serviceName = $config['sid'];$/;"	v
service	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $service = 'SID=' . $serviceName;$/;"	v
pooled	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^            $pooled = '';$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^            $instance = '';$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $instance = '(INSTANCE_NAME = ' . $config['instance'] . ')';$/;"	v
pooled	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $pooled = '(SERVER=POOLED)';$/;"	v
supportsDynamicConstraints	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function supportsDynamicConstraints()$/;"	f
prepare	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function prepare($query)$/;"	f
isObject	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $isObject = ($query instanceof \\Cake\\ORM\\Query) || ($query instanceof \\Cake\\Database\\Query);$/;"	v
queryStringRaw	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $queryStringRaw = $isObject ? $query->sql() : $query;$/;"	v
queryString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $queryString = $this->_fromDualIfy($queryStringRaw);$/;"	v
innerStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $innerStatement = $this->_connection->prepare($queryString);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $statement = $this->_wrapStatement($innerStatement);$/;"	v
disableBuffer	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $disableBuffer = false;$/;"	v
normalizedQuery	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $normalizedQuery = substr(strtolower(trim($queryString, " \\t\\n\\r\\0\\x0B(")), 0, 6);$/;"	v
disableBuffer	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^            $disableBuffer = true;$/;"	v
_fromDualIfy	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    protected function _fromDualIfy($queryString)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $statement = strtolower(trim($queryString));$/;"	v
convertPositionalToNamedPlaceholders	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function convertPositionalToNamedPlaceholders($query)$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $count = 0;$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $inLiteral = false;$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $stmtLen = strlen($query);$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $paramMap = [];$/;"	v
len	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $len = strlen($paramMap[$count]);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $query = substr_replace($query, ":param$count", $i, 1);$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $stmtLen = strlen($query);$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $inLiteral = !$inLiteral;$/;"	v
lastInsertId	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function lastInsertId($table = null, $column = null)$/;"	f
column	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function lastInsertId($table = null, $column = null)$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $sequenceName = 'seq_' . strtolower($table);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $statement = $this->_connection->query("SELECT {$sequenceName}.CURRVAL FROM DUAL");$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $result = $statement->fetch();$/;"	v
isConnected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function isConnected()$/;"	f
connected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^            $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $connected = $this->_connection->query('SELECT 1 FROM DUAL');$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^                $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^        $this->connected = !empty($connected);$/;"	v
quoteIfAutoQuote	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function quoteIfAutoQuote($identifier)$/;"	f
_wrapStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    protected function _wrapStatement($statement)$/;"	f
isOci	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function isOci()$/;"	f
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function prepareMethod($queryString, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleBase.php	/^    public function prepareMethod($queryString, $options = [])$/;"	v
OracleOCI	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^class OracleOCI extends OracleBase$/;"	c
_connect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^    protected function _connect($dsn, array $config)$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^        $connection = new OCI8Connection($dsn, $config['username'], $config['password'], $config['flags']);$/;"	v
enabled	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^    public function enabled()$/;"	f
isConnected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^    public function isConnected()$/;"	f
connected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^            $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^                $connected = $this->_connection->query('SELECT 1 FROM DUAL');$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^                $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^        $this->connected = !empty($connected);$/;"	v
lastInsertId	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^    public function lastInsertId($table = null, $column = null)$/;"	f
column	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^    public function lastInsertId($table = null, $column = null)$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^        $sequenceName = 'seq_' . strtolower($table);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^        $statement = $this->_connection->query("SELECT {$sequenceName}.CURRVAL FROM DUAL");$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^        $result = $statement->fetch(PDO::FETCH_NUM);$/;"	v
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^    public function prepareMethod($queryString, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^    public function prepareMethod($queryString, $options = [])$/;"	v
innerStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^        $innerStatement = $this->_connection->prepare($queryString);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^        $statement = new MethodPDOStatement($innerStatement, $this);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^            $statement = new MethodOracleStatement($statement, $this);$/;"	v
isOci	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OracleOCI.php	/^    public function isOci() {$/;"	f
OraclePDO	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OraclePDO.php	/^class OraclePDO extends OracleBase {$/;"	c
_connect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OraclePDO.php	/^    protected function _connect($database, array $config) {$/;"	f
database	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OraclePDO.php	/^        $database = 'oci:dbname=' . $database;$/;"	v
enabled	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Driver\OraclePDO.php	/^    public function enabled() {$/;"	f
UnallowedDataTypeException	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Exception\UnallowedDataTypeException.php	/^class UnallowedDataTypeException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Exception\UnallowedDataTypeException.php	/^    protected $_messageTemplate = 'Column type %s not supported.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Exception\UnallowedDataTypeException.php	/^    protected $_messageTemplate = 'Column type %s not supported.';$/;"	v
represents	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^ * This class represents a function call string in a SQL statement. Calls can be$/;"	c
call	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^ * This class represents a function call string in a SQL statement. Calls can be$/;"	f
and	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^ * constructed by passing the name of the function and a list of params.$/;"	f
SimpleExpression	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^class SimpleExpression implements ExpressionInterface$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^     * The name of the function to be constructed when generating the SQL string$/;"	f
_name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^    protected $_name;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^     * Constructor. Takes a name for the function to be invoked.$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^     * @param string $name the name of the function to be constructed$/;"	f
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^    public function __construct($name, $returnType = 'string')$/;"	f
returnType	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^    public function __construct($name, $returnType = 'string')$/;"	v
_name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^        $this->_name = $name;$/;"	v
_returnType	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^        $this->_returnType = $returnType;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^     * Sets the name of the SQL function to be invoke in this expression,$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^    public function name($name = null)$/;"	f
_name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^        $this->_name = $name;$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^    public function sql(ValueBinder $generator)$/;"	f
traverse	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Expression\SimpleExpression.php	/^    public function traverse(callable $callable) {$/;"	f
FunctionsBuilder	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^class FunctionsBuilder$/;"	c
_defaultDateFormat	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    protected $_defaultDateFormat = 'YYYY-MM-DD HH24:MI:SS';$/;"	v
_defaultDateFormat	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    protected $_defaultDateFormat = 'YYYY-MM-DD HH24:MI:SS';$/;"	v
calls	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * arbitrary function calls in the final SQL string.$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param string $name the name of the SQL function to constructed$/;"	f
param	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param array $types list of types for each function param$/;"	f
_build	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    protected function _build($name, $params = [], $types = [])$/;"	f
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    protected function _build($name, $params = [], $types = [])$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * Helper function to build a function expression argument that$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument.$/;"	f
_literalArgument	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    protected function _literalArgument($expression)$/;"	f
expression	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^            $expression = [$expression => 'literal'];$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^            $expression = [$expression];$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
toChar	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    public static function toChar($expression, $types = [])$/;"	f
types	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    public static function toChar($expression, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param mixed $format the function argument$/;"	f
toCharWithFormat	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    public static function toCharWithFormat($expression, $format = null, $types = [])$/;"	f
format	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    public static function toCharWithFormat($expression, $format = null, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
format	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^            $format = $builder->_defaultDateFormat;$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param mixed $format the function argument$/;"	f
toDate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    public static function toDate($expression, $format = null, $types = [])$/;"	f
format	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    public static function toDate($expression, $format = null, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
format	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^            $format = $builder->_defaultDateFormat;$/;"	v
calls	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * Magic method dispatcher to create custom SQL function calls$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * @param string $name the SQL function name to construct$/;"	f
and	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^     * parameters for the SQL function and second one a list of types to bind to those$/;"	f
__call	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^    public function __call($name, $args)$/;"	f
builder	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
DebugMethodLog	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^class DebugMethodLog extends MethodLogger$/;"	c
_queries	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    protected $_queries = [];$/;"	v
_queries	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    protected $_queries = [];$/;"	v
_logger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    protected $_logger;$/;"	v
_connectionName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    protected $_connectionName;$/;"	v
_totalTime	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    protected $_totalTime = 0;$/;"	v
_totalTime	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    protected $_totalTime = 0;$/;"	v
_totalRows	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    protected $_totalRows = 0;$/;"	v
_totalRows	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    protected $_totalRows = 0;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    public function __construct($logger, $name)$/;"	f
_logger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^        $this->_logger = $logger;$/;"	v
_connectionName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^        $this->_connectionName = $name;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    public function name()$/;"	f
queries	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    public function queries()$/;"	f
totalTime	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    public function totalTime()$/;"	f
totalRows	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    public function totalRows()$/;"	f
log	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\DebugMethodLog.php	/^    public function log(LoggedMethod $method)$/;"	f
LoggedMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^class LoggedMethod$/;"	c
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $method = '';$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $method = '';$/;"	v
took	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $took = 0;$/;"	v
took	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $took = 0;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $params = [];$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $params = [];$/;"	v
numRows	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $numRows = 0;$/;"	v
numRows	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $numRows = 0;$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public $error;$/;"	v
__toString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\LoggedMethod.php	/^    public function __toString()$/;"	f
MethodLogger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^class MethodLogger$/;"	c
log	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^    public function log(LoggedMethod $method)$/;"	f
for	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^     * Wrapper function for the logger object, useful for unit testing$/;"	f
_log	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^    protected function _log($method)$/;"	f
used	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^     * Helper function used to replace method placeholders by the real$/;"	f
_interpolate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^    protected function _interpolate($method)$/;"	f
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^        $params = array_map(function ($p) {$/;"	v
keys	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^        $keys = [];$/;"	v
limit	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^        $limit = is_int(key($params)) ? 1 : -1;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^        foreach ($params as $key => $param) {$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLogger.php	/^            if ($param == 'NULL' || $key == ':result') {$/;"	v
MethodLoggingStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^class MethodLoggingStatement extends MethodStatementDecorator$/;"	c
_logger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    protected $_logger;$/;"	v
_compiledParams	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    protected $_compiledParams = [];$/;"	v
_compiledParams	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    protected $_compiledParams = [];$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for the execute function to calculate time spent$/;"	f
execute	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    public function execute($params = null)$/;"	f
t	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^        $t = microtime(true);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^        $method = new LoggedMethod();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^            $result = parent::execute($params);$/;"	v
_log	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    protected function _log($method, $params, $startTime)$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for bindValue function to gather each parameter to be later used$/;"	f
bindValue	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^            $type = 'string';$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^            $value = $this->cast($value, $type)[0];$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    public function logger($instance = null)$/;"	f
_logger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^        return $this->_logger = $instance;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for bindValue function to gather each parameter to be later used$/;"	f
bindParam	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^            $type = 'string';$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Log\MethodLoggingStatement.php	/^            $value = $this->cast($value, $type)[0];$/;"	v
OCI8Connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^class OCI8Connection extends PDO$/;"	c
_inTransaction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    protected $_inTransaction = false;$/;"	v
_inTransaction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    protected $_inTransaction = false;$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    protected $dbh;$/;"	v
executeMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    protected $executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
executeMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    protected $executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    protected $_defaultConfig = [];$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    protected $_defaultConfig = [];$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function __construct($dsn, $username, $password, $options)$/;"	f
persistent	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $persistent = !empty($options['persistent']);$/;"	v
charset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $charset = !empty($options['charset']) ? $options['charset'] : null;$/;"	v
sessionMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $sessionMode = !empty($options['sessionMode']) ? $options['sessionMode'] : null;$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^            $this->dbh = @oci_pconnect($username, $password, $dsn, $charset, $sessionMode);$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^            $this->dbh = @oci_connect($username, $password, $dsn, $charset, $sessionMode);$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function dbh()$/;"	f
getServerVersion	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function getServerVersion()$/;"	f
versionData	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $versionData = oci_server_version($this->dbh);$/;"	v
prepare	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function prepare($statement, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function prepare($statement, $options = null)$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function query($statement, $mode = PDO::ATTR_DEFAULT_FETCH_MODE, $arg3 = null)$/;"	f
mode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function query($statement, $mode = PDO::ATTR_DEFAULT_FETCH_MODE, $arg3 = null)$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $args = func_get_args();$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $sql = $args[0];$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $stmt = $this->prepare($sql);$/;"	v
quote	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function quote($string, $type = \\PDO::PARAM_STR)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function quote($string, $type = \\PDO::PARAM_STR)$/;"	v
string	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $string = str_replace("'", "''", $string);$/;"	v
exec	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function exec($statement)$/;"	f
stmt	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $stmt = $this->prepare($statement);$/;"	v
getExecuteMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function getExecuteMode()$/;"	f
isTransaction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function isTransaction()$/;"	f
inTransaction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function inTransaction()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        return $this->executeMode == OCI_NO_AUTO_COMMIT;$/;"	v
beginTransaction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function beginTransaction()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_NO_AUTO_COMMIT;$/;"	v
commit	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function commit()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
rollBack	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function rollBack()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
errorCode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function errorCode()$/;"	f
error	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^        $error = oci_error($this->dbh);$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^            $error = $error['code'];$/;"	v
errorInfo	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Connection.php	/^    public function errorInfo()$/;"	f
OCI8Exception	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Exception.php	/^class OCI8Exception extends Exception$/;"	c
fromErrorInfo	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Exception.php	/^    public static function fromErrorInfo($error)$/;"	f
OCI8Statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^class OCI8Statement extends \\PDOStatement implements \\IteratorAggregate$/;"	c
_returnLobs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_returnLobs = true;$/;"	v
_returnLobs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_returnLobs = true;$/;"	v
_dbh	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_dbh;$/;"	v
_sth	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_sth;$/;"	v
_conn	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_conn;$/;"	v
_PARAM	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected static $_PARAM = ':param';$/;"	v
_PARAM	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected static $_PARAM = ':param';$/;"	v
fetchModeMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected static $fetchModeMap = [$/;"	v
fetchModeMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected static $fetchModeMap = [$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchColumnNumber = 0;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchColumnNumber = 0;$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_defaultFetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_defaultFetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_paramMap = [];$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_paramMap = [];$/;"	v
_values	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_values = [];$/;"	v
_values	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_values = [];$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchClassName = '\\stdClass';$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchClassName = '\\stdClass';$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchIntoObject = null;$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchIntoObject = null;$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchArguments = array();$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchArguments = array();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_results = array();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    protected $_results = array();$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function __construct($dbh, $statement, OCI8Connection $conn)$/;"	f
_sth	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^            $this->_sth = $statement;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^            $paramMap = [];$/;"	v
_sth	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^            $this->_sth = oci_parse($dbh, $statement);$/;"	v
_dbh	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $this->_dbh = $dbh;$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $this->_paramMap = $paramMap;$/;"	v
_conn	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $this->_conn = $conn;$/;"	v
convertPositionalToNamedPlaceholders	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    static public function convertPositionalToNamedPlaceholders($statement)$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $count = 1;$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $inLiteral = false;$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $stmtLen = strlen($statement);$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $paramMap = [];$/;"	v
len	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $len = strlen($paramMap[$count]);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $statement = substr_replace($statement, ":param$count", $i, 1);$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $stmtLen = strlen($statement);$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $inLiteral = !$inLiteral;$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function bindValue($param, $value, $type = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function bindValue($param, $value, $type = null)$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function bindParam($column, &$variable, $type = null, $length = null, $driverData = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function bindParam($column, &$variable, $type = null, $length = null, $driverData = null)$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $column = isset($this->_paramMap[$column]) ? $this->_paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        \/\/ where $type = ['ociType' => "REAL_OCI_TYPE", 'plsql_type' => 'VARRAY', 'php_type' => 'string']$/;"	v
like	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        \/\/ this way we could choose correct type and correct binding function like oci_bind_array_by_name$/;"	f
variable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^            $variable = oci_new_cursor($this->_dbh);$/;"	v
lob	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^            $lob = oci_new_descriptor($this->_dbh, OCI_D_LOB);$/;"	v
closeCursor	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function __destruct()$/;"	f
columnCount	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function columnCount()$/;"	f
errorCode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function errorCode()$/;"	f
error	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $error = oci_error($this->_sth);$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^            $error = $error['code'];$/;"	v
errorInfo	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function errorInfo()$/;"	f
execute	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function execute($params = null)$/;"	f
hasZeroIndex	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^            $hasZeroIndex = array_key_exists(0, $params);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^            foreach ($params as $key => $val) {$/;"	v
ret	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $ret = @oci_execute($this->_sth, $this->_conn->getExecuteMode());$/;"	v
getIterator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function getIterator()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $data = $this->fetchAll();$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function fetch($fetchMode = null, $orientation = null, $offset = null)$/;"	f
orientation	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function fetch($fetchMode = null, $orientation = null, $offset = null)$/;"	v
toLowercase	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $toLowercase = ($this->getAttribute(PDO::ATTR_CASE) == PDO::CASE_LOWER);$/;"	v
nullToString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $nullToString = ($this->getAttribute(PDO::ATTR_ORACLE_NULLS) == PDO::NULL_TO_STRING);$/;"	v
nullEmptyString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $nullEmptyString = ($this->getAttribute(PDO::ATTR_ORACLE_NULLS) == PDO::NULL_EMPTY_STRING);$/;"	v
fetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $fetchMode = $fetchMode ?: $this->_defaultFetchMode;$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_array($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $rs = @oci_fetch_assoc($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_row($this->_sth);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_row($this->_sth);$/;"	v
columnNumber	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $columnNumber = (int)$this->_fetchColumnNumber;$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                    $value = $rs[$columnNumber];$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_assoc($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                        $object = $this->_fetchIntoObject;$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                        $className = '\\stdClass';$/;"	v
arguments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                        $arguments = [];$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                        $className = $this->_fetchClassName;$/;"	v
arguments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                        $arguments = $this->_fetchArguments;$/;"	v
reflectionClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                        $reflectionClass = new \\ReflectionClass($className);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                        $object = $reflectionClass->newInstanceArgs($arguments);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                        $object = new $className();$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                foreach ($rs as $field => $value) {$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function fetchAll($fetchMode = null, $className = null, $arguments = null)$/;"	f
className	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function fetchAll($fetchMode = null, $className = null, $arguments = null)$/;"	v
fetchArgument	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $fetchArgument = $className;$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $this->_results = [];$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $stmt = new OCI8Statement($this->_dbh, reset($row), $this->_conn);$/;"	v
fetchColumn	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function fetchColumn($columnIndex = 0)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $row = oci_fetch_array($this->_sth, OCI_NUM | OCI_RETURN_NULLS | OCI_RETURN_LOBS);$/;"	v
rowCount	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function rowCount()$/;"	f
getAttribute	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function getAttribute($attribute)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^     * @param mixed|null $param Column number, class name or object.$/;"	c
setFetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function setFetchMode($fetchMode, $param = null, $arguments = [])$/;"	f
param	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^    public function setFetchMode($fetchMode, $param = null, $arguments = [])$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^        $this->_defaultFetchMode = $fetchMode;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                    $this->_fetchClassName = $param;$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = $arguments;$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = $param;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = (int)$param;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
OracleCompiler	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleCompiler.php	/^class OracleCompiler extends QueryCompiler$/;"	c
_selectParts	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleCompiler.php	/^    protected $_selectParts = [$/;"	v
_selectParts	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleCompiler.php	/^    protected $_selectParts = [$/;"	v
_buildInsertPart	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleCompiler.php	/^    protected function _buildInsertPart($parts, $query, $generator)$/;"	f
driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleCompiler.php	/^        $driver = $query->connection()->driver();$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleCompiler.php	/^        $table = $driver->quoteIfAutoQuote($parts[0]);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleCompiler.php	/^        $columns = $this->_stringifyExpressions($parts[1], $generator);$/;"	v
OracleConnection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^class OracleConnection extends Connection$/;"	c
_driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    protected $_driver;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    protected $_methodLogger = null;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    protected $_methodLogger = null;$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    protected $_schemaMethodsCollection;$/;"	v
build	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    public static function build(Connection $connection)$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^        $config = $connection->config();$/;"	v
methodSchemaCollection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    public function methodSchemaCollection(MethodsCollection $collection = null)$/;"	f
collection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    public function methodSchemaCollection(MethodsCollection $collection = null)$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^            return $this->_schemaMethodsCollection = $collection;$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^            return $this->_schemaMethodsCollection = new CachedMethodsCollection($this, $this->_config['cacheMetadata']);$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^        return $this->_schemaMethodsCollection = new MethodsCollection($this);$/;"	v
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    public function prepareMethod($sql, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    public function prepareMethod($sql, $options = [])$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^        $statement = $this->_driver->prepareMethod($sql, $options);$/;"	v
_logQueries	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^        $this->_logQueries = true;$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^            $statement = $this->_getMethodLogger($statement);$/;"	v
_getMethodLogger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    protected function _getMethodLogger(StatementInterface $statement)$/;"	f
log	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^        $log = new MethodLoggingStatement($statement, $this->driver());$/;"	v
methodLogger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    public function methodLogger(MethodLogger $instance = null)$/;"	f
instance	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    public function methodLogger(MethodLogger $instance = null)$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^                $this->_methodLogger = new MethodLogger;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^        $this->_methodLogger = $instance;$/;"	v
cacheMetadata	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^    public function cacheMetadata($cache)$/;"	f
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\OracleConnection.php	/^        $this->_schemaMethodsCollection = null;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^ * Extends the schema collection class to provide caching$/;"	c
CachedMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^class CachedMethodsCollection extends MethodsCollection$/;"	c
_cache	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^    protected $_cache = false;$/;"	v
_cache	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^    protected $_cache = false;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^    public function __construct(ConnectionInterface $connection, $cacheKey = true)$/;"	f
cacheKey	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^    public function __construct(ConnectionInterface $connection, $cacheKey = true)$/;"	v
describe	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	v
cacheConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^        $cacheConfig = $this->cacheMetadata();$/;"	v
cacheKey	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^        $cacheKey = $this->cacheKey($name);$/;"	v
cached	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^            $cached = Cache::read($cacheKey, $cacheConfig);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^        $method = parent::describe($name, $options);$/;"	v
cacheKey	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^    public function cacheKey($name)$/;"	f
cacheMetadata	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^    public function cacheMetadata($enable = null)$/;"	f
enable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^            $enable = '_cake_method_';$/;"	v
_cache	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\CachedMethodsCollection.php	/^        return $this->_cache = $enable;$/;"	v
Method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^class Method$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected $_method;$/;"	v
_isFunction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected $_isFunction;$/;"	v
_parameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected $_parameters = [];$/;"	v
_parameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected $_parameters = [];$/;"	v
_typeMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected $_typeMap = [];$/;"	v
_typeMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected $_typeMap = [];$/;"	v
_columnParameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected static $_columnParameters = [$/;"	v
_columnParameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected static $_columnParameters = [$/;"	v
_columnExtras	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected static $_columnExtras = [$/;"	v
_columnExtras	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    protected static $_columnExtras = [$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function __construct($method, array $parameters = [])$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function __construct($method, array $parameters = [])$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^        $this->_method = $method;$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^        foreach ($parameters as $parameter => $definition) {$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function name()$/;"	f
addParameter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function addParameter($name, $attrs)$/;"	f
attrs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^            $attrs = ['type' => $attrs];$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^        $valid = static::$_columnParameters;$/;"	v
_isFunction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^            $this->_isFunction = true;$/;"	v
attrs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^        $attrs = array_intersect_key($attrs, $valid);$/;"	v
parameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function parameters()$/;"	f
parameter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function parameter($name)$/;"	f
parameter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^        $parameter = $this->_parameters[$name];$/;"	v
parameterType	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function parameterType($name, $type = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function parameterType($name, $type = null)$/;"	v
parameterDirection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function parameterDirection($name, $direction = null)$/;"	f
direction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function parameterDirection($name, $direction = null)$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^        $result = null;$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^            $result = 'IN';$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function typeMap()$/;"	f
isFunction	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\Method.php	/^    public function isFunction()$/;"	f
MethodsCollection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^class MethodsCollection$/;"	c
_connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^    protected $_connection;$/;"	v
_dialect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^    protected $_dialect;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^    public function __construct(ConnectionInterface $connection)$/;"	f
_connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $this->_connection = $connection;$/;"	v
_dialect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $this->_dialect = $connection->driver()->schemaDialect();$/;"	v
listMethods	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^    public function listMethods()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $result = [];$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $statement = $this->_connection->execute($sql, $params);$/;"	v
getMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^    public function getMethod($name)$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $config = $this->_connection->config();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $result = [];$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $statement = $this->_connection->execute($sql, $params);$/;"	v
describe	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $config = $this->_connection->config();$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $methods = $this->getMethod($name);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^        $method = new Method($name);$/;"	v
_reflect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^    protected function _reflect($method, $name, $config)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\MethodsCollection.php	/^            $statement = $this->_connection->execute($sql, $params);$/;"	v
OracleSchema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^class OracleSchema extends BaseSchema$/;"	c
_constraints	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected $_constraints = [];$/;"	v
_constraints	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected $_constraints = [];$/;"	v
listMethodsSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function listMethodsSql($config)$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $table = 'user_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $params = [];$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $table = 'all_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $params = [':ownerParam' => strtoupper($config['schema'])];$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $ownerCondition = 'AND OWNER = :ownerParam';$/;"	v
objectNameField	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $objectNameField = $this->_transformFieldCase("OBJECT_NAME");$/;"	v
procedureName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $procedureName = $this->_transformFieldCase("PROCEDURE_NAME");$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $objectCondition = '';$/;"	v
objectName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $objectName = $config['objectName'];$/;"	v
items	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $items = explode('.', $objectName);$/;"	v
itemsCount	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $itemsCount = count($items);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $schema = $package = null;$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $object = $objectName;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $ownerCondition = '';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $params = [$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $table = 'user_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $useOwner = false;$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $objectCondition = " AND $objectNameField = :objectParam ";$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $table = 'all_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $useOwner = true;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $ownerCondition = " AND OWNER = :ownerParam AND $objectNameField = :packageParam ";$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $params = [$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $objectCondition = " AND $procedureName = :objectParam ";$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $ownerCondition = " AND (OWNER = :packageParam OR $objectNameField = :packageParam) ";$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $params = [$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $objectCondition = " AND $procedureName = :objectParam ";$/;"	v
procedureName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $procedureName = $this->_transformFieldCase("PROCEDURE_NAME");$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT $objectNameField as object, $procedureName as name, OBJECT_TYPE FROM $table$/;"	v
listTablesSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function listTablesSql($config)$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $table = 'user_tables';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $params = [];$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $table = 'all_tables';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $params = [':ownerParam' => strtoupper($config['schema'])];$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $tableName = $this->_transformFieldCase("TABLE_NAME");$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT $tableName as name FROM $table " . ($useOwner ? 'WHERE owner = :ownerParam' : '') . " ORDER BY name";$/;"	v
describeColumnSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function describeColumnSql($tableName, $config)$/;"	f
columnsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $columnsTable = 'user_tab_columns';$/;"	v
commentsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $commentsTable = 'user_col_comments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $params = [':tableParam' => $table];$/;"	v
columnsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $columnsTable = 'all_tab_columns';$/;"	v
commentsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $commentsTable = 'all_col_comments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $params = [$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
convertColumnDescription	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function convertColumnDescription(TableSchema $table, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $length = $row['char_length'];$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
describeParametersSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function describeParametersSql($objectName, $config)$/;"	f
items	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $items = explode('.', $objectName);$/;"	v
itemsCount	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $itemsCount = count($items);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $schema = $package = null;$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $object = $objectName;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $ownerCondition = '';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $params = [$/;"	v
argumentsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $argumentsTable = 'user_arguments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
argumentsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $argumentsTable = 'all_arguments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $ownerCondition = 'AND args.OWNER = :ownerParam AND args.PACKAGE_NAME = :packageParam ';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $params = [$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $ownerCondition = 'AND (args.OWNER = :packageParam OR args.PACKAGE_NAME = :packageParam) ';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $params = [$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
convertParametersDescription	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function convertParametersDescription(Method $method, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $length = $row['data_length'];$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $out = strpos($row['direction'], 'OUT') !== false ? true : false;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $name = $row['name'];$/;"	v
function	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $function = $out && $name === null ? true : false;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $name = ':result';$/;"	v
describeIndexSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function describeIndexSql($tableName, $config)$/;"	f
constraintsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $constraintsTable = 'user_constraints';$/;"	v
indexesTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $indexesTable = 'user_indexes';$/;"	v
indexColumnsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $indexColumnsTable = 'user_ind_columns';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
constraintsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $constraintsTable = 'all_constraints';$/;"	v
indexesTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $indexesTable = 'all_indexes';$/;"	v
indexColumnsTable	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $indexColumnsTable = 'all_ind_columns';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $params = [$/;"	v
convertIndexDescription	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function convertIndexDescription(TableSchema $table, $row)$/;"	f
tableIndex	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $tableIndex = array_change_key_case($row);$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $type = null;$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $columns = $length = [];$/;"	v
keyName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $keyName = $this->_transformValueCase($tableIndex['name']);$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $name = $this->_transformValueCase($tableIndex['column_name']);$/;"	v
keyName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $keyName = $type = TableSchema::CONSTRAINT_PRIMARY;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $type = TableSchema::CONSTRAINT_UNIQUE;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $type = TableSchema::INDEX_INDEX;$/;"	v
isIndex	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $isIndex = $type === TableSchema::INDEX_INDEX;$/;"	v
existing	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $existing = $table->getIndex($keyName);$/;"	v
existing	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $existing = $table->getConstraint($keyName);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $columns = array_merge($existing['columns'], $columns);$/;"	v
_convertColumnList	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected function _convertColumnList($columns)$/;"	f
columns	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $columns = explode(', ', $columns);$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $column = trim($column, '"');$/;"	v
describeForeignKeySql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function describeForeignKeySql($tableName, $config)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $sql = "SELECT$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = "$/;"	v
convertForeignKeyDescription	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function convertForeignKeyDescription(TableSchema $table, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $data = [$/;"	v
_convertOnClause	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected function _convertOnClause($clause)$/;"	f
columnSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function columnSql(TableSchema $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $data = $table->column($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $out = $this->_driver->quoteIfAutoQuote($name);$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $typeMap = [$/;"	v
isFixed	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $isFixed = !empty($data['fixed']);$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $type = ' VARCHAR2';$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $type = ' CHAR';$/;"	v
defaultValue	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $defaultValue = $data['default'];$/;"	v
defaultValue	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $defaultValue = (int)$defaultValue;$/;"	v
addConstraintSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function addConstraintSql(TableSchema $table)$/;"	f
sqlPattern	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sqlPattern = 'ALTER TABLE %s ADD %s;';$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
dropConstraintSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function dropConstraintSql(TableSchema $table)$/;"	f
sqlPattern	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sqlPattern = 'ALTER TABLE %s DROP CONSTRAINT %s;';$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
constraintName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^                $constraintName = $this->_driver->quoteIfAutoQuote($name);$/;"	v
indexSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function indexSql(TableSchema $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $data = $table->index($name);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $columns = array_map([$/;"	v
constraintSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function constraintSql(TableSchema $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $data = $table->constraint($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $out = 'CONSTRAINT ' . $this->_driver->quoteIfAutoQuote($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $out = 'PRIMARY KEY';$/;"	v
_keySql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected function _keySql($prefix, $data)$/;"	f
columns	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $columns = array_map([$/;"	v
createTableSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function createTableSql(TableSchema $table, $columns, $constraints, $indexes)$/;"	f
content	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $content = array_merge($columns, $constraints);$/;"	v
content	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $content = implode(",\\n", array_filter($content));$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
temporary	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $temporary = $table->temporary() ? ' TEMPORARY ' : ' ';$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $out = [];$/;"	v
columnData	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $columnData = $table->column($column);$/;"	v
pk	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $pk = $this->_getPrimaryKey($table);$/;"	v
fieldName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $fieldName = $pk['columns'][0];$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $out = Hash::merge($out, $this->getCreateAutoincrementSql($fieldName, $table->name()));$/;"	v
truncateTableSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function truncateTableSql(TableSchema $table)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $name = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sequenceName = $this->_getSequenceName($table->name());$/;"	v
dropTableSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function dropTableSql(TableSchema $table)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = sprintf('DROP TABLE %s CASCADE CONSTRAINTS', $this->_driver->quoteIfAutoQuote($table->name()));$/;"	v
tableSplit	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function tableSplit($name, $config)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $schema = null;$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $table = $name;$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $schema = strtoupper($config['schema']);$/;"	v
_getPrimaryKey	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected function _getPrimaryKey(TableSchema $table)$/;"	f
constraints	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $constraints = $table->constraints();$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
_isSingleKey	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected function _isSingleKey(TableSchema $table, $constraints)$/;"	f
constraint	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $constraint = $constraints[0];$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $columns = $constraint['columns'];$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $column = $table->column($columns[0]);$/;"	v
getCreateSequenceSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function getCreateSequenceSql($sequenceName)$/;"	f
getDropSequenceSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function getDropSequenceSql($sequenceName)$/;"	f
createSequenceIfNotExists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function createSequenceIfNotExists($name, $createCommand = null)$/;"	f
createCommand	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function createSequenceIfNotExists($name, $createCommand = null)$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
createCommand	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $createCommand = $this->getCreateSequenceSql($name);$/;"	v
wrapper	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $wrapper = <<<SQL$/;"	v
dropSequenceIfExists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function dropSequenceIfExists($name, $dropCommand = null)$/;"	f
dropCommand	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function dropSequenceIfExists($name, $dropCommand = null)$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
dropCommand	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^            $dropCommand = $this->getDropSequenceSql($name);$/;"	v
wrapper	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $wrapper = <<<SQL$/;"	v
getCreateAutoincrementSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function getCreateAutoincrementSql($name, $tableName, $start = 1)$/;"	f
start	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    public function getCreateAutoincrementSql($name, $tableName, $start = 1)$/;"	v
quotedTableName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $quotedTableName = $this->_driver->quoteIfAutoQuote($tableName);$/;"	v
quotedName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $quotedName = $this->_driver->quoteIfAutoQuote($name);$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
autoincrementIdentifierName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $autoincrementIdentifierName = 't_' . $tableName;$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $sequenceName = $this->_getSequenceName($tableName);$/;"	v
_getSequenceName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected function _getSequenceName($name)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $name = 'seq_' . $name;$/;"	v
_transformValueCase	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected function _transformValueCase($value)$/;"	f
case	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $case = $this->_driver->config('case');$/;"	v
_transformFieldCase	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^    protected function _transformFieldCase($field)$/;"	f
case	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Schema\OracleSchema.php	/^        $case = $this->_driver->config('case');$/;"	v
meant	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
MethodOracleStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^class MethodOracleStatement extends MethodStatementDecorator$/;"	c
queryString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public $queryString;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public $paramMap;$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function execute($params = null)$/;"	f
_statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^            $this->_statement = $this->_statement->getInnerStatement();$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^            $this->_statement = new OracleBufferedStatement($this->_statement, $this->_driver);$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function __get($property)$/;"	f
bind	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bind($params, $types)$/;"	f
annonymousParams	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^        $annonymousParams = is_int(key($params)) ? true : false;$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^        $offset = 0;$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^        foreach ($params as $index => $value) {$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^            $type = null;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^                $type = $types[$index];$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^        $column = isset($this->paramMap[$column]) ? $this->paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^        $type = $type == 'boolean' ? 'integer' : $type;$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function fetch($type = 'num')$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^        $result = $this->_statement->fetch($type);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^            foreach ($result as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
mainly	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^ * Decorator for \\PDOStatement class mainly used for converting human readable$/;"	c
MethodPDOStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^class MethodPDOStatement extends MethodStatementDecorator$/;"	c
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function __construct(Statement $statement = null, $driver = null)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function __construct(Statement $statement = null, $driver = null)$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^        $this->_statement = $statement;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^        $this->_driver = $driver;$/;"	v
val	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $val = 'a title';$/;"	v
boolVal	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $boolVal = true;$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $date = new \\DateTime();$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^            $type = 'string';$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^            $type = 'string';$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function fetch($type = 'num')$/;"	f
fetchAll	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
is	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodStatementDecorator.php	/^ * This class is but a decorator of an actual statement implementation, such as$/;"	c
MethodStatementDecorator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodStatementDecorator.php	/^class MethodStatementDecorator extends StatementDecorator implements StatementInterface, Countable, IteratorAggregate$/;"	c
val	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $val = 'a title';$/;"	v
boolVal	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $boolVal = true;$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $date = new \\DateTime();$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodStatementDecorator.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\MethodStatementDecorator.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
Oci8Statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\Oci8Statement.php	/^class Oci8Statement extends Statement$/;"	c
closeCursor	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\Oci8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\Oci8Statement.php	/^    public function __destruct()$/;"	f
meant	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleBufferedStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^class OracleBufferedStatement extends MethodStatementDecorator$/;"	c
_count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_count = 0;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_count = 0;$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_records = [];$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_records = [];$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_allFetched = true;$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_allFetched = true;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_counter = 0;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_counter = 0;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function __construct($statement = null, $driver = null)$/;"	f
driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function __construct($statement = null, $driver = null)$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function execute($params = null)$/;"	f
fetch	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function fetch($type = 'num')$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $row = ($this->_counter < $this->_count) ? $this->_records[$this->_counter++] : false;$/;"	v
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $row = ($row && $type === 'num') ? array_values($row) : $row;$/;"	v
_fetchType	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_fetchType = $type;$/;"	v
record	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $record = $this->_statement->fetch($type);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_allFetched = true;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_counter = $this->_count + 1;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^            foreach ($record as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
_records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_records = parent::fetchAll($type);$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_count = count($this->_records);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_allFetched = true;$/;"	v
rowCount	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function rowCount()$/;"	f
counter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $counter = $this->_counter;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_counter = $counter;$/;"	v
rewind	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function rewind()$/;"	f
_counter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_counter = 0;$/;"	v
_reset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected function _reset()$/;"	f
_count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_count = $this->_counter = 0;$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_records = [];$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_allFetched = false;$/;"	v
Oci8Statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Oci8Statement.php	/^class Oci8Statement extends Statement$/;"	c
closeCursor	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Oci8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\Oci8Statement.php	/^    public function __destruct()$/;"	f
meant	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleBufferedStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^class OracleBufferedStatement extends BufferedStatement$/;"	c
fetch	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^    public function fetch($type = self::FETCH_TYPE_NUM)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^            $row = false;$/;"	v
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^                $row = $this->buffer[$this->index];$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^            if ($row && $type === static::FETCH_TYPE_NUM) {$/;"	v
record	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^        $record = $this->statement->fetch($type);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^            $this->_allFetched = true;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^            foreach ($record as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleBufferedStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
meant	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^class OracleStatement extends StatementDecorator$/;"	c
queryString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public $queryString;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public $paramMap;$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public function execute($params = null)$/;"	f
_statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^            $this->_statement = $this->_statement->getInnerStatement();$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^            $this->_statement = new OracleBufferedStatement($this->_statement, $this->_driver);$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public function __get($property)$/;"	f
bind	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public function bind($params, $types)$/;"	f
annonymousParams	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^        $annonymousParams = is_int(key($params)) ? true : false;$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^        $offset = 0;$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^        foreach ($params as $index => $value) {$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^            $type = null;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^                $type = $types[$index];$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^        $column = isset($this->paramMap[$column]) ? $this->paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^        $type = $type == 'boolean' ? 'integer' : $type;$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public function fetch($type = 'num')$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^        $result = $this->_statement->fetch($type);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^            foreach ($result as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Statement\OracleStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
CursorType	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Type\CursorType.php	/^class CursorType extends Type$/;"	c
toDatabase	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Type\CursorType.php	/^    public function toDatabase($value, Driver $driver)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Type\CursorType.php	/^        if ($value === null || $value === '') {$/;"	v
marshal	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Type\CursorType.php	/^    public function marshal($value)$/;"	f
toStatement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Database\Type\CursorType.php	/^    public function toStatement($value, Driver $driver)$/;"	f
MissingMethodClassException	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Exception\MissingMethodClassException.php	/^class MissingMethodClassException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Exception\MissingMethodClassException.php	/^    protected $_messageTemplate = 'Method class %s could not be found.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Exception\MissingMethodClassException.php	/^    protected $_messageTemplate = 'Method class %s could not be found.';$/;"	v
MissingRequestException	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Exception\MissingRequestException.php	/^class MissingRequestException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Exception\MissingRequestException.php	/^    protected $_messageTemplate = 'Request class %s could not be found.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Exception\MissingRequestException.php	/^    protected $_messageTemplate = 'Request class %s could not be found.';$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorAwareTrait.php	/^    protected $_methodLocator;$/;"	v
methodLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorAwareTrait.php	/^    public function methodLocator(LocatorInterface $methodLocator = null)$/;"	f
methodLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorAwareTrait.php	/^    public function methodLocator(LocatorInterface $methodLocator = null)$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorAwareTrait.php	/^            $this->_methodLocator = $methodLocator;$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorAwareTrait.php	/^            $this->_methodLocator = MethodRegistry::locator();$/;"	v
LocatorInterface	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^interface LocatorInterface$/;"	i
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^    public function config($alias = null, $options = null);$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^    public function config($alias = null, $options = null);$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^    public function get($alias, array $options = []);$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^    public function get($alias, array $options = []);$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^    public function exists($alias);$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^    public function set($alias, Method $object);$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^    public function clear();$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\LocatorInterface.php	/^    public function remove($alias);$/;"	f
MethodLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^class MethodLocator implements LocatorInterface$/;"	c
_config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected $_config = [];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected $_config = [];$/;"	v
_instances	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected $_instances = [];$/;"	v
_instances	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected $_instances = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected $_fallbacked = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected $_fallbacked = [];$/;"	v
_options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected $_options = [];$/;"	v
_options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected $_options = [];$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function config($alias = null, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function config($alias = null, $options = null)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^            return $this->_config = $alias;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^     * class name based on the alias. If this class does not exist,$/;"	c
will	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^     * then the default `CakeDC\\OracleDriver\\ORM\\Method` class will be used. By setting the `className`$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^     * option you can define the specific class to use. This className can$/;"	c
reference	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^     * use a plugin short class reference.$/;"	c
get	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function get($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function get($alias, array $options = [])$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^        $options = ['alias' => $classAlias] + $options;$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^        $className = $this->_getClassName($alias, $options);$/;"	v
connectionName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^            $connectionName = $options['className']::defaultConnectionName();$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^     * Gets the method class name.$/;"	c
_getClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected function _getClassName($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected function _getClassName($alias, array $options = [])$/;"	v
_create	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    protected function _create(array $options)$/;"	f
exists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function exists($alias)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function set($alias, Method $object)$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function clear()$/;"	f
_instances	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^        $this->_instances = [];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^        $this->_config = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^        $this->_fallbacked = [];$/;"	v
genericInstances	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function genericInstances()$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Locator\MethodLocator.php	/^    public function remove($alias)$/;"	f
ResultSet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^class ResultSet implements ResultSetInterface$/;"	c
_statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_statement;$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_index = 0;$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_index = 0;$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_current;$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_results = [];$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_results = [];$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_hydrate = true;$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_hydrate = true;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^     * The fully namespaced name of the class to use for hydrating results$/;"	c
_entityClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_entityClass;$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_useBuffering = false;$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_useBuffering = false;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_count;$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_types = [];$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_types = [];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_schema = [];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_schema = [];$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected $_driver;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function __construct($repository, $statement, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function __construct($repository, $statement, $options = [])$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_statement = $statement;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_driver = $repository->connection()->driver();$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_hydrate = $options['hydrate'];$/;"	v
_entityClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_entityClass = $options['entityClass'];$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_useBuffering = $options['useBuffering'];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_schema = $options['schema'];$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_types = $this->_getTypes(array_keys($this->_schema));$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^             $count = $this->count();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^             $this->_results = new SplFixedArray($count);$/;"	v
current	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function current()$/;"	f
key	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function key()$/;"	f
next	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function next()$/;"	f
rewind	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function rewind()$/;"	f
msg	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^            $msg = 'You cannot rewind an un-buffered ResultSet';$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_index = 0;$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function valid()$/;"	f
valid	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^            $valid = $this->_index < $this->_count;$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^                $this->_current = $this->_results[$this->_index];$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_current = $this->_fetchResult();$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $valid = $this->_current !== false;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^     * Helper function to fetch the next result from the statement or$/;"	f
_fetchResult	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected function _fetchResult()$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $row = $this->_statement->fetch('assoc');$/;"	v
_groupResult	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected function _groupResult($row)$/;"	f
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $results = $this->_castValues($row);$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $options = [];$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^            $results = new $this->_entityClass($results, $options);$/;"	v
first	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function first()$/;"	f
serialize	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function serialize()$/;"	f
unserialize	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function unserialize($serialized)$/;"	f
_results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_results = unserialize($serialized);$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_useBuffering = true;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $this->_count = count($this->_results);$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function count()$/;"	f
_count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^            return $this->_count = $this->_statement->rowCount();$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        return $this->_count = count($this->_results);$/;"	v
_castValues	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected function _castValues($values)$/;"	f
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        foreach ($this->_types as $field => $type) {$/;"	v
_getTypes	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    protected function _getTypes($fields)$/;"	f
types	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $types = [];$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $schema = $this->_schema;$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $map = array_keys(Type::map() + ['string' => 1, 'text' => 1, 'boolean' => 1]);$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^        $typeMap = array_combine($/;"	v
typeName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^            $typeName = $schema[$col];$/;"	v
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method\ResultSet.php	/^    public function __debugInfo()$/;"	f
Method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^class Method {$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    protected $_method;$/;"	v
_connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    protected $_connection;$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    protected $_schema;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^     * The request class name for the method.$/;"	c
_requestClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    protected $_requestClass;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function __construct(array $config = [])$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function __construct(array $config = [])$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function method($method = null)$/;"	f
_method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $this->_method = $method;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $method = namespaceSplit(get_class($this));$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $method = substr(end($method), 0, -6);$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $this->_method = Inflector::underscore($method);$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function connection(OracleConnection $conn = null)$/;"	f
conn	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function connection(OracleConnection $conn = null)$/;"	v
_connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        return $this->_connection = $conn;$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function schema($schema = null)$/;"	f
_schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^                $this->_schema = $this->_initializeSchema($this->connection()$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $schema = new Schema($this->method(), $schema);$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        return $this->_schema = $schema;$/;"	v
in	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^     * Override this function in order to alter the schema used by this method.$/;"	f
is	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^     * This function is only called after fetching the schema out of the database.$/;"	f
_initializeSchema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^     * protected function _initializeSchema(\\CakeDC\\OracleDriver\\Database\\Schema\\Method $method) {$/;"	f
_initializeSchema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    protected function _initializeSchema(Schema $method)$/;"	f
used	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^     * Returns the class used to keep request parameters for this method$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^     * @param string|null $name the name of the class to use$/;"	c
cannot	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^     * @throws \\CakeDC\\OracleDriver\\ORM\\Exception\\MissingRequestException when the request class cannot be found$/;"	c
requestClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function requestClass($name = null)$/;"	f
default	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $default = '\\CakeDC\\OracleDriver\\ORM\\Request';$/;"	v
self	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $self = get_called_class();$/;"	v
parts	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $parts = explode('\\\\', $self);$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^                return $this->_requestClass = $default;$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $alias = Inflector::singularize(substr(array_pop($parts), 0, -6));$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $name = implode('\\\\', array_slice($parts, 0, -1)) . '\\Request\\\\' . $alias;$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^                return $this->_requestClass = $default;$/;"	v
class	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $class = App::className($name, 'Model\/Request');$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $this->_requestClass = $class;$/;"	v
initialize	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^     *  public function initialize(array $config)$/;"	f
initialize	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function initialize(array $config)$/;"	f
newRequest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function newRequest($data = null)$/;"	f
class	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $class = $this->requestClass();$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $request = new $class([], [$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function execute(RequestInterface $request)$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $query = $this->_generateSql();$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $statement = $this->connection()$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $result = $statement->execute();$/;"	v
_generateSql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function _generateSql()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $query = '';$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^            $query = ':result := ';$/;"	v
parameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $parameters = $this->schema()$/;"	v
names	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $names = [];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $query = 'begin ' . $query . ' end;';$/;"	v
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public function __debugInfo()$/;"	f
conn	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^        $conn = $this->connection();$/;"	v
defaultConnectionName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Method.php	/^    public static function defaultConnectionName()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^ * $method = MethodRegistry::get('Procedure', $config);$/;"	v
MethodRegistry	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^class MethodRegistry$/;"	c
_locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    protected static $_locator;$/;"	v
_defaultLocatorClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    protected static $_defaultLocatorClass = 'CakeDC\\OracleDriver\\ORM\\Locator\\MethodLocator';$/;"	v
_defaultLocatorClass	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    protected static $_defaultLocatorClass = 'CakeDC\\OracleDriver\\ORM\\Locator\\MethodLocator';$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function config($alias = null, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function config($alias = null, $options = null)$/;"	v
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function locator(LocatorInterface $locator = null)$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function locator(LocatorInterface $locator = null)$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function get($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function get($alias, array $options = [])$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function exists($alias)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function set($alias, Method $object)$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function remove($alias)$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function clear()$/;"	f
__callStatic	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\MethodRegistry.php	/^    public static function __callStatic($name, $arguments)$/;"	f
Request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Request.php	/^class Request implements RequestInterface$/;"	c
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Request.php	/^    public function __construct(array $properties = [], array $options = [])$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Request.php	/^    public function __construct(array $properties = [], array $options = [])$/;"	v
_className	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Request.php	/^        $this->_className = get_class($this);$/;"	v
_repository	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Request.php	/^            $this->_repository = $options['repository'];$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\Request.php	/^            $this->_driver = $this->_repository->connection()$/;"	v
representing	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestInterface.php	/^ * Describes the methods that any class representing a data storage should$/;"	c
RequestInterface	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestInterface.php	/^interface RequestInterface extends ArrayAccess, JsonSerializable$/;"	i
set	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestInterface.php	/^    public function set($property, $value = null, array $options = []);$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestInterface.php	/^    public function set($property, $value = null, array $options = []);$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestInterface.php	/^    public function &get($property);$/;"	f
toArray	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestInterface.php	/^    public function toArray();$/;"	f
isNew	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestInterface.php	/^    public function isNew($new = null);$/;"	f
_accessors	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected static $_accessors = [];$/;"	v
_accessors	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected static $_accessors = [];$/;"	v
_properties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_properties = [];$/;"	v
_properties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_properties = [];$/;"	v
_castedProperties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_castedProperties = [];$/;"	v
_castedProperties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_castedProperties = [];$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^     * Holds the name of the class for the instance object$/;"	c
_className	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_className;$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^     * Holds the repository of the method class for the instance object$/;"	c
_repository	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_repository;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_driver;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_new = true;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected $_new = true;$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function &__get($property)$/;"	f
__set	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function __set($property, $value)$/;"	f
get	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function &get($property)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $value = null;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $method = '_get' . Inflector::camelize($property);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^            $value =& $this->_properties[$property];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^            $result = $this->{$method}($value);$/;"	v
_methodExists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    protected function _methodExists($method)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function set($property, $value = null, array $options = [])$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function set($property, $value = null, array $options = [])$/;"	v
isString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $isString = is_string($property);$/;"	v
property	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^            $property = [$property => $value];$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^            $options = (array)$value;$/;"	v
p	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        foreach ($property as $p => $value) {$/;"	v
setter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^            $setter = '_set' . Inflector::camelize($p);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^                $value = $this->{$setter}($value);$/;"	v
__isset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function __isset($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^     * $request = new Request(['id' => 1, 'name' => null]);$/;"	v
has	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function has($property)$/;"	f
__unset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function __unset($property)$/;"	f
unsetProperty	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function unsetProperty($property)$/;"	f
property	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $property = (array)$property;$/;"	v
jsonSerialize	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function jsonSerialize()$/;"	f
toArray	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function toArray()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $result = [];$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^            $value = $this->get($property);$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^                foreach ($value as $k => $object) {$/;"	v
visibleProperties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function visibleProperties()$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $properties = array_keys($this->_properties);$/;"	v
offsetExists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function offsetExists($offset)$/;"	f
offsetGet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function &offsetGet($offset)$/;"	f
offsetSet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function offsetSet($offset, $value)$/;"	f
offsetUnset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function offsetUnset($offset)$/;"	f
attachTo	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function attachTo($statement)$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $properties = $this->_properties;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        foreach ($properties as $name => $value) {$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^            $parameter = $this->_repository->schema()$/;"	v
paramName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^                $paramName = $name;$/;"	v
paramName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^                $paramName = ':' . $name;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^                $type = $parameter['type'];$/;"	v
fetchCursor	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function fetchCursor($name, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function fetchCursor($name, $options = [])$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $parameter = $this->_repository->schema()->parameter($name);$/;"	v
property	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $property = $this->get($name);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $statement = $this->_repository->connection()->prepareMethod($property);$/;"	v
isNew	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function isNew($new = null)$/;"	f
new	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $new = (bool)$new;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        return $this->_new = $new;$/;"	v
applySchema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function applySchema(MethodSchema $schema)$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^        $parameters = $schema->parameters();$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^            $parameter = $schema->parameter($name);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^     * Helper method to get function result. Should be used only in case function was called.$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function result()$/;"	f
__toString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function __toString()$/;"	f
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\ORM\RequestTrait.php	/^    public function __debugInfo()$/;"	f
MethodLogPanel	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^class MethodLogPanel extends DebugPanel$/;"	c
plugin	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^    public $plugin = 'OracleDriver';$/;"	v
plugin	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^    public $plugin = 'OracleDriver';$/;"	v
_loggers	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^    protected $_loggers = [];$/;"	v
_loggers	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^    protected $_loggers = [];$/;"	v
initialize	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^    public function initialize()$/;"	f
configs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^        $configs = ConnectionManager::configured();$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^            $connection = ConnectionManager::get($name);$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^            $logger = null;$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^                $logger = $connection->methodLogger();$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^            $logger = new DebugMethodLog($logger, $name);$/;"	v
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^    public function data()$/;"	f
summary	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^    public function summary()$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\Panel\MethodLogPanel.php	/^        $count = $time = 0;$/;"	v
MethodTestFixture	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^class MethodTestFixture$/;"	c
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $connection = 'test';$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $connection = 'test';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $name = null;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $name = null;$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $create = [];$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $create = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $drop = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $drop = [];$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function __construct()$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^            $connection = $this->connection;$/;"	v
message	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^                $message = sprintf($/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function connection()$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function name()$/;"	f
init	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function init()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^            $method = $class;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^                $method = $matches[1];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^            $this->name = Inflector::tableize($method);$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function create(ConnectionInterface $db)$/;"	f
queries	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^            $queries = [];$/;"	v
queries	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^                $queries = (array)$this->create;$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^                $stmt = $db->prepare($query);$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^            $msg = sprintf($/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function drop(ConnectionInterface $db)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^            $sql = [];$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^                $sql = (array)$this->drop;$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^                $stmt = $db->prepare($query);$/;"	v
insert	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function insert(ConnectionInterface $db)$/;"	f
createConstraints	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function createConstraints(ConnectionInterface $db)$/;"	f
dropConstraints	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function dropConstraints(ConnectionInterface $db)$/;"	f
truncate	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function truncate(ConnectionInterface $db)$/;"	f
OracleFixtureInjector	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^class OracleFixtureInjector implements PHPUnit_Framework_TestListener$/;"	c
_fixtureManager	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    protected $_fixtureManager;$/;"	v
_first	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    protected $_first;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function __construct(OracleFixtureManager $manager)$/;"	f
_fixtureManager	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^        $this->_fixtureManager = $manager;$/;"	v
startTestSuite	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function startTestSuite(PHPUnit_Framework_TestSuite $suite)$/;"	f
_first	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^            $this->_first = $suite;$/;"	v
endTestSuite	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function endTestSuite(PHPUnit_Framework_TestSuite $suite)$/;"	f
addError	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addError(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
addWarning	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addWarning(PHPUnit_Framework_Test $test, PHPUnit_Framework_Warning $e, $time)$/;"	f
addFailure	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time)$/;"	f
addIncompleteTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
addSkippedTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
startTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function startTest(PHPUnit_Framework_Test $test)$/;"	f
endTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function endTest(PHPUnit_Framework_Test $test, $time)$/;"	f
addRiskyTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addRiskyTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^ * A factory class to manage the life cycle of test fixtures$/;"	c
OracleFixtureManager	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^class OracleFixtureManager$/;"	c
_initialized	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_initialized = false;$/;"	v
_initialized	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_initialized = false;$/;"	v
_loaded	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_loaded = [];$/;"	v
_loaded	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_loaded = [];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Holds the fixture classes that where instantiated indexed by class name$/;"	c
_fixtureMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_fixtureMap = [];$/;"	v
_fixtureMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_fixtureMap = [];$/;"	v
_insertionMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_insertionMap = [];$/;"	v
_insertionMap	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_insertionMap = [];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * List of TestCase class name that have been processed$/;"	c
_processed	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_processed = [];$/;"	v
_processed	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_processed = [];$/;"	v
_debug	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_debug = false;$/;"	v
_debug	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_debug = false;$/;"	v
setDebug	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function setDebug($debug)$/;"	f
_debug	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $this->_debug = $debug;$/;"	v
fixturize	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function fixturize($test)$/;"	f
loaded	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loaded()$/;"	f
_aliasConnections	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _aliasConnections()$/;"	f
connections	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $connections = ConnectionManager::configured();$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $map = [];$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            if ($connection === 'test' || $connection === 'default') {$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        foreach ($map as $alias => $connection) {$/;"	v
with	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Initializes this class with a DataSource object to use as default for all fixtures$/;"	c
_initDb	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _initDb()$/;"	f
_initialized	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $this->_initialized = true;$/;"	v
_loadCodeFixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _loadCodeFixtures($test)$/;"	f
path	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $path = explode('\/', $pathName);$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $name = array_pop($path);$/;"	v
additionalPath	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $additionalPath = implode('\\\\', $path);$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = 'Cake';$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = Configure::read('App.namespace');$/;"	v
path	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $path = implode('\\\\', explode('\/', $plugin));$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = Inflector::camelize(str_replace('\\\\', '\\ ', $path));$/;"	v
additionalPath	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $additionalPath = null;$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = '';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $name = $fixture;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $name = Inflector::camelize($name);$/;"	v
nameSegments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $nameSegments = [$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $className = implode('\\\\', array_filter($nameSegments));$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $msg = sprintf($/;"	v
_setupMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _setupMethod($fixture, $db, array $sources, $drop = true)$/;"	f
drop	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _setupMethod($fixture, $db, array $sources, $drop = true)$/;"	v
configName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $configName = $db->configName();$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $name = $fixture->name();$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $exists = in_array($name, $sources);$/;"	v
load	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function load($test)$/;"	f
fixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $fixtures = $test->codeFixtures;$/;"	v
createMethods	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $createMethods = function ($db, $fixtures) use ($test) {$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $methods = $db->methodSchemaCollection()->listMethods();$/;"	v
configName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $configName = $db->configName();$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $msg = sprintf('Unable to insert fixtures for "%s" test case. %s', get_class($test), $e->getMessage());$/;"	v
on	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Run a function on each connection and collection of fixtures.$/;"	f
_runOperation	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _runOperation($fixtures, $operation)$/;"	f
dbs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $dbs = $this->_fixtureConnections($fixtures);$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        foreach ($dbs as $connection => $fixtures) {$/;"	v
db	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $db = ConnectionManager::get($connection, false);$/;"	v
logQueries	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $logQueries = $db->logQueries();$/;"	v
_fixtureConnections	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _fixtureConnections($fixtures)$/;"	f
dbs	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $dbs = [];$/;"	v
fixture	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $fixture = $this->_loaded[$f];$/;"	v
unload	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function unload($test)$/;"	f
loadSingleMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loadSingleMethod($name, $db = null, $drop = true)$/;"	f
db	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loadSingleMethod($name, $db = null, $drop = true)$/;"	v
fixture	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $fixture = $this->_fixtureMap[$name];$/;"	v
db	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $db = ConnectionManager::get($fixture->connection());$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $methods = $db->methodSchemaCollection()->listMethods();$/;"	v
shutDown	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function shutDown()$/;"	f
shutdown	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $shutdown = function ($db, $fixtures) {$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $connection = $db->configName();$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^                    $index = array_search($fixture, $this->_insertionMap[$connection]);$/;"	v
isFixtureSetup	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function isFixtureSetup($connection, $fixture)$/;"	f
TestCase	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\TestCase.php	/^abstract class TestCase extends CakeTestCase$/;"	c
responsible	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\TestCase.php	/^     * The class responsible for managing the creation, loading and removing of fixtures$/;"	c
methodFixtureManager	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\TestCase.php	/^    public $methodFixtureManager = null;$/;"	v
methodFixtureManager	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\TestCase.php	/^    public $methodFixtureManager = null;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\TestCase.php	/^     * Each parameter is a code module name that corresponds to a fixture, i.e. package, procedure or function name.$/;"	f
loadMethodFixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\TestCase.php	/^    public function loadMethodFixtures()$/;"	f
args	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\src\TestSuite\TestCase.php	/^        $args = func_get_args();$/;"	v
findRoot	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\bootstrap.php	/^$findRoot = function () {$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\bootstrap.php	/^    $root = dirname(__DIR__);$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\bootstrap.php	/^    $root = dirname(dirname(__DIR__));$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\bootstrap.php	/^    $root = dirname(dirname(dirname(__DIR__)));$/;"	v
DS	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\bootstrap.php	/^    define('DS', DIRECTORY_SEPARATOR);$/;"	d
_define	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\bootstrap.php	/^function _define($name, $value)$/;"	f
TMP	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\bootstrap.php	/^$TMP = new \\Cake\\Filesystem\\Folder(TMP);$/;"	v
cache	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\bootstrap.php	/^$cache = [$/;"	v
CalcCodeFixture	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^class CalcCodeFixture extends MethodTestFixture$/;"	c
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^\/\/    public $type = 'package';$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^\/\/    public $type = 'package';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^    public $name = 'CALC';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^    public $name = 'CALC';$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^    public $create = [];$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^    public $create = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^    public $drop = 'drop package calc';$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^    public $drop = 'drop package calc';$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^    public function __construct()$/;"	f
sum	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^                		function sum(a number, b number) return number;$/;"	f
sum	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\CodeFixture\CalcCodeFixture.php	/^                	function sum(a number, b number) return number is$/;"	f
ArticlesFixture	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesFixture.php	/^class ArticlesFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesFixture.php	/^    public $records = [$/;"	v
ArticlesTagsFixture	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesTagsFixture.php	/^class ArticlesTagsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesTagsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesTagsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesTagsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\ArticlesTagsFixture.php	/^    public $records = [$/;"	v
AuthorsFixture	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\AuthorsFixture.php	/^class AuthorsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\AuthorsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\AuthorsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\AuthorsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\AuthorsFixture.php	/^    public $records = [$/;"	v
TagsFixture	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\TagsFixture.php	/^class TagsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\TagsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\TagsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\TagsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\Fixture\TagsFixture.php	/^    public $records = [$/;"	v
QueryTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^class QueryTest extends CakeQueryTest$/;"	c
testSelectAliasedTables	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectAliasedTables()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['text' => FunctionsBuilder::toChar(new IdentifierExpression('a.body')), 'a.author_id'])$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['name' => 'b.name'])->from(['b' => 'authors'])$/;"	v
testSelectOrderBy	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrderBy()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['id' => 'asc'])->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc'])->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc'], true)->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc', 'published' => 'asc'], true)$/;"	v
driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $driver = $query->connection()->driver();$/;"	v
idField	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $idField = $driver->quoteIfAutoQuote('id');$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expression = $query->newExpr(["MOD(($idField + :offset), 2)"]);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
testSelectGroup	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectGroup()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['total' => 'count(author_id)', 'author_id'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1], ['total' => '1', 'author_id' => 3]];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'name' => 'larry'], ['total' => 2, 'name' => 'mariano']];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
testSelectWhereUsingExpressionInField	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectWhereUsingExpressionInField()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
subquery	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $subquery = clone $query;$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^                $field = clone $exp;$/;"	v
testSQLFunctions	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSQLFunctions()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select($/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 6]];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select([$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $date = $result->fetchAll('assoc');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
d	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $d = $result->fetchAll('assoc')[0]['d'];$/;"	v
date1	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $date1 = date('U');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
created	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $created = new IdentifierExpression('created');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
testSelectOrderByString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrderByString()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
testSelectHaving	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'author_id' => 3]];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->having(['count(author_id)' => 2], ['count(author_id)' => 'integer'], true)$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1]];$/;"	v
testSelectOrHaving	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'author_id' => 3]];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1], ['total' => 1, 'author_id' => 3]];$/;"	v
testSelectAndHaving	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectAndHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1]];$/;"	v
testBind	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testBind()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
driver	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $driver = $query->connection()->driver();$/;"	v
createdField	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $createdField = $driver->quoteIfAutoQuote('created');$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $results = $query->select(['id', 'comment'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [['id' => '4', 'comment' => 'Fourth Comment for First Article']];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $results = $query->select(['id', 'comment'])$/;"	v
testInsertExpressionValues	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testInsertExpressionValues()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = (new Query($this->connection))->select('*')$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
subquery	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $subquery = new Query($this->connection);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = (new Query($this->connection))->select('*')$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
testSelectDistinctON	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testSelectDistinctON()$/;"	f
testUnion	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testUnion()$/;"	f
union	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))->select(['id', 'title'])->from(['a' => 'articles']);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['id', FunctionsBuilder::toChar(new IdentifierExpression('comment'))])$/;"	v
rows	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $rows = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $rows2 = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows3	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $rows3 = $result->fetchAll();$/;"	v
testUnionOrderBy	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testUnionOrderBy()$/;"	f
testUnionAll	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^    public function testUnionAll()$/;"	f
union	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))->select(['id', 'title'])->from(['a' => 'articles']);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['id', FunctionsBuilder::toChar(new IdentifierExpression('comment'))])$/;"	v
rows	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $rows = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\QueryTest.php	/^        $rows2 = $result->fetchAll();$/;"	v
CollectionTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^class CollectionTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $codeFixtures = [$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $codeFixtures = [$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^     * Oracle connection class instance.$/;"	c
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $connection;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function setUp()$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^        $this->connection = ConnectionManager::get('test');$/;"	v
tearDown	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function tearDown()$/;"	f
testDescribeIncorrectMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function testDescribeIncorrectMethod()$/;"	f
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = new MethodsCollection($this->connection);$/;"	v
testDescribeCache	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function testDescribeCache()$/;"	f
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = $this->connection->methodSchemaCollection();$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^        $method = $this->connection->methodSchemaCollection()->describe('CALC.SUM');$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = $this->connection->methodSchemaCollection();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^        $result = $schema->describe('CALC.SUM');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\CollectionTest.php	/^        $result = Cache::read('test_CALC_SUM', '_cake_method_');$/;"	v
MethodTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\MethodTest.php	/^class MethodTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\MethodTest.php	/^    public $codeFixtures = [$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\MethodTest.php	/^    public $codeFixtures = [$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\MethodTest.php	/^    public function setUp()$/;"	f
tearDown	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\MethodTest.php	/^    public function tearDown()$/;"	f
testConstructWithParameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\MethodTest.php	/^    public function testConstructWithParameters()$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\MethodTest.php	/^        $parameters = [$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\MethodTest.php	/^        $method = new Method('CALC.SUM', $parameters);$/;"	v
TableTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\TableTest.php	/^class TableTest extends CakeTableTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\TableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\Database\Schema\TableTest.php	/^    public $fixtures = [$/;"	v
DatabaseSuite	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^class DatabaseSuite extends TestSuite$/;"	c
suite	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^    public static function suite()$/;"	f
suite	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^        $suite = new self('Database related tests');$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^    \/\/ public function count()$/;"	f
run	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^    public function run($/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^        PHPUnit_Framework_TestResult $result = null,$/;"	v
filter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^        $filter = false,$/;"	v
groups	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^        array $groups = [],$/;"	v
excludeGroups	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^        array $excludeGroups = [],$/;"	v
processIsolation	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^        $processIsolation = false$/;"	v
permutations	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^        $permutations = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\DatabaseSuite.php	/^            $result = parent::run($result, $filter, $groups, $excludeGroups, $processIsolation);$/;"	v
AssociationCollectionTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\AssociationCollectionTest.php	/^class AssociationCollectionTest extends CakeAssociationCollectionTest$/;"	c
AssociationProxyTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\AssociationProxyTest.php	/^class AssociationProxyTest extends CakeAssociationProxyTest$/;"	c
testUpdateAllFromAssociation	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\AssociationProxyTest.php	/^    public function testUpdateAllFromAssociation()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\AssociationProxyTest.php	/^        $articles = TableRegistry::get('articles');$/;"	v
comments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\AssociationProxyTest.php	/^        $comments = TableRegistry::get('comments');$/;"	v
changed	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\AssociationProxyTest.php	/^        $changed = $comments$/;"	v
AssociationTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\AssociationTest.php	/^class AssociationTest extends CakeAssociationTest$/;"	c
TreeBehaviorTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Behavior\TreeBehaviorTest.php	/^class TreeBehaviorTest extends CakeTreeBehaviorTest$/;"	c
BehaviorRegistryTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\BehaviorRegistryTest.php	/^class BehaviorRegistryTest extends CakeBehaviorRegistryTest$/;"	c
BehaviorTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\BehaviorTest.php	/^class BehaviorTest extends CakeBehaviorTest$/;"	c
BindingKeyTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\BindingKeyTest.php	/^class BindingKeyTest extends CakeBindingKeyTest$/;"	c
EagerLoaderTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\EagerLoaderTest.php	/^class EagerLoaderTest extends CakeEagerLoaderTest$/;"	c
EntityTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\EntityTest.php	/^class EntityTest extends CakeEntityTest$/;"	c
LocatorAwareTraitTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^class LocatorAwareTraitTest extends TestCase$/;"	c
setUp	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^    public function setUp()$/;"	f
subject	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $this->subject = $this->getObjectForTrait('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorAwareTrait');$/;"	v
testMethodLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^    public function testMethodLocator()$/;"	f
methodLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $methodLocator = $this->subject->methodLocator();$/;"	v
newLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $newLocator = $this->getMock('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorInterface');$/;"	v
subjectLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $subjectLocator = $this->subject->methodLocator($newLocator);$/;"	v
is	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^ * Used to test correct class is instantiated when using $this->_locator->get();$/;"	c
MyUsersMethod	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^class MyUsersMethod extends Method$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_method = 'users';$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_method = 'users';$/;"	v
MethodLocatorTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^class MethodLocatorTest extends TestCase$/;"	c
_locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_locator;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function setUp()$/;"	f
_locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $this->_locator = new MethodLocator;$/;"	v
testConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfig()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $data = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config('Tests', $data);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config();$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $expected = ['Tests' => $data];$/;"	v
testConfigPlugin	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigPlugin()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $data = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config('TestPlugin.TestPluginComments', $data);$/;"	v
testConfigOnDefinedInstance	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigOnDefinedInstance()$/;"	f
users	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $users = $this->_locator->get('Users');$/;"	v
testExists	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testExists()$/;"	f
testExistsPlugin	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testExistsPlugin()$/;"	f
testGet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGet()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Articles', [$/;"	v
result2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result2 = $this->_locator->get('Articles');$/;"	v
testGetFallbacks	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetFallbacks()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Droids');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('R2D2', ['className' => 'Droids']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('C3P0', ['className' => 'Droids', 'method' => 'rebels']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Funky.Chipmunks');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Awesome', ['className' => 'Funky.Monkies']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Stuff', ['className' => 'CakeDC\\OracleDriver\\ORM\\Method']);$/;"	v
testGetWithConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithConfig()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Articles');$/;"	v
testGetWithConfigClassName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithConfigClassName()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('MyUsersMethodAlias');$/;"	v
testGetExistingWithConfigData	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetExistingWithConfigData()$/;"	f
users	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $users = $this->_locator->get('Users');$/;"	v
testGetWithSameOption	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithSameOption()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Users', ['className' => 'CakeDC\\OracleDriver\\Test\\TestCase\\ORM\\Locator\\MyUsersMethod']);$/;"	v
result2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result2 = $this->_locator->get('Users', ['className' => 'CakeDC\\OracleDriver\\Test\\TestCase\\ORM\\Locator\\MyUsersMethod']);$/;"	v
testGetWithConventions	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetWithConventions()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('articles');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Articles');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('authors');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Authors');$/;"	v
testGetPlugin	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPlugin()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('TestPlugin.TestPluginComments');$/;"	v
second	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $second = $this->_locator->get('TestPlugin.TestPluginComments');$/;"	v
testGetMultiplePlugins	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetMultiplePlugins()$/;"	f
app	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
plugin1	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin1 = $this->_locator->get('TestPlugin.Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin1	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin1 = $this->_locator->get('TestPlugin.Comments');$/;"	v
app	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
testGetPluginWithClassNameOption	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPluginWithClassNameOption()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Comments', [$/;"	v
class	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $class = 'TestPlugin\\Model\\Method\\TestPluginCommentsMethod';$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $this->assertFalse($this->_locator->exists('TestPlugin.TestPluginComments'), 'Full class alias should not exist');$/;"	c
second	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $second = $this->_locator->get('Comments');$/;"	v
testGetPluginWithFullNamespaceName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPluginWithFullNamespaceName()$/;"	f
class	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $class = 'TestPlugin\\Model\\Method\\TestPluginCommentsMethod';$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Comments', [$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $this->assertFalse($this->_locator->exists('TestPlugin.TestPluginComments'), 'Full class alias should not exist');$/;"	c
testConfigAndBuild	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigAndBuild()$/;"	f
map	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $map = $this->_locator->config();$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $connection = ConnectionManager::get('test', false);$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $options = ['connection' => $connection];$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $map = $this->_locator->config();$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $schema = ['id' => ['type' => 'rubbish']];$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $method = $this->_locator->get('users', ['method' => 'users']);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $method = $this->_locator->get('users', ['className' => __NAMESPACE__ . '\\MyUsersMethod']);$/;"	v
testSet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testSet()$/;"	f
mock	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $mock = $this->getMock('CakeDC\\OracleDriver\\ORM\\Method');$/;"	v
testSetPlugin	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testSetPlugin()$/;"	f
mock	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $mock = $this->getMock('TestPlugin\\Model\\Method\\CommentsMethod');$/;"	v
testGenericInstances	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGenericInstances()$/;"	f
foos	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $foos = $this->_locator->get('Foos');$/;"	v
bars	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $bars = $this->_locator->get('Bars');$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $expected = ['Foos' => $foos, 'Bars' => $bars];$/;"	v
testRemove	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testRemove()$/;"	f
first	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $first = $this->_locator->get('Comments');$/;"	v
second	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $second = $this->_locator->get('Comments');$/;"	v
testRemovePlugin	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testRemovePlugin()$/;"	f
app	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
plugin	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
app2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app2 = $this->_locator->get('Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin3	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin3 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
MarshallerTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MarshallerTest.php	/^class MarshallerTest extends CakeMarshallerTest$/;"	c
MethodRegistryTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^class MethodRegistryTest extends TestCase$/;"	c
_originalLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    protected $_originalLocator;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function setUp()$/;"	f
_originalLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $this->_originalLocator = MethodRegistry::locator();$/;"	v
tearDown	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function tearDown()$/;"	f
_setMockLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    protected function _setMockLocator()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->getMock('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorInterface');$/;"	v
testLocator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testLocator()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testLocatorDefault	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testLocatorDefault()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = MethodRegistry::locator();$/;"	v
testConfig	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testConfig()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testGet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testGet()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testSet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testSet()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $method = $this->getMock('CakeDC\\OracleDriver\\ORM\\Method');$/;"	v
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testRemove	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testRemove()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testClear	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testClear()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
MethodTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^class MethodTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^    public $codeFixtures = ['plugin.CakeDC\/OracleDriver.Calc'];$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^    public $codeFixtures = ['plugin.CakeDC\/OracleDriver.Calc'];$/;"	v
testMethodCall	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^    public function testMethodCall()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^        $method = MethodRegistry::get('CalcSum', ['method' => 'CALC.SUM']);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^        $request = $method->newRequest(['A' => 5, 'B' => 10]);$/;"	v
testOutParameterMethodCall	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^    public function testOutParameterMethodCall()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^        $method = MethodRegistry::get('CalcTwice', ['method' => 'CALC.TWICE']);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\MethodTest.php	/^        $request = $method->newRequest(['A' => 5]);$/;"	v
QueryRegressionTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^class QueryRegressionTest extends CakeQueryRegressionTest$/;"	c
testComplexOrderWithUnion	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testComplexOrderWithUnion()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Comments');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find();$/;"	v
inner	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $inner = $table->find()$/;"	v
inner2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $inner2 = $table->find()$/;"	v
order	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $order = $query->func()$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $results = $query->toArray();$/;"	v
testSaveWithExpressionProperty	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testSaveWithExpressionProperty()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $articles = TableRegistry::get('Articles');$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $article = $articles->newEntity();$/;"	v
testDeepBelongsToManySubqueryStrategy	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testDeepBelongsToManySubqueryStrategy()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Authors');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $result = $table->find()$/;"	v
testDeepBelongsToManySubqueryStrategy2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testDeepBelongsToManySubqueryStrategy2()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Authors');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $result = $table->Articles$/;"	v
testSubqueryInSelectExpression	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testSubqueryInSelectExpression()$/;"	f
testCountWithUnionQuery	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testCountWithUnionQuery()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find()$/;"	v
query2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query2 = $table->find()$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $fields = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find()$/;"	v
query2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query2 = $table->find()$/;"	v
QueryTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^class QueryTest extends CakeQueryTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public $fixtures = [$/;"	v
testAutoFields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFields()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find('all')$/;"	v
testAutoFieldsWithAssociations	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFieldsWithAssociations()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find()$/;"	v
testAutoFieldsWithContainQueryBuilder	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFieldsWithContainQueryBuilder()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find()$/;"	v
testCountWithGroup	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testCountWithGroup()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $query = $table->find('all');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $result = $query->count();$/;"	v
testNotMatchingNested	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testNotMatchingNested()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('authors');$/;"	v
articles	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $articles = $table->hasMany('articles');$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $expected = [$/;"	v
testLeftJoinWith	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testLeftJoinWith()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('authors');$/;"	v
orderFn	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $orderFn = function ($q) {$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $expected = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $fields = ['total_articles', 'id', 'name'];$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $results = $table$/;"	v
testCustomBindings	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testCustomBindings()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        $query = $table->find()->where(['id >' => 1]);$/;"	v
e	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^            $e = new QueryExpression();$/;"	v
testNotMatchingDeep	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testNotMatchingDeep()$/;"	f
testLeftJoinWithSelect	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^    public function testLeftJoinWithSelect()$/;"	f
for	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\QueryTest.php	/^        \/\/ @todo implement Expression class for analytic functions$/;"	c
RequestTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^class RequestTest extends TestCase$/;"	c
testSetOneParamNoSetters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testSetOneParamNoSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testSetMultiplePropertiesNoSetters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testSetMultiplePropertiesNoSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testSetOneParamWithSetter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testSetOneParamWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\\\ORM\\Request', ['_setName']);$/;"	v
testMultipleWithSetter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testMultipleWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName', '_setStuff']);$/;"	v
testBypassSetters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testBypassSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName', '_setStuff']);$/;"	v
testConstructor	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testConstructor()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
testGetNoGetters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testGetNoGetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'foo' => 'bar']);$/;"	v
testGetCustomGetters	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCustomGetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testGetCustomGettersAfterSet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCustomGettersAfterSet()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testGetCacheClearedByUnset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCacheClearedByUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testMagicSet	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicSet()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testMagicSetWithSetter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicSetWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName']);$/;"	v
testMagicGetWithGetter	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicGetWithGetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testIndirectModification	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testIndirectModification()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testHas	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testHas()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getThings']);$/;"	v
testUnset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'bar']);$/;"	v
testUnsetMultiple	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testUnsetMultiple()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'bar', 'thing' => 2]);$/;"	v
testMagicIsset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicIsset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
testMagicUnset	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['unsetProperty']);$/;"	v
testIssetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testIssetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
testGetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testGetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['get']);$/;"	v
testSetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testSetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['set']);$/;"	v
testUnsetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testUnsetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['unsetProperty']);$/;"	v
testMethodCache	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testMethodCache()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setFoo', '_getBar']);$/;"	v
request2	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request2 = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setBar']);$/;"	v
testSetGetLongProperyNames	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testSetGetLongProperyNames()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getVeryLongProperty', '_setVeryLongProperty']);$/;"	v
testJsonSerialize	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testJsonSerialize()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $data = ['name' => 'James', 'age' => 20, 'phones' => ['123', '457']];$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testIsNew	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testIsNew()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $data = [$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testConstructorWithMarkNew	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testConstructorWithMarkNew()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
testToArray	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testToArray()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $data = ['name' => 'James', 'age' => 20, 'phones' => ['123', '457']];$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testToArrayWithAccessor	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testToArrayWithAccessor()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $expected = ['name' => 'Jose', 'email' => 'mark@example.com'];$/;"	v
testToString	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testToString()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['foo' => 1, 'bar' => 2]);$/;"	v
testDebugInfo	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testDebugInfo()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['foo' => 'bar'], ['markClean' => true]);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $result = $request->__debugInfo();$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $expected = [$/;"	v
testRepository	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^\/\/    public function testRepository()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^\/\/        $request = new Request;$/;"	v
emptyNamesProvider	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function emptyNamesProvider()$/;"	f
testEmptyProperties	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testEmptyProperties($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request();$/;"	v
testSetEmptyPropertyName	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^    public function testSetEmptyPropertyName($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request();$/;"	v
ResultSetTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\ResultSetTest.php	/^class ResultSetTest extends CakeResultSetTest$/;"	c
RulesCheckerIntegrationTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\RulesCheckerIntegrationTest.php	/^class RulesCheckerIntegrationTest extends CakeRulesCheckerIntegrationTest$/;"	c
TableRegistryTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableRegistryTest.php	/^class TableRegistryTest extends CakeTableRegistryTest$/;"	c
TableTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^class TableTest extends CakeTableTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^    public $fixtures = [$/;"	v
testFindListNoHydration	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^    public function testFindListNoHydration()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $table = new Table([$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $query = $table$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['fields' => ['id', 'username']])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['groupField' => 'odd'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
testFindListHydrated	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^    public function testFindListHydrated()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $table = new Table([$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['fields' => ['id', 'username']])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['groupField' => 'odd'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
testSaveReplaceSaveStrategyAdding	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^    public function testSaveReplaceSaveStrategyAdding()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $articles = new Table([$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->newEntity([$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->save($article, ['associated' => ['Comments']]);$/;"	v
commentId	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $commentId = $article->comments[0]->id;$/;"	v
sizeComments	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $sizeComments = count($article->comments);$/;"	v
articleId	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $articleId = $article->id;$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->save($article, ['associated' => ['Comments']]);$/;"	v
TableUuidTest	.\vendor\cakedc\cakephp-oracle-driver-master.modif.ok\tests\TestCase\ORM\TableUuidTest.php	/^class TableUuidTest extends CakeTableUuidTest$/;"	c
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    protected $_configInitialized = false;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    protected $_configInitialized = false;$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    public function config($key = null, $value = null, $merge = true)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    public function config($key = null, $value = null, $merge = true)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            $this->_config = $this->_defaultConfig;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            $this->_configInitialized = true;$/;"	v
_configWrite	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    protected function _configWrite($key, $value, $merge = false)$/;"	f
merge	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    protected function _configWrite($key, $value, $merge = false)$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        if (is_string($key) && $value === null) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            $update = is_array($key) ? $key : [$key => $value];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^                $this->_config = array_merge($this->_config, Hash::expand($update));$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^                $this->_config = Hash::merge($this->_config, Hash::expand($update));$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            foreach ($key as $k => $val) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        $update =& $this->_config;$/;"	v
stack	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        $stack = explode('.', $key);$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            $update =& $update[$k];$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        $update = $value;$/;"	v
_configDelete	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    protected function _configDelete($key)$/;"	f
update	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        $update =& $this->_config;$/;"	v
stack	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        $stack = explode('.', $key);$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        $length = count($stack);$/;"	v
i	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        foreach ($stack as $i => $k) {$/;"	v
update	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            $update =& $update[$k];$/;"	v
_configRead	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    protected function _configRead($key)$/;"	f
return	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^        $return = $this->_config;$/;"	v
return	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^                $return = null;$/;"	v
return	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            $return = $return[$k];$/;"	v
configShallow	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    public function configShallow($key, $value = null)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^    public function configShallow($key, $value = null)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            $this->_config = $this->_defaultConfig;$/;"	v
_configInitialized	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Config\ConfigTrait.php	/^            $this->_configInitialized = true;$/;"	v
_instance	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Core\Singleton.php	/^    protected static $_instance;$/;"	v
getInstance	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Core\Singleton.php	/^    final public static function getInstance()$/;"	f
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Core\Singleton.php	/^    final private function __construct()$/;"	f
init	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Core\Singleton.php	/^    protected function init()$/;"	f
__wakeup	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Core\Singleton.php	/^    final private function __wakeup()$/;"	f
__clone	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Core\Singleton.php	/^    final private function __clone()$/;"	f
_startQuote	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_startQuote = '"';$/;"	v
_startQuote	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_startQuote = '"';$/;"	v
_endQuote	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_endQuote = '"';$/;"	v
_endQuote	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_endQuote = '"';$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^     * The schema dialect class for this driver$/;"	c
_schemaDialect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected $_schemaDialect;$/;"	v
_transformDistinct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _transformDistinct($query)$/;"	f
_selectQueryTranslator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _selectQueryTranslator($query)$/;"	f
limit	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $limit = $query->clause('limit');$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $offset = $query->clause('offset');$/;"	v
_pagingSubquery	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _pagingSubquery($original, $limit, $offset)$/;"	f
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $field = 'cake_paging_out."_cake_page_rownum_"';$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $query = clone $original;$/;"	v
outer	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $outer = new Query($query->connection());$/;"	v
outer2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $outer2 = new Query($query->connection());$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            $value = (int)$offset + (int)$limit;$/;"	v
_expressionTranslators	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _expressionTranslators()$/;"	f
namespace	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $namespace = 'Cake\\Database\\Expression';$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^     * @param \\Cake\\Database\\Expression\\FunctionExpression $expression The function expression$/;"	f
_transformFunctionExpression	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _transformFunctionExpression(FunctionExpression $expression)$/;"	f
p	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                            $p = ['value' => [$p => 'literal'], 'type' => null];$/;"	v
time	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                $time = new FunctionExpression('LOCALTIMESTAMP', [' 0 ' => 'literal']);$/;"	v
time	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                $time = new FunctionExpression('LOCALTIMESTAMP', [' 0 ' => 'literal']);$/;"	v
keys	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                            $keys = explode(' ', $p);$/;"	v
unit	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                            $unit = array_pop($keys);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                            $value = implode(' ', $keys);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                            $value = str_replace("'", '', $value);$/;"	v
p	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                            $p = sprintf("'%s' %s", $value, $unit);$/;"	v
schemaDialect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    public function schemaDialect()$/;"	f
_schemaDialect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            $this->_schemaDialect = new OracleSchema($this);$/;"	v
disableForeignKeySQL	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    public function disableForeignKeySQL()$/;"	f
enableForeignKeySQL	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    public function enableForeignKeySQL()$/;"	f
_processAllForeignKeys	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _processAllForeignKeys($type)$/;"	f
startQuote	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $startQuote = $this->_startQuote;$/;"	v
endQuote	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $endQuote = $this->_endQuote;$/;"	v
schemaName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            $schemaName = strtoupper($this->_config['schema']);$/;"	v
fromWhere	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            $fromWhere = "from all_constraints$/;"	v
fromWhere	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            $fromWhere = "from user_constraints$/;"	v
newCompiler	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    public function newCompiler()$/;"	f
_insertQueryTranslator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^    protected function _insertQueryTranslator($query)$/;"	f
v	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $v = $query->clause('values');$/;"	v
newQuery	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $newQuery = $query->connection()->newQuery();$/;"	v
cols	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $cols = $v->columns();$/;"	v
placeholder	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $placeholder = 0;$/;"	v
replaceQuery	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        $replaceQuery = false;$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^        foreach ($v->values() as $k => $val) {$/;"	v
fillLength	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            $fillLength = count($cols) - count($val);$/;"	v
val	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                $val = array_merge($val, array_fill(0, $fillLength, null));$/;"	v
col	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            foreach ($val as $col => $attr) {$/;"	v
select	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            $select = array_combine($cols, $val);$/;"	v
replaceQuery	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^                $replaceQuery = true;$/;"	v
q	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Dialect\OracleDialectTrait.php	/^            $q = $newQuery->connection()->newQuery();$/;"	v
OracleBase	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^abstract class OracleBase extends Driver$/;"	c
_baseConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    protected $_baseConfig = [$/;"	v
_baseConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    protected $_baseConfig = [$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    protected $_defaultConfig = [];$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    protected $_defaultConfig = [];$/;"	v
connect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function connect()$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $config = $this->_config;$/;"	v
dsn	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $dsn = $this->getDSN();$/;"	v
getDSN	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function getDSN()$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $config = $this->_config;$/;"	v
service	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^            $service = 'SERVICE_NAME=' . $config['database'];$/;"	v
serviceName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $serviceName = $config['sid'];$/;"	v
service	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $service = 'SID=' . $serviceName;$/;"	v
pooled	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^            $pooled = '';$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^            $instance = '';$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $instance = '(INSTANCE_NAME = ' . $config['instance'] . ')';$/;"	v
pooled	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $pooled = '(SERVER=POOLED)';$/;"	v
supportsDynamicConstraints	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function supportsDynamicConstraints()$/;"	f
prepare	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function prepare($query)$/;"	f
isObject	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $isObject = ($query instanceof \\Cake\\ORM\\Query) || ($query instanceof \\Cake\\Database\\Query);$/;"	v
queryStringRaw	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $queryStringRaw = $isObject ? $query->sql() : $query;$/;"	v
queryString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $queryString = $this->_fromDualIfy($queryStringRaw);$/;"	v
innerStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $innerStatement = $this->_connection->prepare($queryString);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $statement = $this->_wrapStatement($innerStatement);$/;"	v
disableBuffer	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $disableBuffer = false;$/;"	v
normalizedQuery	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $normalizedQuery = substr(strtolower(trim($queryString, " \\t\\n\\r\\0\\x0B(")), 0, 6);$/;"	v
disableBuffer	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^            $disableBuffer = true;$/;"	v
_fromDualIfy	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    protected function _fromDualIfy($queryString)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $statement = strtolower(trim($queryString));$/;"	v
convertPositionalToNamedPlaceholders	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function convertPositionalToNamedPlaceholders($query)$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $count = 0;$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $inLiteral = false;$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $stmtLen = strlen($query);$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $paramMap = [];$/;"	v
len	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $len = strlen($paramMap[$count]);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $query = substr_replace($query, ":param$count", $i, 1);$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $stmtLen = strlen($query);$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $inLiteral = !$inLiteral;$/;"	v
lastInsertId	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function lastInsertId($table = null, $column = null)$/;"	f
column	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function lastInsertId($table = null, $column = null)$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $sequenceName = 'seq_' . strtolower($table);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $statement = $this->_connection->query("SELECT {$sequenceName}.CURRVAL FROM DUAL");$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $result = $statement->fetch();$/;"	v
isConnected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function isConnected()$/;"	f
connected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^            $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $connected = $this->_connection->query('SELECT 1 FROM DUAL');$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^                $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^        $this->connected = !empty($connected);$/;"	v
quoteIfAutoQuote	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function quoteIfAutoQuote($identifier)$/;"	f
_wrapStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    protected function _wrapStatement($statement)$/;"	f
isOci	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function isOci()$/;"	f
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function prepareMethod($queryString, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleBase.php	/^    public function prepareMethod($queryString, $options = [])$/;"	v
OracleOCI	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^class OracleOCI extends OracleBase$/;"	c
_connect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^    protected function _connect($dsn, array $config)$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^        $connection = new OCI8Connection($dsn, $config['username'], $config['password'], $config['flags']);$/;"	v
enabled	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^    public function enabled()$/;"	f
isConnected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^    public function isConnected()$/;"	f
connected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^            $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^                $connected = $this->_connection->query('SELECT 1 FROM DUAL');$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^                $connected = false;$/;"	v
connected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^        $this->connected = !empty($connected);$/;"	v
lastInsertId	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^    public function lastInsertId($table = null, $column = null)$/;"	f
column	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^    public function lastInsertId($table = null, $column = null)$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^        $sequenceName = 'seq_' . strtolower($table);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^        $statement = $this->_connection->query("SELECT {$sequenceName}.CURRVAL FROM DUAL");$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^        $result = $statement->fetch(PDO::FETCH_NUM);$/;"	v
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^    public function prepareMethod($queryString, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^    public function prepareMethod($queryString, $options = [])$/;"	v
innerStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^        $innerStatement = $this->_connection->prepare($queryString);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^        $statement = new MethodPDOStatement($innerStatement, $this);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^            $statement = new MethodOracleStatement($statement, $this);$/;"	v
isOci	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OracleOCI.php	/^    public function isOci() {$/;"	f
OraclePDO	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OraclePDO.php	/^class OraclePDO extends OracleBase {$/;"	c
_connect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OraclePDO.php	/^    protected function _connect($database, array $config) {$/;"	f
database	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OraclePDO.php	/^        $database = 'oci:dbname=' . $database;$/;"	v
enabled	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Driver\OraclePDO.php	/^    public function enabled() {$/;"	f
UnallowedDataTypeException	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Exception\UnallowedDataTypeException.php	/^class UnallowedDataTypeException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Exception\UnallowedDataTypeException.php	/^    protected $_messageTemplate = 'Column type %s not supported.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Exception\UnallowedDataTypeException.php	/^    protected $_messageTemplate = 'Column type %s not supported.';$/;"	v
represents	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^ * This class represents a function call string in a SQL statement. Calls can be$/;"	c
call	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^ * This class represents a function call string in a SQL statement. Calls can be$/;"	f
and	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^ * constructed by passing the name of the function and a list of params.$/;"	f
SimpleExpression	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^class SimpleExpression implements ExpressionInterface$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^     * The name of the function to be constructed when generating the SQL string$/;"	f
_name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^    protected $_name;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^     * Constructor. Takes a name for the function to be invoked.$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^     * @param string $name the name of the function to be constructed$/;"	f
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^    public function __construct($name, $returnType = 'string')$/;"	f
returnType	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^    public function __construct($name, $returnType = 'string')$/;"	v
_name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^        $this->_name = $name;$/;"	v
_returnType	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^        $this->_returnType = $returnType;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^     * Sets the name of the SQL function to be invoke in this expression,$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^    public function name($name = null)$/;"	f
_name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^        $this->_name = $name;$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^    public function sql(ValueBinder $generator)$/;"	f
traverse	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Expression\SimpleExpression.php	/^    public function traverse(callable $callable) {$/;"	f
FunctionsBuilder	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^class FunctionsBuilder$/;"	c
_defaultDateFormat	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    protected $_defaultDateFormat = 'YYYY-MM-DD HH24:MI:SS';$/;"	v
_defaultDateFormat	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    protected $_defaultDateFormat = 'YYYY-MM-DD HH24:MI:SS';$/;"	v
calls	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * arbitrary function calls in the final SQL string.$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param string $name the name of the SQL function to constructed$/;"	f
param	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param array $types list of types for each function param$/;"	f
_build	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    protected function _build($name, $params = [], $types = [])$/;"	f
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    protected function _build($name, $params = [], $types = [])$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * Helper function to build a function expression argument that$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument.$/;"	f
_literalArgument	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    protected function _literalArgument($expression)$/;"	f
expression	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^            $expression = [$expression => 'literal'];$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^            $expression = [$expression];$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
toChar	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    public static function toChar($expression, $types = [])$/;"	f
types	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    public static function toChar($expression, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param mixed $format the function argument$/;"	f
toCharWithFormat	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    public static function toCharWithFormat($expression, $format = null, $types = [])$/;"	f
format	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    public static function toCharWithFormat($expression, $format = null, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
format	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^            $format = $builder->_defaultDateFormat;$/;"	v
argument	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param mixed $expression the function argument$/;"	f
argument	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param mixed $format the function argument$/;"	f
toDate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    public static function toDate($expression, $format = null, $types = [])$/;"	f
format	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    public static function toDate($expression, $format = null, $types = [])$/;"	v
builder	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^        $args = [];$/;"	v
format	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^            $format = $builder->_defaultDateFormat;$/;"	v
calls	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * Magic method dispatcher to create custom SQL function calls$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * @param string $name the SQL function name to construct$/;"	f
and	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^     * parameters for the SQL function and second one a list of types to bind to those$/;"	f
__call	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^    public function __call($name, $args)$/;"	f
builder	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\FunctionsBuilder.php	/^        $builder = self::getInstance();$/;"	v
DebugMethodLog	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^class DebugMethodLog extends MethodLogger$/;"	c
_queries	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    protected $_queries = [];$/;"	v
_queries	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    protected $_queries = [];$/;"	v
_logger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    protected $_logger;$/;"	v
_connectionName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    protected $_connectionName;$/;"	v
_totalTime	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    protected $_totalTime = 0;$/;"	v
_totalTime	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    protected $_totalTime = 0;$/;"	v
_totalRows	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    protected $_totalRows = 0;$/;"	v
_totalRows	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    protected $_totalRows = 0;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    public function __construct($logger, $name)$/;"	f
_logger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^        $this->_logger = $logger;$/;"	v
_connectionName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^        $this->_connectionName = $name;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    public function name()$/;"	f
queries	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    public function queries()$/;"	f
totalTime	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    public function totalTime()$/;"	f
totalRows	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    public function totalRows()$/;"	f
log	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\DebugMethodLog.php	/^    public function log(LoggedMethod $method)$/;"	f
LoggedMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^class LoggedMethod$/;"	c
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $method = '';$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $method = '';$/;"	v
took	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $took = 0;$/;"	v
took	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $took = 0;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $params = [];$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $params = [];$/;"	v
numRows	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $numRows = 0;$/;"	v
numRows	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $numRows = 0;$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public $error;$/;"	v
__toString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\LoggedMethod.php	/^    public function __toString()$/;"	f
MethodLogger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^class MethodLogger$/;"	c
log	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^    public function log(LoggedMethod $method)$/;"	f
for	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^     * Wrapper function for the logger object, useful for unit testing$/;"	f
_log	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^    protected function _log($method)$/;"	f
used	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^     * Helper function used to replace method placeholders by the real$/;"	f
_interpolate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^    protected function _interpolate($method)$/;"	f
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^        $params = array_map(function ($p) {$/;"	v
keys	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^        $keys = [];$/;"	v
limit	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^        $limit = is_int(key($params)) ? 1 : -1;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^        foreach ($params as $key => $param) {$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLogger.php	/^            if ($param == 'NULL' || $key == ':result') {$/;"	v
MethodLoggingStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^class MethodLoggingStatement extends MethodStatementDecorator$/;"	c
_logger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    protected $_logger;$/;"	v
_compiledParams	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    protected $_compiledParams = [];$/;"	v
_compiledParams	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    protected $_compiledParams = [];$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for the execute function to calculate time spent$/;"	f
execute	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    public function execute($params = null)$/;"	f
t	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^        $t = microtime(true);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^        $method = new LoggedMethod();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^            $result = parent::execute($params);$/;"	v
_log	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    protected function _log($method, $params, $startTime)$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for bindValue function to gather each parameter to be later used$/;"	f
bindValue	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^            $type = 'string';$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^            $value = $this->cast($value, $type)[0];$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    public function logger($instance = null)$/;"	f
_logger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^        return $this->_logger = $instance;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^     * Wrapper for bindValue function to gather each parameter to be later used$/;"	f
bindParam	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^            $type = 'string';$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Log\MethodLoggingStatement.php	/^            $value = $this->cast($value, $type)[0];$/;"	v
OCI8Connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^class OCI8Connection extends PDO$/;"	c
_inTransaction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    protected $_inTransaction = false;$/;"	v
_inTransaction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    protected $_inTransaction = false;$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    protected $dbh;$/;"	v
executeMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    protected $executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
executeMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    protected $executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    protected $_defaultConfig = [];$/;"	v
_defaultConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    protected $_defaultConfig = [];$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function __construct($dsn, $username, $password, $options)$/;"	f
persistent	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $persistent = !empty($options['persistent']);$/;"	v
charset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $charset = !empty($options['charset']) ? $options['charset'] : null;$/;"	v
sessionMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $sessionMode = !empty($options['sessionMode']) ? $options['sessionMode'] : null;$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^            $this->dbh = @oci_pconnect($username, $password, $dsn, $charset, $sessionMode);$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^            $this->dbh = @oci_connect($username, $password, $dsn, $charset, $sessionMode);$/;"	v
dbh	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function dbh()$/;"	f
getServerVersion	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function getServerVersion()$/;"	f
versionData	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $versionData = oci_server_version($this->dbh);$/;"	v
prepare	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function prepare($statement, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function prepare($statement, $options = null)$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function query($statement, $mode = PDO::ATTR_DEFAULT_FETCH_MODE, $arg3 = null)$/;"	f
mode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function query($statement, $mode = PDO::ATTR_DEFAULT_FETCH_MODE, $arg3 = null)$/;"	v
args	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $args = func_get_args();$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $sql = $args[0];$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $stmt = $this->prepare($sql);$/;"	v
quote	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function quote($string, $type = \\PDO::PARAM_STR)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function quote($string, $type = \\PDO::PARAM_STR)$/;"	v
string	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $string = str_replace("'", "''", $string);$/;"	v
exec	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function exec($statement)$/;"	f
stmt	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $stmt = $this->prepare($statement);$/;"	v
getExecuteMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function getExecuteMode()$/;"	f
isTransaction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function isTransaction()$/;"	f
inTransaction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function inTransaction()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        return $this->executeMode == OCI_NO_AUTO_COMMIT;$/;"	v
beginTransaction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function beginTransaction()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_NO_AUTO_COMMIT;$/;"	v
commit	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function commit()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
rollBack	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function rollBack()$/;"	f
executeMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $this->executeMode = OCI_COMMIT_ON_SUCCESS;$/;"	v
errorCode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function errorCode()$/;"	f
error	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^        $error = oci_error($this->dbh);$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^            $error = $error['code'];$/;"	v
errorInfo	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Connection.php	/^    public function errorInfo()$/;"	f
OCI8Exception	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Exception.php	/^class OCI8Exception extends Exception$/;"	c
fromErrorInfo	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Exception.php	/^    public static function fromErrorInfo($error)$/;"	f
OCI8Statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^class OCI8Statement extends \\PDOStatement implements \\IteratorAggregate$/;"	c
_returnLobs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_returnLobs = true;$/;"	v
_returnLobs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_returnLobs = true;$/;"	v
_dbh	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_dbh;$/;"	v
_sth	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_sth;$/;"	v
_conn	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_conn;$/;"	v
_PARAM	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected static $_PARAM = ':param';$/;"	v
_PARAM	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected static $_PARAM = ':param';$/;"	v
fetchModeMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected static $fetchModeMap = [$/;"	v
fetchModeMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected static $fetchModeMap = [$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchColumnNumber = 0;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchColumnNumber = 0;$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_defaultFetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_defaultFetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_paramMap = [];$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_paramMap = [];$/;"	v
_values	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_values = [];$/;"	v
_values	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_values = [];$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchMode = PDO::ATTR_DEFAULT_FETCH_MODE;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchClassName = '\\stdClass';$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchClassName = '\\stdClass';$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchIntoObject = null;$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchIntoObject = null;$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchArguments = array();$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_fetchArguments = array();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_results = array();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    protected $_results = array();$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function __construct($dbh, $statement, OCI8Connection $conn)$/;"	f
_sth	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^            $this->_sth = $statement;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^            $paramMap = [];$/;"	v
_sth	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^            $this->_sth = oci_parse($dbh, $statement);$/;"	v
_dbh	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $this->_dbh = $dbh;$/;"	v
_paramMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $this->_paramMap = $paramMap;$/;"	v
_conn	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $this->_conn = $conn;$/;"	v
convertPositionalToNamedPlaceholders	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    static public function convertPositionalToNamedPlaceholders($statement)$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $count = 1;$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $inLiteral = false;$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $stmtLen = strlen($statement);$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $paramMap = [];$/;"	v
len	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $len = strlen($paramMap[$count]);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $statement = substr_replace($statement, ":param$count", $i, 1);$/;"	v
stmtLen	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $stmtLen = strlen($statement);$/;"	v
inLiteral	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $inLiteral = !$inLiteral;$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function bindValue($param, $value, $type = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function bindValue($param, $value, $type = null)$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function bindParam($column, &$variable, $type = null, $length = null, $driverData = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function bindParam($column, &$variable, $type = null, $length = null, $driverData = null)$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $column = isset($this->_paramMap[$column]) ? $this->_paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        \/\/ where $type = ['ociType' => "REAL_OCI_TYPE", 'plsql_type' => 'VARRAY', 'php_type' => 'string']$/;"	v
like	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        \/\/ this way we could choose correct type and correct binding function like oci_bind_array_by_name$/;"	f
variable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^            $variable = oci_new_cursor($this->_dbh);$/;"	v
lob	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^            $lob = oci_new_descriptor($this->_dbh, OCI_D_LOB);$/;"	v
closeCursor	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function __destruct()$/;"	f
columnCount	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function columnCount()$/;"	f
errorCode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function errorCode()$/;"	f
error	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $error = oci_error($this->_sth);$/;"	v
error	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^            $error = $error['code'];$/;"	v
errorInfo	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function errorInfo()$/;"	f
execute	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function execute($params = null)$/;"	f
hasZeroIndex	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^            $hasZeroIndex = array_key_exists(0, $params);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^            foreach ($params as $key => $val) {$/;"	v
ret	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $ret = @oci_execute($this->_sth, $this->_conn->getExecuteMode());$/;"	v
getIterator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function getIterator()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $data = $this->fetchAll();$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function fetch($fetchMode = null, $orientation = null, $offset = null)$/;"	f
orientation	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function fetch($fetchMode = null, $orientation = null, $offset = null)$/;"	v
toLowercase	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $toLowercase = ($this->getAttribute(PDO::ATTR_CASE) == PDO::CASE_LOWER);$/;"	v
nullToString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $nullToString = ($this->getAttribute(PDO::ATTR_ORACLE_NULLS) == PDO::NULL_TO_STRING);$/;"	v
nullEmptyString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $nullEmptyString = ($this->getAttribute(PDO::ATTR_ORACLE_NULLS) == PDO::NULL_EMPTY_STRING);$/;"	v
fetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $fetchMode = $fetchMode ?: $this->_defaultFetchMode;$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_array($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_assoc($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_row($this->_sth);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                    foreach ($rs as $field => $value) {$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_row($this->_sth);$/;"	v
columnNumber	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $columnNumber = (int)$this->_fetchColumnNumber;$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                    $value = $rs[$columnNumber];$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $rs = oci_fetch_assoc($this->_sth);$/;"	v
rs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                    $rs = array_change_key_case($rs);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                        $object = $this->_fetchIntoObject;$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                        $className = '\\stdClass';$/;"	v
arguments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                        $arguments = [];$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                        $className = $this->_fetchClassName;$/;"	v
arguments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                        $arguments = $this->_fetchArguments;$/;"	v
reflectionClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                        $reflectionClass = new \\ReflectionClass($className);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                        $object = $reflectionClass->newInstanceArgs($arguments);$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                        $object = new $className();$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                foreach ($rs as $field => $value) {$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function fetchAll($fetchMode = null, $className = null, $arguments = null)$/;"	f
className	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function fetchAll($fetchMode = null, $className = null, $arguments = null)$/;"	v
fetchArgument	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $fetchArgument = $className;$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $this->_results = [];$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $stmt = new OCI8Statement($this->_dbh, reset($row), $this->_conn);$/;"	v
fetchColumn	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function fetchColumn($columnIndex = 0)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $row = oci_fetch_array($this->_sth, OCI_NUM | OCI_RETURN_NULLS | OCI_RETURN_LOBS);$/;"	v
rowCount	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function rowCount()$/;"	f
getAttribute	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function getAttribute($attribute)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^     * @param mixed|null $param Column number, class name or object.$/;"	c
setFetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function setFetchMode($fetchMode, $param = null, $arguments = [])$/;"	f
param	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^    public function setFetchMode($fetchMode, $param = null, $arguments = [])$/;"	v
_defaultFetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^        $this->_defaultFetchMode = $fetchMode;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                    $this->_fetchClassName = $param;$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = $arguments;$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = 0;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = $param;$/;"	v
_fetchMode	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchMode = $fetchMode;$/;"	v
_fetchColumnNumber	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchColumnNumber = (int)$param;$/;"	v
_fetchClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchClassName = '\\stdClass';$/;"	v
_fetchArguments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchArguments = [];$/;"	v
_fetchIntoObject	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OCI8\OCI8Statement.php	/^                $this->_fetchIntoObject = null;$/;"	v
OracleCompiler	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleCompiler.php	/^class OracleCompiler extends QueryCompiler$/;"	c
_selectParts	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleCompiler.php	/^    protected $_selectParts = [$/;"	v
_selectParts	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleCompiler.php	/^    protected $_selectParts = [$/;"	v
_buildInsertPart	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleCompiler.php	/^    protected function _buildInsertPart($parts, $query, $generator)$/;"	f
driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleCompiler.php	/^        $driver = $query->connection()->driver();$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleCompiler.php	/^        $table = $driver->quoteIfAutoQuote($parts[0]);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleCompiler.php	/^        $columns = $this->_stringifyExpressions($parts[1], $generator);$/;"	v
OracleConnection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^class OracleConnection extends Connection$/;"	c
_driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    protected $_driver;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    protected $_methodLogger = null;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    protected $_methodLogger = null;$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    protected $_schemaMethodsCollection;$/;"	v
build	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    public static function build(Connection $connection)$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^        $config = $connection->config();$/;"	v
methodSchemaCollection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    public function methodSchemaCollection(MethodsCollection $collection = null)$/;"	f
collection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    public function methodSchemaCollection(MethodsCollection $collection = null)$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^            return $this->_schemaMethodsCollection = $collection;$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^            return $this->_schemaMethodsCollection = new CachedMethodsCollection($this, $this->_config['cacheMetadata']);$/;"	v
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^        return $this->_schemaMethodsCollection = new MethodsCollection($this);$/;"	v
prepareMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    public function prepareMethod($sql, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    public function prepareMethod($sql, $options = [])$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^        $statement = $this->_driver->prepareMethod($sql, $options);$/;"	v
_logQueries	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^        $this->_logQueries = true;$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^            $statement = $this->_getMethodLogger($statement);$/;"	v
_getMethodLogger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    protected function _getMethodLogger(StatementInterface $statement)$/;"	f
log	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^        $log = new MethodLoggingStatement($statement, $this->driver());$/;"	v
methodLogger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    public function methodLogger(MethodLogger $instance = null)$/;"	f
instance	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    public function methodLogger(MethodLogger $instance = null)$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^                $this->_methodLogger = new MethodLogger;$/;"	v
_methodLogger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^        $this->_methodLogger = $instance;$/;"	v
cacheMetadata	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^    public function cacheMetadata($cache)$/;"	f
_schemaMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\OracleConnection.php	/^        $this->_schemaMethodsCollection = null;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^ * Extends the schema collection class to provide caching$/;"	c
CachedMethodsCollection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^class CachedMethodsCollection extends MethodsCollection$/;"	c
_cache	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^    protected $_cache = false;$/;"	v
_cache	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^    protected $_cache = false;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^    public function __construct(ConnectionInterface $connection, $cacheKey = true)$/;"	f
cacheKey	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^    public function __construct(ConnectionInterface $connection, $cacheKey = true)$/;"	v
describe	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	v
cacheConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^        $cacheConfig = $this->cacheMetadata();$/;"	v
cacheKey	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^        $cacheKey = $this->cacheKey($name);$/;"	v
cached	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^            $cached = Cache::read($cacheKey, $cacheConfig);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^        $method = parent::describe($name, $options);$/;"	v
cacheKey	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^    public function cacheKey($name)$/;"	f
cacheMetadata	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^    public function cacheMetadata($enable = null)$/;"	f
enable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^            $enable = '_cake_method_';$/;"	v
_cache	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\CachedMethodsCollection.php	/^        return $this->_cache = $enable;$/;"	v
Method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^class Method$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected $_method;$/;"	v
_isFunction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected $_isFunction;$/;"	v
_parameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected $_parameters = [];$/;"	v
_parameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected $_parameters = [];$/;"	v
_typeMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected $_typeMap = [];$/;"	v
_typeMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected $_typeMap = [];$/;"	v
_columnParameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected static $_columnParameters = [$/;"	v
_columnParameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected static $_columnParameters = [$/;"	v
_columnExtras	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected static $_columnExtras = [$/;"	v
_columnExtras	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    protected static $_columnExtras = [$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function __construct($method, array $parameters = [])$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function __construct($method, array $parameters = [])$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^        $this->_method = $method;$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^        foreach ($parameters as $parameter => $definition) {$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function name()$/;"	f
addParameter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function addParameter($name, $attrs)$/;"	f
attrs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^            $attrs = ['type' => $attrs];$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^        $valid = static::$_columnParameters;$/;"	v
_isFunction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^            $this->_isFunction = true;$/;"	v
attrs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^        $attrs = array_intersect_key($attrs, $valid);$/;"	v
parameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function parameters()$/;"	f
parameter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function parameter($name)$/;"	f
parameter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^        $parameter = $this->_parameters[$name];$/;"	v
parameterType	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function parameterType($name, $type = null)$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function parameterType($name, $type = null)$/;"	v
parameterDirection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function parameterDirection($name, $direction = null)$/;"	f
direction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function parameterDirection($name, $direction = null)$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^        $result = null;$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^            $result = 'IN';$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function typeMap()$/;"	f
isFunction	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\Method.php	/^    public function isFunction()$/;"	f
MethodsCollection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^class MethodsCollection$/;"	c
_connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^    protected $_connection;$/;"	v
_dialect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^    protected $_dialect;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^    public function __construct(ConnectionInterface $connection)$/;"	f
_connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $this->_connection = $connection;$/;"	v
_dialect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $this->_dialect = $connection->driver()->schemaDialect();$/;"	v
listMethods	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^    public function listMethods()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $result = [];$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $statement = $this->_connection->execute($sql, $params);$/;"	v
getMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^    public function getMethod($name)$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $config = $this->_connection->config();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $result = [];$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $statement = $this->_connection->execute($sql, $params);$/;"	v
describe	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^    public function describe($name, array $options = [])$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $config = $this->_connection->config();$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $methods = $this->getMethod($name);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^        $method = new Method($name);$/;"	v
_reflect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^    protected function _reflect($method, $name, $config)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\MethodsCollection.php	/^            $statement = $this->_connection->execute($sql, $params);$/;"	v
OracleSchema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^class OracleSchema extends BaseSchema$/;"	c
_constraints	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected $_constraints = [];$/;"	v
_constraints	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected $_constraints = [];$/;"	v
listMethodsSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function listMethodsSql($config)$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $table = 'user_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $params = [];$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $table = 'all_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $params = [':ownerParam' => strtoupper($config['schema'])];$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $ownerCondition = 'AND OWNER = :ownerParam';$/;"	v
objectNameField	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $objectNameField = $this->_transformFieldCase("OBJECT_NAME");$/;"	v
procedureName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $procedureName = $this->_transformFieldCase("PROCEDURE_NAME");$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $objectCondition = '';$/;"	v
objectName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $objectName = $config['objectName'];$/;"	v
items	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $items = explode('.', $objectName);$/;"	v
itemsCount	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $itemsCount = count($items);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $schema = $package = null;$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $object = $objectName;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $ownerCondition = '';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $params = [$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $table = 'user_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $useOwner = false;$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $objectCondition = " AND $objectNameField = :objectParam ";$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $table = 'all_procedures';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $useOwner = true;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $ownerCondition = " AND OWNER = :ownerParam AND $objectNameField = :packageParam ";$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $params = [$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $objectCondition = " AND $procedureName = :objectParam ";$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $ownerCondition = " AND (OWNER = :packageParam OR $objectNameField = :packageParam) ";$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $params = [$/;"	v
objectCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $objectCondition = " AND $procedureName = :objectParam ";$/;"	v
procedureName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $procedureName = $this->_transformFieldCase("PROCEDURE_NAME");$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT $objectNameField as object, $procedureName as name, OBJECT_TYPE FROM $table$/;"	v
listTablesSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function listTablesSql($config)$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $table = 'user_tables';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $params = [];$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $table = 'all_tables';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $params = [':ownerParam' => strtoupper($config['schema'])];$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $tableName = $this->_transformFieldCase("TABLE_NAME");$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT $tableName as name FROM $table " . ($useOwner ? 'WHERE owner = :ownerParam' : '') . " ORDER BY name";$/;"	v
describeColumnSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function describeColumnSql($tableName, $config)$/;"	f
columnsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $columnsTable = 'user_tab_columns';$/;"	v
commentsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $commentsTable = 'user_col_comments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $params = [':tableParam' => $table];$/;"	v
columnsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $columnsTable = 'all_tab_columns';$/;"	v
commentsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $commentsTable = 'all_col_comments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $params = [$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
convertColumnDescription	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function convertColumnDescription(Table $table, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $length = $row['char_length'];$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
describeParametersSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function describeParametersSql($objectName, $config)$/;"	f
items	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $items = explode('.', $objectName);$/;"	v
itemsCount	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $itemsCount = count($items);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $schema = $package = null;$/;"	v
object	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $object = $objectName;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $ownerCondition = '';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $params = [$/;"	v
argumentsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $argumentsTable = 'user_arguments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
argumentsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $argumentsTable = 'all_arguments';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $ownerCondition = 'AND args.OWNER = :ownerParam AND args.PACKAGE_NAME = :packageParam ';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $params = [$/;"	v
ownerCondition	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $ownerCondition = 'AND (args.OWNER = :packageParam OR args.PACKAGE_NAME = :packageParam) ';$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $params = [$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
convertParametersDescription	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function convertParametersDescription(Method $method, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
length	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $length = $row['data_length'];$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                    $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $field = [$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $out = strpos($row['direction'], 'OUT') !== false ? true : false;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $name = $row['name'];$/;"	v
function	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $function = $out && $name === null ? true : false;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $name = ':result';$/;"	v
describeIndexSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function describeIndexSql($tableName, $config)$/;"	f
constraintsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $constraintsTable = 'user_constraints';$/;"	v
indexesTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $indexesTable = 'user_indexes';$/;"	v
indexColumnsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $indexColumnsTable = 'user_ind_columns';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = false;$/;"	v
constraintsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $constraintsTable = 'all_constraints';$/;"	v
indexesTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $indexesTable = 'all_indexes';$/;"	v
indexColumnsTable	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $indexColumnsTable = 'all_ind_columns';$/;"	v
useOwner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $useOwner = true;$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = "SELECT$/;"	v
params	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $params = [$/;"	v
convertIndexDescription	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function convertIndexDescription(Table $table, $row)$/;"	f
tableIndex	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $tableIndex = array_change_key_case($row);$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $type = null;$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $columns = $length = [];$/;"	v
keyName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $keyName = $this->_transformValueCase($tableIndex['name']);$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $name = $this->_transformValueCase($tableIndex['column_name']);$/;"	v
keyName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $keyName = $type = Table::CONSTRAINT_PRIMARY;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $type = Table::CONSTRAINT_UNIQUE;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $type = Table::INDEX_INDEX;$/;"	v
isIndex	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $isIndex = $type === Table::INDEX_INDEX;$/;"	v
existing	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $existing = $table->index($keyName);$/;"	v
existing	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $existing = $table->constraint($keyName);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $columns = array_merge($existing['columns'], $columns);$/;"	v
_convertColumnList	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected function _convertColumnList($columns)$/;"	f
columns	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $columns = explode(', ', $columns);$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $column = trim($column, '"');$/;"	v
describeForeignKeySql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function describeForeignKeySql($tableName, $config)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $sql = "SELECT$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = "$/;"	v
convertForeignKeyDescription	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function convertForeignKeyDescription(Table $table, $row)$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $row = array_change_key_case($row);$/;"	v
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $data = [$/;"	v
_convertOnClause	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected function _convertOnClause($clause)$/;"	f
columnSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function columnSql(Table $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $data = $table->column($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $out = $this->_driver->quoteIfAutoQuote($name);$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $typeMap = [$/;"	v
isFixed	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $isFixed = !empty($data['fixed']);$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $type = ' VARCHAR2';$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $type = ' CHAR';$/;"	v
defaultValue	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $defaultValue = $data['default'];$/;"	v
defaultValue	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $defaultValue = (int)$defaultValue;$/;"	v
addConstraintSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function addConstraintSql(Table $table)$/;"	f
sqlPattern	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sqlPattern = 'ALTER TABLE %s ADD %s;';$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
dropConstraintSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function dropConstraintSql(Table $table)$/;"	f
sqlPattern	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sqlPattern = 'ALTER TABLE %s DROP CONSTRAINT %s;';$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
constraintName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^                $constraintName = $this->_driver->quoteIfAutoQuote($name);$/;"	v
indexSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function indexSql(Table $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $data = $table->index($name);$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $columns = array_map([$/;"	v
constraintSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function constraintSql(Table $table, $name)$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $data = $table->constraint($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $out = 'CONSTRAINT ' . $this->_driver->quoteIfAutoQuote($name);$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $out = 'PRIMARY KEY';$/;"	v
_keySql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected function _keySql($prefix, $data)$/;"	f
columns	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $columns = array_map([$/;"	v
createTableSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function createTableSql(Table $table, $columns, $constraints, $indexes)$/;"	f
content	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $content = array_merge($columns, $constraints);$/;"	v
content	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $content = implode(",\\n", array_filter($content));$/;"	v
tableName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $tableName = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
temporary	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $temporary = $table->temporary() ? ' TEMPORARY ' : ' ';$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $out = [];$/;"	v
columnData	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $columnData = $table->column($column);$/;"	v
pk	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $pk = $this->_getPrimaryKey($table);$/;"	v
fieldName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $fieldName = $pk['columns'][0];$/;"	v
out	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $out = Hash::merge($out, $this->getCreateAutoincrementSql($fieldName, $table->name()));$/;"	v
truncateTableSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function truncateTableSql(Table $table)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $name = $this->_driver->quoteIfAutoQuote($table->name());$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sequenceName = $this->_getSequenceName($table->name());$/;"	v
dropTableSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function dropTableSql(Table $table)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = sprintf('DROP TABLE %s CASCADE CONSTRAINTS', $this->_driver->quoteIfAutoQuote($table->name()));$/;"	v
tableSplit	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function tableSplit($name, $config)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $schema = null;$/;"	v
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $table = $name;$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $schema = strtoupper($config['schema']);$/;"	v
_getPrimaryKey	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected function _getPrimaryKey(Table $table)$/;"	f
constraints	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $constraints = $table->constraints();$/;"	v
constraint	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $constraint = $table->constraint($name);$/;"	v
_isSingleKey	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected function _isSingleKey(Table $table, $constraints)$/;"	f
constraint	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $constraint = $constraints[0];$/;"	v
columns	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $columns = $constraint['columns'];$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $column = $table->column($columns[0]);$/;"	v
getCreateSequenceSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function getCreateSequenceSql($sequenceName)$/;"	f
getDropSequenceSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function getDropSequenceSql($sequenceName)$/;"	f
createSequenceIfNotExists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function createSequenceIfNotExists($name, $createCommand = null)$/;"	f
createCommand	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function createSequenceIfNotExists($name, $createCommand = null)$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
createCommand	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $createCommand = $this->getCreateSequenceSql($name);$/;"	v
wrapper	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $wrapper = <<<SQL$/;"	v
dropSequenceIfExists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function dropSequenceIfExists($name, $dropCommand = null)$/;"	f
dropCommand	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function dropSequenceIfExists($name, $dropCommand = null)$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $name = strtoupper($name);$/;"	v
dropCommand	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^            $dropCommand = $this->getDropSequenceSql($name);$/;"	v
wrapper	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $wrapper = <<<SQL$/;"	v
getCreateAutoincrementSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function getCreateAutoincrementSql($name, $tableName, $start = 1)$/;"	f
start	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    public function getCreateAutoincrementSql($name, $tableName, $start = 1)$/;"	v
quotedTableName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $quotedTableName = $this->_driver->quoteIfAutoQuote($tableName);$/;"	v
quotedName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $quotedName = $this->_driver->quoteIfAutoQuote($name);$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sql = [];$/;"	v
autoincrementIdentifierName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $autoincrementIdentifierName = 't_' . $tableName;$/;"	v
sequenceName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $sequenceName = $this->_getSequenceName($tableName);$/;"	v
_getSequenceName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected function _getSequenceName($name)$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $name = 'seq_' . $name;$/;"	v
_transformValueCase	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected function _transformValueCase($value)$/;"	f
case	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $case = $this->_driver->config('case');$/;"	v
_transformFieldCase	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^    protected function _transformFieldCase($field)$/;"	f
case	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Schema\OracleSchema.php	/^        $case = $this->_driver->config('case');$/;"	v
meant	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
MethodOracleStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^class MethodOracleStatement extends MethodStatementDecorator$/;"	c
queryString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public $queryString;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public $paramMap;$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function execute($params = null)$/;"	f
_statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^            $this->_statement = $this->_statement->getInnerStatement();$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^            $this->_statement = new OracleBufferedStatement($this->_statement, $this->_driver);$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function __get($property)$/;"	f
bind	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bind($params, $types)$/;"	f
annonymousParams	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^        $annonymousParams = is_int(key($params)) ? true : false;$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^        $offset = 0;$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^        foreach ($params as $index => $value) {$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^            $type = null;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^                $type = $types[$index];$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^        $column = isset($this->paramMap[$column]) ? $this->paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^        $type = $type == 'boolean' ? 'integer' : $type;$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function fetch($type = 'num')$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^        $result = $this->_statement->fetch($type);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^            foreach ($result as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodOracleStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
mainly	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^ * Decorator for \\PDOStatement class mainly used for converting human readable$/;"	c
MethodPDOStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^class MethodPDOStatement extends MethodStatementDecorator$/;"	c
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function __construct(Statement $statement = null, $driver = null)$/;"	f
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function __construct(Statement $statement = null, $driver = null)$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^        $this->_statement = $statement;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^        $this->_driver = $driver;$/;"	v
val	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $val = 'a title';$/;"	v
boolVal	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $boolVal = true;$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^     * $date = new \\DateTime();$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^            $type = 'string';$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^            $type = 'string';$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function fetch($type = 'num')$/;"	f
fetchAll	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodPDOStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
is	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodStatementDecorator.php	/^ * This class is but a decorator of an actual statement implementation, such as$/;"	c
MethodStatementDecorator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodStatementDecorator.php	/^class MethodStatementDecorator extends StatementDecorator implements StatementInterface, Countable, IteratorAggregate$/;"	c
val	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $val = 'a title';$/;"	v
boolVal	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $boolVal = true;$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodStatementDecorator.php	/^     * $date = new \\DateTime();$/;"	v
bindParam	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodStatementDecorator.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\MethodStatementDecorator.php	/^    public function bindParam($column, &$value, $type = 'string')$/;"	v
Oci8Statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\Oci8Statement.php	/^class Oci8Statement extends Statement$/;"	c
closeCursor	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\Oci8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\Oci8Statement.php	/^    public function __destruct()$/;"	f
meant	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleBufferedStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^class OracleBufferedStatement extends MethodStatementDecorator$/;"	c
_count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_count = 0;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_count = 0;$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_records = [];$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_records = [];$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_allFetched = true;$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_allFetched = true;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_counter = 0;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected $_counter = 0;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function __construct($statement = null, $driver = null)$/;"	f
driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function __construct($statement = null, $driver = null)$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function execute($params = null)$/;"	f
fetch	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function fetch($type = 'num')$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $row = ($this->_counter < $this->_count) ? $this->_records[$this->_counter++] : false;$/;"	v
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $row = ($row && $type === 'num') ? array_values($row) : $row;$/;"	v
_fetchType	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_fetchType = $type;$/;"	v
record	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $record = $this->_statement->fetch($type);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_allFetched = true;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_counter = $this->_count + 1;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^            foreach ($record as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
_records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_records = parent::fetchAll($type);$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_count = count($this->_records);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_allFetched = true;$/;"	v
rowCount	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function rowCount()$/;"	f
counter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $counter = $this->_counter;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^            $this->_counter = $counter;$/;"	v
rewind	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    public function rewind()$/;"	f
_counter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_counter = 0;$/;"	v
_reset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^    protected function _reset()$/;"	f
_count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_count = $this->_counter = 0;$/;"	v
_records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_records = [];$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Method\OracleBufferedStatement.php	/^        $this->_allFetched = false;$/;"	v
Oci8Statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Oci8Statement.php	/^class Oci8Statement extends Statement$/;"	c
closeCursor	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Oci8Statement.php	/^    public function closeCursor()$/;"	f
__destruct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\Oci8Statement.php	/^    public function __destruct()$/;"	f
meant	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleBufferedStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^class OracleBufferedStatement extends BufferedStatement$/;"	c
fetch	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^    public function fetch($type = 'num')$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^            $row = ($this->_counter < $this->_count) ? $this->_records[$this->_counter++] : false;$/;"	v
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^            $row = ($row && $type === 'num') ? array_values($row) : $row;$/;"	v
_fetchType	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^        $this->_fetchType = $type;$/;"	v
record	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^        $record = $this->_statement->fetch($type);$/;"	v
_allFetched	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^            $this->_allFetched = true;$/;"	v
_counter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^            $this->_counter = $this->_count + 1;$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^            foreach ($record as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleBufferedStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
meant	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^ * Statement class meant to be used by an Oracle driver$/;"	c
OracleStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^class OracleStatement extends StatementDecorator$/;"	c
queryString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public $queryString;$/;"	v
paramMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public $paramMap;$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public function execute($params = null)$/;"	f
_statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^            $this->_statement = $this->_statement->getInnerStatement();$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^            $this->_statement = new OracleBufferedStatement($this->_statement, $this->_driver);$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public function __get($property)$/;"	f
bind	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public function bind($params, $types)$/;"	f
annonymousParams	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^        $annonymousParams = is_int(key($params)) ? true : false;$/;"	v
offset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^        $offset = 0;$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^        foreach ($params as $index => $value) {$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^            $type = null;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^                $type = $types[$index];$/;"	v
bindValue	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	f
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public function bindValue($column, $value, $type = 'string')$/;"	v
column	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^        $column = isset($this->paramMap[$column]) ? $this->paramMap[$column] : $column;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^        $type = $type == 'boolean' ? 'integer' : $type;$/;"	v
fetch	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public function fetch($type = 'num')$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^        $result = $this->_statement->fetch($type);$/;"	v
key	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^            foreach ($result as $key => &$value) {$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^                    $value = stream_get_contents($value);$/;"	v
fetchAll	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Statement\OracleStatement.php	/^    public function fetchAll($type = 'num')$/;"	f
CursorType	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Type\CursorType.php	/^class CursorType extends Type$/;"	c
toDatabase	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Type\CursorType.php	/^    public function toDatabase($value, Driver $driver)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Type\CursorType.php	/^        if ($value === null || $value === '') {$/;"	v
marshal	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Type\CursorType.php	/^    public function marshal($value)$/;"	f
toStatement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Database\Type\CursorType.php	/^    public function toStatement($value, Driver $driver)$/;"	f
MissingMethodClassException	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Exception\MissingMethodClassException.php	/^class MissingMethodClassException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Exception\MissingMethodClassException.php	/^    protected $_messageTemplate = 'Method class %s could not be found.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Exception\MissingMethodClassException.php	/^    protected $_messageTemplate = 'Method class %s could not be found.';$/;"	v
MissingRequestException	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Exception\MissingRequestException.php	/^class MissingRequestException extends Exception$/;"	c
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Exception\MissingRequestException.php	/^    protected $_messageTemplate = 'Request class %s could not be found.';$/;"	v
_messageTemplate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Exception\MissingRequestException.php	/^    protected $_messageTemplate = 'Request class %s could not be found.';$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorAwareTrait.php	/^    protected $_methodLocator;$/;"	v
methodLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorAwareTrait.php	/^    public function methodLocator(LocatorInterface $methodLocator = null)$/;"	f
methodLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorAwareTrait.php	/^    public function methodLocator(LocatorInterface $methodLocator = null)$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorAwareTrait.php	/^            $this->_methodLocator = $methodLocator;$/;"	v
_methodLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorAwareTrait.php	/^            $this->_methodLocator = MethodRegistry::locator();$/;"	v
LocatorInterface	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^interface LocatorInterface$/;"	i
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^    public function config($alias = null, $options = null);$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^    public function config($alias = null, $options = null);$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^    public function get($alias, array $options = []);$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^    public function get($alias, array $options = []);$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^    public function exists($alias);$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^    public function set($alias, Method $object);$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^    public function clear();$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\LocatorInterface.php	/^    public function remove($alias);$/;"	f
MethodLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^class MethodLocator implements LocatorInterface$/;"	c
_config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected $_config = [];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected $_config = [];$/;"	v
_instances	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected $_instances = [];$/;"	v
_instances	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected $_instances = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected $_fallbacked = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected $_fallbacked = [];$/;"	v
_options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected $_options = [];$/;"	v
_options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected $_options = [];$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function config($alias = null, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function config($alias = null, $options = null)$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^            return $this->_config = $alias;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^     * class name based on the alias. If this class does not exist,$/;"	c
will	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^     * then the default `CakeDC\\OracleDriver\\ORM\\Method` class will be used. By setting the `className`$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^     * option you can define the specific class to use. This className can$/;"	c
reference	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^     * use a plugin short class reference.$/;"	c
get	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function get($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function get($alias, array $options = [])$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^        $options = ['alias' => $classAlias] + $options;$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^        $className = $this->_getClassName($alias, $options);$/;"	v
connectionName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^            $connectionName = $options['className']::defaultConnectionName();$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^     * Gets the method class name.$/;"	c
_getClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected function _getClassName($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected function _getClassName($alias, array $options = [])$/;"	v
_create	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    protected function _create(array $options)$/;"	f
exists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function exists($alias)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function set($alias, Method $object)$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function clear()$/;"	f
_instances	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^        $this->_instances = [];$/;"	v
_config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^        $this->_config = [];$/;"	v
_fallbacked	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^        $this->_fallbacked = [];$/;"	v
genericInstances	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function genericInstances()$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Locator\MethodLocator.php	/^    public function remove($alias)$/;"	f
ResultSet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^class ResultSet implements ResultSetInterface$/;"	c
_statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_statement;$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_index = 0;$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_index = 0;$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_current;$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_results = [];$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_results = [];$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_hydrate = true;$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_hydrate = true;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^     * The fully namespaced name of the class to use for hydrating results$/;"	c
_entityClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_entityClass;$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_useBuffering = false;$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_useBuffering = false;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_count;$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_types = [];$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_types = [];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_schema = [];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_schema = [];$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected $_driver;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function __construct($repository, $statement, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function __construct($repository, $statement, $options = [])$/;"	v
_statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_statement = $statement;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_driver = $repository->connection()->driver();$/;"	v
_hydrate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_hydrate = $options['hydrate'];$/;"	v
_entityClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_entityClass = $options['entityClass'];$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_useBuffering = $options['useBuffering'];$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_schema = $options['schema'];$/;"	v
_types	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_types = $this->_getTypes(array_keys($this->_schema));$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^             $count = $this->count();$/;"	v
_results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^             $this->_results = new SplFixedArray($count);$/;"	v
current	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function current()$/;"	f
key	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function key()$/;"	f
next	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function next()$/;"	f
rewind	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function rewind()$/;"	f
msg	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^            $msg = 'You cannot rewind an un-buffered ResultSet';$/;"	v
_index	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_index = 0;$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function valid()$/;"	f
valid	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^            $valid = $this->_index < $this->_count;$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^                $this->_current = $this->_results[$this->_index];$/;"	v
_current	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_current = $this->_fetchResult();$/;"	v
valid	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $valid = $this->_current !== false;$/;"	v
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^     * Helper function to fetch the next result from the statement or$/;"	f
_fetchResult	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected function _fetchResult()$/;"	f
row	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $row = $this->_statement->fetch('assoc');$/;"	v
_groupResult	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected function _groupResult($row)$/;"	f
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $results = $this->_castValues($row);$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $options = [];$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^            $results = new $this->_entityClass($results, $options);$/;"	v
first	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function first()$/;"	f
serialize	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function serialize()$/;"	f
unserialize	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function unserialize($serialized)$/;"	f
_results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_results = unserialize($serialized);$/;"	v
_useBuffering	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_useBuffering = true;$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $this->_count = count($this->_results);$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function count()$/;"	f
_count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^            return $this->_count = $this->_statement->rowCount();$/;"	v
_count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        return $this->_count = count($this->_results);$/;"	v
_castValues	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected function _castValues($values)$/;"	f
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        foreach ($this->_types as $field => $type) {$/;"	v
_getTypes	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    protected function _getTypes($fields)$/;"	f
types	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $types = [];$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $schema = $this->_schema;$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $map = array_keys(Type::map() + ['string' => 1, 'text' => 1, 'boolean' => 1]);$/;"	v
typeMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^        $typeMap = array_combine($/;"	v
typeName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^            $typeName = $schema[$col];$/;"	v
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method\ResultSet.php	/^    public function __debugInfo()$/;"	f
Method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^class Method {$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    protected $_method;$/;"	v
_connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    protected $_connection;$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    protected $_schema;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^     * The request class name for the method.$/;"	c
_requestClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    protected $_requestClass;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function __construct(array $config = [])$/;"	f
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function __construct(array $config = [])$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function method($method = null)$/;"	f
_method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $this->_method = $method;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $method = namespaceSplit(get_class($this));$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $method = substr(end($method), 0, -6);$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $this->_method = Inflector::underscore($method);$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function connection(OracleConnection $conn = null)$/;"	f
conn	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function connection(OracleConnection $conn = null)$/;"	v
_connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        return $this->_connection = $conn;$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function schema($schema = null)$/;"	f
_schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^                $this->_schema = $this->_initializeSchema($this->connection()$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $schema = new Schema($this->method(), $schema);$/;"	v
_schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        return $this->_schema = $schema;$/;"	v
in	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^     * Override this function in order to alter the schema used by this method.$/;"	f
is	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^     * This function is only called after fetching the schema out of the database.$/;"	f
_initializeSchema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^     * protected function _initializeSchema(\\CakeDC\\OracleDriver\\Database\\Schema\\Method $method) {$/;"	f
_initializeSchema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    protected function _initializeSchema(Schema $method)$/;"	f
used	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^     * Returns the class used to keep request parameters for this method$/;"	c
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^     * @param string|null $name the name of the class to use$/;"	c
cannot	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^     * @throws \\CakeDC\\OracleDriver\\ORM\\Exception\\MissingRequestException when the request class cannot be found$/;"	c
requestClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function requestClass($name = null)$/;"	f
default	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $default = '\\CakeDC\\OracleDriver\\ORM\\Request';$/;"	v
self	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $self = get_called_class();$/;"	v
parts	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $parts = explode('\\\\', $self);$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^                return $this->_requestClass = $default;$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $alias = Inflector::singularize(substr(array_pop($parts), 0, -6));$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $name = implode('\\\\', array_slice($parts, 0, -1)) . '\\Request\\\\' . $alias;$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^                return $this->_requestClass = $default;$/;"	v
class	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $class = App::className($name, 'Model\/Request');$/;"	v
_requestClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $this->_requestClass = $class;$/;"	v
initialize	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^     *  public function initialize(array $config)$/;"	f
initialize	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function initialize(array $config)$/;"	f
newRequest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function newRequest($data = null)$/;"	f
class	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $class = $this->requestClass();$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $request = new $class([], [$/;"	v
execute	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function execute(RequestInterface $request)$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $query = $this->_generateSql();$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $statement = $this->connection()$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $result = $statement->execute();$/;"	v
_generateSql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function _generateSql()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $query = '';$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^            $query = ':result := ';$/;"	v
parameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $parameters = $this->schema()$/;"	v
names	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $names = [];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $query = 'begin ' . $query . ' end;';$/;"	v
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public function __debugInfo()$/;"	f
conn	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^        $conn = $this->connection();$/;"	v
defaultConnectionName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Method.php	/^    public static function defaultConnectionName()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^ * $method = MethodRegistry::get('Procedure', $config);$/;"	v
MethodRegistry	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^class MethodRegistry$/;"	c
_locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    protected static $_locator;$/;"	v
_defaultLocatorClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    protected static $_defaultLocatorClass = 'CakeDC\\OracleDriver\\ORM\\Locator\\MethodLocator';$/;"	v
_defaultLocatorClass	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    protected static $_defaultLocatorClass = 'CakeDC\\OracleDriver\\ORM\\Locator\\MethodLocator';$/;"	v
config	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function config($alias = null, $options = null)$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function config($alias = null, $options = null)$/;"	v
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function locator(LocatorInterface $locator = null)$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function locator(LocatorInterface $locator = null)$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function get($alias, array $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function get($alias, array $options = [])$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function exists($alias)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function set($alias, Method $object)$/;"	f
remove	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function remove($alias)$/;"	f
clear	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function clear()$/;"	f
__callStatic	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\MethodRegistry.php	/^    public static function __callStatic($name, $arguments)$/;"	f
Request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Request.php	/^class Request implements RequestInterface$/;"	c
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Request.php	/^    public function __construct(array $properties = [], array $options = [])$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Request.php	/^    public function __construct(array $properties = [], array $options = [])$/;"	v
_className	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Request.php	/^        $this->_className = get_class($this);$/;"	v
_repository	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Request.php	/^            $this->_repository = $options['repository'];$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\Request.php	/^            $this->_driver = $this->_repository->connection()$/;"	v
representing	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestInterface.php	/^ * Describes the methods that any class representing a data storage should$/;"	c
RequestInterface	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestInterface.php	/^interface RequestInterface extends ArrayAccess, JsonSerializable$/;"	i
set	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestInterface.php	/^    public function set($property, $value = null, array $options = []);$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestInterface.php	/^    public function set($property, $value = null, array $options = []);$/;"	v
get	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestInterface.php	/^    public function &get($property);$/;"	f
toArray	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestInterface.php	/^    public function toArray();$/;"	f
isNew	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestInterface.php	/^    public function isNew($new = null);$/;"	f
_accessors	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected static $_accessors = [];$/;"	v
_accessors	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected static $_accessors = [];$/;"	v
_properties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_properties = [];$/;"	v
_properties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_properties = [];$/;"	v
_castedProperties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_castedProperties = [];$/;"	v
_castedProperties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_castedProperties = [];$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^     * Holds the name of the class for the instance object$/;"	c
_className	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_className;$/;"	v
for	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^     * Holds the repository of the method class for the instance object$/;"	c
_repository	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_repository;$/;"	v
_driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_driver;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_new = true;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected $_new = true;$/;"	v
__get	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function &__get($property)$/;"	f
__set	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function __set($property, $value)$/;"	f
get	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function &get($property)$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $value = null;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $method = '_get' . Inflector::camelize($property);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^            $value =& $this->_properties[$property];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^            $result = $this->{$method}($value);$/;"	v
_methodExists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    protected function _methodExists($method)$/;"	f
set	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function set($property, $value = null, array $options = [])$/;"	f
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function set($property, $value = null, array $options = [])$/;"	v
isString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $isString = is_string($property);$/;"	v
property	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^            $property = [$property => $value];$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^            $options = (array)$value;$/;"	v
p	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        foreach ($property as $p => $value) {$/;"	v
setter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^            $setter = '_set' . Inflector::camelize($p);$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^                $value = $this->{$setter}($value);$/;"	v
__isset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function __isset($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^     * $request = new Request(['id' => 1, 'name' => null]);$/;"	v
has	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function has($property)$/;"	f
__unset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function __unset($property)$/;"	f
unsetProperty	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function unsetProperty($property)$/;"	f
property	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $property = (array)$property;$/;"	v
jsonSerialize	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function jsonSerialize()$/;"	f
toArray	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function toArray()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $result = [];$/;"	v
value	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^            $value = $this->get($property);$/;"	v
k	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^                foreach ($value as $k => $object) {$/;"	v
visibleProperties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function visibleProperties()$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $properties = array_keys($this->_properties);$/;"	v
offsetExists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function offsetExists($offset)$/;"	f
offsetGet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function &offsetGet($offset)$/;"	f
offsetSet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function offsetSet($offset, $value)$/;"	f
offsetUnset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function offsetUnset($offset)$/;"	f
attachTo	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function attachTo($statement)$/;"	f
properties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $properties = $this->_properties;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        foreach ($properties as $name => $value) {$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^            $parameter = $this->_repository->schema()$/;"	v
paramName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^                $paramName = $name;$/;"	v
paramName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^                $paramName = ':' . $name;$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^                $type = $parameter['type'];$/;"	v
fetchCursor	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function fetchCursor($name, $options = [])$/;"	f
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function fetchCursor($name, $options = [])$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $parameter = $this->_repository->schema()->parameter($name);$/;"	v
property	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $property = $this->get($name);$/;"	v
statement	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $statement = $this->_repository->connection()->prepareMethod($property);$/;"	v
isNew	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function isNew($new = null)$/;"	f
new	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $new = (bool)$new;$/;"	v
_new	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        return $this->_new = $new;$/;"	v
applySchema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function applySchema(MethodSchema $schema)$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^        $parameters = $schema->parameters();$/;"	v
parameter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^            $parameter = $schema->parameter($name);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^     * Helper method to get function result. Should be used only in case function was called.$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function result()$/;"	f
__toString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function __toString()$/;"	f
__debugInfo	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\ORM\RequestTrait.php	/^    public function __debugInfo()$/;"	f
MethodLogPanel	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^class MethodLogPanel extends DebugPanel$/;"	c
plugin	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^    public $plugin = 'OracleDriver';$/;"	v
plugin	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^    public $plugin = 'OracleDriver';$/;"	v
_loggers	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^    protected $_loggers = [];$/;"	v
_loggers	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^    protected $_loggers = [];$/;"	v
initialize	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^    public function initialize()$/;"	f
configs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^        $configs = ConnectionManager::configured();$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^            $connection = ConnectionManager::get($name);$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^            $logger = null;$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^                $logger = $connection->methodLogger();$/;"	v
logger	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^            $logger = new DebugMethodLog($logger, $name);$/;"	v
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^    public function data()$/;"	f
summary	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^    public function summary()$/;"	f
count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\Panel\MethodLogPanel.php	/^        $count = $time = 0;$/;"	v
MethodTestFixture	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^class MethodTestFixture$/;"	c
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $connection = 'test';$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $connection = 'test';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $name = null;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $name = null;$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $create = [];$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $create = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $drop = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public $drop = [];$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function __construct()$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^            $connection = $this->connection;$/;"	v
message	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^                $message = sprintf($/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function connection()$/;"	f
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function name()$/;"	f
init	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function init()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^            $method = $class;$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^                $method = $matches[1];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^            $this->name = Inflector::tableize($method);$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function create(ConnectionInterface $db)$/;"	f
queries	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^            $queries = [];$/;"	v
queries	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^                $queries = (array)$this->create;$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^                $stmt = $db->prepare($query);$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^            $msg = sprintf($/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function drop(ConnectionInterface $db)$/;"	f
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^            $sql = [];$/;"	v
sql	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^                $sql = (array)$this->drop;$/;"	v
stmt	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^                $stmt = $db->prepare($query);$/;"	v
insert	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function insert(ConnectionInterface $db)$/;"	f
createConstraints	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function createConstraints(ConnectionInterface $db)$/;"	f
dropConstraints	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function dropConstraints(ConnectionInterface $db)$/;"	f
truncate	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\MethodTestFixture.php	/^    public function truncate(ConnectionInterface $db)$/;"	f
OracleFixtureInjector	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^class OracleFixtureInjector implements PHPUnit_Framework_TestListener$/;"	c
_fixtureManager	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    protected $_fixtureManager;$/;"	v
_first	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    protected $_first;$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function __construct(OracleFixtureManager $manager)$/;"	f
_fixtureManager	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^        $this->_fixtureManager = $manager;$/;"	v
startTestSuite	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function startTestSuite(PHPUnit_Framework_TestSuite $suite)$/;"	f
_first	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^            $this->_first = $suite;$/;"	v
endTestSuite	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function endTestSuite(PHPUnit_Framework_TestSuite $suite)$/;"	f
addError	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addError(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
addWarning	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addWarning(PHPUnit_Framework_Test $test, PHPUnit_Framework_Warning $e, $time)$/;"	f
addFailure	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time)$/;"	f
addIncompleteTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
addSkippedTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
startTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function startTest(PHPUnit_Framework_Test $test)$/;"	f
endTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function endTest(PHPUnit_Framework_Test $test, $time)$/;"	f
addRiskyTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureInjector.php	/^    public function addRiskyTest(PHPUnit_Framework_Test $test, Exception $e, $time)$/;"	f
to	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^ * A factory class to manage the life cycle of test fixtures$/;"	c
OracleFixtureManager	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^class OracleFixtureManager$/;"	c
_initialized	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_initialized = false;$/;"	v
_initialized	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_initialized = false;$/;"	v
_loaded	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_loaded = [];$/;"	v
_loaded	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_loaded = [];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Holds the fixture classes that where instantiated indexed by class name$/;"	c
_fixtureMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_fixtureMap = [];$/;"	v
_fixtureMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_fixtureMap = [];$/;"	v
_insertionMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_insertionMap = [];$/;"	v
_insertionMap	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_insertionMap = [];$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * List of TestCase class name that have been processed$/;"	c
_processed	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_processed = [];$/;"	v
_processed	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_processed = [];$/;"	v
_debug	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_debug = false;$/;"	v
_debug	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected $_debug = false;$/;"	v
setDebug	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function setDebug($debug)$/;"	f
_debug	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $this->_debug = $debug;$/;"	v
fixturize	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function fixturize($test)$/;"	f
loaded	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loaded()$/;"	f
_aliasConnections	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _aliasConnections()$/;"	f
connections	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $connections = ConnectionManager::configured();$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $map = [];$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            if ($connection === 'test' || $connection === 'default') {$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        foreach ($map as $alias => $connection) {$/;"	v
with	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Initializes this class with a DataSource object to use as default for all fixtures$/;"	c
_initDb	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _initDb()$/;"	f
_initialized	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $this->_initialized = true;$/;"	v
_loadCodeFixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _loadCodeFixtures($test)$/;"	f
path	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $path = explode('\/', $pathName);$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $name = array_pop($path);$/;"	v
additionalPath	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $additionalPath = implode('\\\\', $path);$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = 'Cake';$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = Configure::read('App.namespace');$/;"	v
path	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $path = implode('\\\\', explode('\/', $plugin));$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = Inflector::camelize(str_replace('\\\\', '\\ ', $path));$/;"	v
additionalPath	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $additionalPath = null;$/;"	v
baseNamespace	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $baseNamespace = '';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $name = $fixture;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $name = Inflector::camelize($name);$/;"	v
nameSegments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $nameSegments = [$/;"	v
className	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $className = implode('\\\\', array_filter($nameSegments));$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $msg = sprintf($/;"	v
_setupMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _setupMethod($fixture, $db, array $sources, $drop = true)$/;"	f
drop	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _setupMethod($fixture, $db, array $sources, $drop = true)$/;"	v
configName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $configName = $db->configName();$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $name = $fixture->name();$/;"	v
exists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $exists = in_array($name, $sources);$/;"	v
load	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function load($test)$/;"	f
fixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $fixtures = $test->codeFixtures;$/;"	v
createMethods	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $createMethods = function ($db, $fixtures) use ($test) {$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $methods = $db->methodSchemaCollection()->listMethods();$/;"	v
configName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $configName = $db->configName();$/;"	v
msg	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $msg = sprintf('Unable to insert fixtures for "%s" test case. %s', get_class($test), $e->getMessage());$/;"	v
on	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^     * Run a function on each connection and collection of fixtures.$/;"	f
_runOperation	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _runOperation($fixtures, $operation)$/;"	f
dbs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $dbs = $this->_fixtureConnections($fixtures);$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        foreach ($dbs as $connection => $fixtures) {$/;"	v
db	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $db = ConnectionManager::get($connection, false);$/;"	v
logQueries	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $logQueries = $db->logQueries();$/;"	v
_fixtureConnections	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    protected function _fixtureConnections($fixtures)$/;"	f
dbs	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $dbs = [];$/;"	v
fixture	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $fixture = $this->_loaded[$f];$/;"	v
unload	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function unload($test)$/;"	f
loadSingleMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loadSingleMethod($name, $db = null, $drop = true)$/;"	f
db	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function loadSingleMethod($name, $db = null, $drop = true)$/;"	v
fixture	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $fixture = $this->_fixtureMap[$name];$/;"	v
db	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $db = ConnectionManager::get($fixture->connection());$/;"	v
methods	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                $methods = $db->methodSchemaCollection()->listMethods();$/;"	v
shutDown	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function shutDown()$/;"	f
shutdown	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^        $shutdown = function ($db, $fixtures) {$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^            $connection = $db->configName();$/;"	v
index	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^                    $index = array_search($fixture, $this->_insertionMap[$connection]);$/;"	v
isFixtureSetup	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\Fixture\OracleFixtureManager.php	/^    public function isFixtureSetup($connection, $fixture)$/;"	f
TestCase	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\TestCase.php	/^abstract class TestCase extends CakeTestCase$/;"	c
responsible	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\TestCase.php	/^     * The class responsible for managing the creation, loading and removing of fixtures$/;"	c
methodFixtureManager	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\TestCase.php	/^    public $methodFixtureManager = null;$/;"	v
methodFixtureManager	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\TestCase.php	/^    public $methodFixtureManager = null;$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\TestCase.php	/^     * Each parameter is a code module name that corresponds to a fixture, i.e. package, procedure or function name.$/;"	f
loadMethodFixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\TestCase.php	/^    public function loadMethodFixtures()$/;"	f
args	.\vendor\cakedc\cakephp-oracle-driver.original.bad\src\TestSuite\TestCase.php	/^        $args = func_get_args();$/;"	v
findRoot	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\bootstrap.php	/^$findRoot = function () {$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\bootstrap.php	/^    $root = dirname(__DIR__);$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\bootstrap.php	/^    $root = dirname(dirname(__DIR__));$/;"	v
root	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\bootstrap.php	/^    $root = dirname(dirname(dirname(__DIR__)));$/;"	v
DS	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\bootstrap.php	/^    define('DS', DIRECTORY_SEPARATOR);$/;"	d
_define	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\bootstrap.php	/^function _define($name, $value)$/;"	f
TMP	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\bootstrap.php	/^$TMP = new \\Cake\\Filesystem\\Folder(TMP);$/;"	v
cache	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\bootstrap.php	/^$cache = [$/;"	v
CalcCodeFixture	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^class CalcCodeFixture extends MethodTestFixture$/;"	c
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^\/\/    public $type = 'package';$/;"	v
type	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^\/\/    public $type = 'package';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^    public $name = 'CALC';$/;"	v
name	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^    public $name = 'CALC';$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^    public $create = [];$/;"	v
create	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^    public $create = [];$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^    public $drop = 'drop package calc';$/;"	v
drop	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^    public $drop = 'drop package calc';$/;"	v
__construct	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^    public function __construct()$/;"	f
sum	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^                		function sum(a number, b number) return number;$/;"	f
sum	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\CodeFixture\CalcCodeFixture.php	/^                	function sum(a number, b number) return number is$/;"	f
ArticlesFixture	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesFixture.php	/^class ArticlesFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesFixture.php	/^    public $records = [$/;"	v
ArticlesTagsFixture	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesTagsFixture.php	/^class ArticlesTagsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesTagsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesTagsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesTagsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\ArticlesTagsFixture.php	/^    public $records = [$/;"	v
AuthorsFixture	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\AuthorsFixture.php	/^class AuthorsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\AuthorsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\AuthorsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\AuthorsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\AuthorsFixture.php	/^    public $records = [$/;"	v
TagsFixture	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\TagsFixture.php	/^class TagsFixture extends TestFixture$/;"	c
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\TagsFixture.php	/^    public $fields = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\TagsFixture.php	/^    public $fields = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\TagsFixture.php	/^    public $records = [$/;"	v
records	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\Fixture\TagsFixture.php	/^    public $records = [$/;"	v
QueryTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^class QueryTest extends CakeQueryTest$/;"	c
testSelectAliasedTables	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectAliasedTables()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['text' => FunctionsBuilder::toChar(new IdentifierExpression('a.body')), 'a.author_id'])$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['name' => 'b.name'])->from(['b' => 'authors'])$/;"	v
testSelectOrderBy	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrderBy()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['id' => 'asc'])->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc'])->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc'], true)->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->order(['title' => 'asc', 'published' => 'asc'], true)$/;"	v
driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $driver = $query->connection()->driver();$/;"	v
idField	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $idField = $driver->quoteIfAutoQuote('id');$/;"	v
expression	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expression = $query->newExpr(["MOD(($idField + :offset), 2)"]);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
testSelectGroup	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectGroup()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['total' => 'count(author_id)', 'author_id'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1], ['total' => '1', 'author_id' => 3]];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'name' => 'larry'], ['total' => 2, 'name' => 'mariano']];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
testSelectWhereUsingExpressionInField	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectWhereUsingExpressionInField()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
subquery	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $subquery = clone $query;$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
field	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^                $field = clone $exp;$/;"	v
testSQLFunctions	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSQLFunctions()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select($/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 6]];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select([$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
date	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $date = $result->fetchAll('assoc');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
d	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $d = $result->fetchAll('assoc')[0]['d'];$/;"	v
date1	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $date1 = date('U');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
created	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $created = new IdentifierExpression('created');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
testSelectOrderByString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrderByString()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
testSelectHaving	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'author_id' => 3]];$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->having(['count(author_id)' => 2], ['count(author_id)' => 'integer'], true)$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1]];$/;"	v
testSelectOrHaving	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectOrHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 1, 'author_id' => 3]];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1], ['total' => 1, 'author_id' => 3]];$/;"	v
testSelectAndHaving	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectAndHaving()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['total' => 2, 'author_id' => 1]];$/;"	v
testBind	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testBind()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
driver	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $driver = $query->connection()->driver();$/;"	v
createdField	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $createdField = $driver->quoteIfAutoQuote('created');$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $results = $query->select(['id', 'comment'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [['id' => '4', 'comment' => 'Fourth Comment for First Article']];$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $results = $query->select(['id', 'comment'])$/;"	v
testInsertExpressionValues	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testInsertExpressionValues()$/;"	f
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = (new Query($this->connection))->select('*')$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
subquery	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $subquery = new Query($this->connection);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = (new Query($this->connection))->select('*')$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $expected = [$/;"	v
testSelectDistinctON	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testSelectDistinctON()$/;"	f
testUnion	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testUnion()$/;"	f
union	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))->select(['id', 'title'])->from(['a' => 'articles']);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['id', FunctionsBuilder::toChar(new IdentifierExpression('comment'))])$/;"	v
rows	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $rows = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $rows2 = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows3	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $rows3 = $result->fetchAll();$/;"	v
testUnionOrderBy	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testUnionOrderBy()$/;"	f
testUnionAll	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^    public function testUnionAll()$/;"	f
union	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))->select(['id', 'title'])->from(['a' => 'articles']);$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $query = new Query($this->connection);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->select(['id', FunctionsBuilder::toChar(new IdentifierExpression('comment'))])$/;"	v
rows	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $rows = $result->fetchAll();$/;"	v
union	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $union = (new Query($this->connection))$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $result = $query->execute();$/;"	v
rows2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\QueryTest.php	/^        $rows2 = $result->fetchAll();$/;"	v
CollectionTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^class CollectionTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $codeFixtures = [$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $codeFixtures = [$/;"	v
instance	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^     * Oracle connection class instance.$/;"	c
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^    public $connection;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function setUp()$/;"	f
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^        $this->connection = ConnectionManager::get('test');$/;"	v
tearDown	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function tearDown()$/;"	f
testDescribeIncorrectMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function testDescribeIncorrectMethod()$/;"	f
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = new MethodsCollection($this->connection);$/;"	v
testDescribeCache	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^    public function testDescribeCache()$/;"	f
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = $this->connection->methodSchemaCollection();$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^        $method = $this->connection->methodSchemaCollection()->describe('CALC.SUM');$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^        $schema = $this->connection->methodSchemaCollection();$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^        $result = $schema->describe('CALC.SUM');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\CollectionTest.php	/^        $result = Cache::read('test_CALC_SUM', '_cake_method_');$/;"	v
MethodTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\MethodTest.php	/^class MethodTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\MethodTest.php	/^    public $codeFixtures = [$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\MethodTest.php	/^    public $codeFixtures = [$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\MethodTest.php	/^    public function setUp()$/;"	f
tearDown	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\MethodTest.php	/^    public function tearDown()$/;"	f
testConstructWithParameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\MethodTest.php	/^    public function testConstructWithParameters()$/;"	f
parameters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\MethodTest.php	/^        $parameters = [$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\MethodTest.php	/^        $method = new Method('CALC.SUM', $parameters);$/;"	v
TableTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\TableTest.php	/^class TableTest extends CakeTableTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\TableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\Database\Schema\TableTest.php	/^    public $fixtures = [$/;"	v
DatabaseSuite	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^class DatabaseSuite extends TestSuite$/;"	c
suite	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^    public static function suite()$/;"	f
suite	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^        $suite = new self('Database related tests');$/;"	v
count	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^    \/\/ public function count()$/;"	f
run	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^    public function run($/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^        PHPUnit_Framework_TestResult $result = null,$/;"	v
filter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^        $filter = false,$/;"	v
groups	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^        array $groups = [],$/;"	v
excludeGroups	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^        array $excludeGroups = [],$/;"	v
processIsolation	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^        $processIsolation = false$/;"	v
permutations	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^        $permutations = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\DatabaseSuite.php	/^            $result = parent::run($result, $filter, $groups, $excludeGroups, $processIsolation);$/;"	v
AssociationCollectionTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\AssociationCollectionTest.php	/^class AssociationCollectionTest extends CakeAssociationCollectionTest$/;"	c
AssociationProxyTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\AssociationProxyTest.php	/^class AssociationProxyTest extends CakeAssociationProxyTest$/;"	c
testUpdateAllFromAssociation	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\AssociationProxyTest.php	/^    public function testUpdateAllFromAssociation()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\AssociationProxyTest.php	/^        $articles = TableRegistry::get('articles');$/;"	v
comments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\AssociationProxyTest.php	/^        $comments = TableRegistry::get('comments');$/;"	v
changed	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\AssociationProxyTest.php	/^        $changed = $comments$/;"	v
AssociationTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\AssociationTest.php	/^class AssociationTest extends CakeAssociationTest$/;"	c
TreeBehaviorTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Behavior\TreeBehaviorTest.php	/^class TreeBehaviorTest extends CakeTreeBehaviorTest$/;"	c
BehaviorRegistryTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\BehaviorRegistryTest.php	/^class BehaviorRegistryTest extends CakeBehaviorRegistryTest$/;"	c
BehaviorTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\BehaviorTest.php	/^class BehaviorTest extends CakeBehaviorTest$/;"	c
BindingKeyTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\BindingKeyTest.php	/^class BindingKeyTest extends CakeBindingKeyTest$/;"	c
EagerLoaderTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\EagerLoaderTest.php	/^class EagerLoaderTest extends CakeEagerLoaderTest$/;"	c
EntityTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\EntityTest.php	/^class EntityTest extends CakeEntityTest$/;"	c
LocatorAwareTraitTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^class LocatorAwareTraitTest extends TestCase$/;"	c
setUp	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^    public function setUp()$/;"	f
subject	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $this->subject = $this->getObjectForTrait('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorAwareTrait');$/;"	v
testMethodLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^    public function testMethodLocator()$/;"	f
methodLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $methodLocator = $this->subject->methodLocator();$/;"	v
newLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $newLocator = $this->getMock('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorInterface');$/;"	v
subjectLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\LocatorAwareTraitTest.php	/^        $subjectLocator = $this->subject->methodLocator($newLocator);$/;"	v
is	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^ * Used to test correct class is instantiated when using $this->_locator->get();$/;"	c
MyUsersMethod	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^class MyUsersMethod extends Method$/;"	c
_method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_method = 'users';$/;"	v
_method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_method = 'users';$/;"	v
MethodLocatorTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^class MethodLocatorTest extends TestCase$/;"	c
_locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    protected $_locator;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function setUp()$/;"	f
_locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $this->_locator = new MethodLocator;$/;"	v
testConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfig()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $data = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config('Tests', $data);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config();$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $expected = ['Tests' => $data];$/;"	v
testConfigPlugin	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigPlugin()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $data = [$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->config('TestPlugin.TestPluginComments', $data);$/;"	v
testConfigOnDefinedInstance	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigOnDefinedInstance()$/;"	f
users	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $users = $this->_locator->get('Users');$/;"	v
testExists	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testExists()$/;"	f
testExistsPlugin	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testExistsPlugin()$/;"	f
testGet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGet()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Articles', [$/;"	v
result2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result2 = $this->_locator->get('Articles');$/;"	v
testGetFallbacks	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetFallbacks()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Droids');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('R2D2', ['className' => 'Droids']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('C3P0', ['className' => 'Droids', 'method' => 'rebels']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Funky.Chipmunks');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Awesome', ['className' => 'Funky.Monkies']);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Stuff', ['className' => 'CakeDC\\OracleDriver\\ORM\\Method']);$/;"	v
testGetWithConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithConfig()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Articles');$/;"	v
testGetWithConfigClassName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithConfigClassName()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('MyUsersMethodAlias');$/;"	v
testGetExistingWithConfigData	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetExistingWithConfigData()$/;"	f
users	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $users = $this->_locator->get('Users');$/;"	v
testGetWithSameOption	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGetWithSameOption()$/;"	f
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result = $this->_locator->get('Users', ['className' => 'CakeDC\\OracleDriver\\Test\\TestCase\\ORM\\Locator\\MyUsersMethod']);$/;"	v
result2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $result2 = $this->_locator->get('Users', ['className' => 'CakeDC\\OracleDriver\\Test\\TestCase\\ORM\\Locator\\MyUsersMethod']);$/;"	v
testGetWithConventions	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetWithConventions()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('articles');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Articles');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('authors');$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Authors');$/;"	v
testGetPlugin	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPlugin()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('TestPlugin.TestPluginComments');$/;"	v
second	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $second = $this->_locator->get('TestPlugin.TestPluginComments');$/;"	v
testGetMultiplePlugins	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetMultiplePlugins()$/;"	f
app	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
plugin1	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin1 = $this->_locator->get('TestPlugin.Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin1	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin1 = $this->_locator->get('TestPlugin.Comments');$/;"	v
app	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
testGetPluginWithClassNameOption	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPluginWithClassNameOption()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Comments', [$/;"	v
class	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $class = 'TestPlugin\\Model\\Method\\TestPluginCommentsMethod';$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $this->assertFalse($this->_locator->exists('TestPlugin.TestPluginComments'), 'Full class alias should not exist');$/;"	c
second	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $second = $this->_locator->get('Comments');$/;"	v
testGetPluginWithFullNamespaceName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testGetPluginWithFullNamespaceName()$/;"	f
class	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $class = 'TestPlugin\\Model\\Method\\TestPluginCommentsMethod';$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $method = $this->_locator->get('Comments', [$/;"	v
alias	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $this->assertFalse($this->_locator->exists('TestPlugin.TestPluginComments'), 'Full class alias should not exist');$/;"	c
testConfigAndBuild	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testConfigAndBuild()$/;"	f
map	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $map = $this->_locator->config();$/;"	v
connection	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $connection = ConnectionManager::get('test', false);$/;"	v
options	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $options = ['connection' => $connection];$/;"	v
map	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $map = $this->_locator->config();$/;"	v
schema	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $schema = ['id' => ['type' => 'rubbish']];$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $method = $this->_locator->get('users', ['method' => 'users']);$/;"	v
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $method = $this->_locator->get('users', ['className' => __NAMESPACE__ . '\\MyUsersMethod']);$/;"	v
testSet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testSet()$/;"	f
mock	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $mock = $this->getMock('CakeDC\\OracleDriver\\ORM\\Method');$/;"	v
testSetPlugin	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testSetPlugin()$/;"	f
mock	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $mock = $this->getMock('TestPlugin\\Model\\Method\\CommentsMethod');$/;"	v
testGenericInstances	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testGenericInstances()$/;"	f
foos	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $foos = $this->_locator->get('Foos');$/;"	v
bars	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $bars = $this->_locator->get('Bars');$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $expected = ['Foos' => $foos, 'Bars' => $bars];$/;"	v
testRemove	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^    public function testRemove()$/;"	f
first	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $first = $this->_locator->get('Comments');$/;"	v
second	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^        $second = $this->_locator->get('Comments');$/;"	v
testRemovePlugin	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/    public function testRemovePlugin()$/;"	f
app	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app = $this->_locator->get('Comments');$/;"	v
plugin	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
app2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $app2 = $this->_locator->get('Comments');$/;"	v
plugin2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin2 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
plugin3	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\Locator\MethodLocatorTest.php	/^\/\/        $plugin3 = $this->_locator->get('TestPluginTwo.Comments');$/;"	v
MarshallerTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MarshallerTest.php	/^class MarshallerTest extends CakeMarshallerTest$/;"	c
MethodRegistryTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^class MethodRegistryTest extends TestCase$/;"	c
_originalLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    protected $_originalLocator;$/;"	v
setUp	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function setUp()$/;"	f
_originalLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $this->_originalLocator = MethodRegistry::locator();$/;"	v
tearDown	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function tearDown()$/;"	f
_setMockLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    protected function _setMockLocator()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->getMock('CakeDC\\OracleDriver\\ORM\\Locator\\LocatorInterface');$/;"	v
testLocator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testLocator()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testLocatorDefault	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testLocatorDefault()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = MethodRegistry::locator();$/;"	v
testConfig	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testConfig()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testGet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testGet()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testSet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testSet()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $method = $this->getMock('CakeDC\\OracleDriver\\ORM\\Method');$/;"	v
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testRemove	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testRemove()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
testClear	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^    public function testClear()$/;"	f
locator	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodRegistryTest.php	/^        $locator = $this->_setMockLocator();$/;"	v
MethodTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^class MethodTest extends TestCase$/;"	c
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^    public $codeFixtures = ['plugin.CakeDC\/OracleDriver.Calc'];$/;"	v
codeFixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^    public $codeFixtures = ['plugin.CakeDC\/OracleDriver.Calc'];$/;"	v
testMethodCall	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^    public function testMethodCall()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^        $method = MethodRegistry::get('CalcSum', ['method' => 'CALC.SUM']);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^        $request = $method->newRequest(['A' => 5, 'B' => 10]);$/;"	v
testOutParameterMethodCall	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^    public function testOutParameterMethodCall()$/;"	f
method	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^        $method = MethodRegistry::get('CalcTwice', ['method' => 'CALC.TWICE']);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\MethodTest.php	/^        $request = $method->newRequest(['A' => 5]);$/;"	v
QueryRegressionTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^class QueryRegressionTest extends CakeQueryRegressionTest$/;"	c
testComplexOrderWithUnion	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testComplexOrderWithUnion()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Comments');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find();$/;"	v
inner	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $inner = $table->find()$/;"	v
inner2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $inner2 = $table->find()$/;"	v
order	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $order = $query->func()$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $results = $query->toArray();$/;"	v
testSaveWithExpressionProperty	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testSaveWithExpressionProperty()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $articles = TableRegistry::get('Articles');$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $article = $articles->newEntity();$/;"	v
testDeepBelongsToManySubqueryStrategy	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testDeepBelongsToManySubqueryStrategy()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Authors');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $result = $table->find()$/;"	v
testDeepBelongsToManySubqueryStrategy2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testDeepBelongsToManySubqueryStrategy2()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Authors');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $result = $table->Articles$/;"	v
testSubqueryInSelectExpression	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testSubqueryInSelectExpression()$/;"	f
testCountWithUnionQuery	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^    public function testCountWithUnionQuery()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find()$/;"	v
query2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query2 = $table->find()$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $fields = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query = $table->find()$/;"	v
query2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryRegressionTest.php	/^        $query2 = $table->find()$/;"	v
QueryTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^class QueryTest extends CakeQueryTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public $fixtures = [$/;"	v
testAutoFields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFields()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find('all')$/;"	v
testAutoFieldsWithAssociations	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFieldsWithAssociations()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find()$/;"	v
testAutoFieldsWithContainQueryBuilder	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testAutoFieldsWithContainQueryBuilder()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $result = $table->find()$/;"	v
testCountWithGroup	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testCountWithGroup()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $query = $table->find('all');$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $result = $query->count();$/;"	v
testNotMatchingNested	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testNotMatchingNested()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('authors');$/;"	v
articles	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $articles = $table->hasMany('articles');$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $expected = [$/;"	v
testLeftJoinWith	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testLeftJoinWith()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('authors');$/;"	v
orderFn	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $orderFn = function ($q) {$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $expected = [$/;"	v
fields	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $fields = ['total_articles', 'id', 'name'];$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $results = $table->find()$/;"	v
results	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $results = $table$/;"	v
testCustomBindings	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testCustomBindings()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $table = TableRegistry::get('Articles');$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        $query = $table->find()->where(['id >' => 1]);$/;"	v
e	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^            $e = new QueryExpression();$/;"	v
testNotMatchingDeep	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testNotMatchingDeep()$/;"	f
testLeftJoinWithSelect	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^    public function testLeftJoinWithSelect()$/;"	f
for	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\QueryTest.php	/^        \/\/ @todo implement Expression class for analytic functions$/;"	c
RequestTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^class RequestTest extends TestCase$/;"	c
testSetOneParamNoSetters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testSetOneParamNoSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testSetMultiplePropertiesNoSetters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testSetMultiplePropertiesNoSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testSetOneParamWithSetter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testSetOneParamWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\\\ORM\\Request', ['_setName']);$/;"	v
testMultipleWithSetter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testMultipleWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName', '_setStuff']);$/;"	v
testBypassSetters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testBypassSetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName', '_setStuff']);$/;"	v
testConstructor	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testConstructor()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
testGetNoGetters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testGetNoGetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'foo' => 'bar']);$/;"	v
testGetCustomGetters	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCustomGetters()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testGetCustomGettersAfterSet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCustomGettersAfterSet()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testGetCacheClearedByUnset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testGetCacheClearedByUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testMagicSet	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicSet()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testMagicSetWithSetter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicSetWithSetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setName']);$/;"	v
testMagicGetWithGetter	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicGetWithGetter()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
testIndirectModification	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testIndirectModification()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request;$/;"	v
testHas	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testHas()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getThings']);$/;"	v
testUnset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'bar']);$/;"	v
testUnsetMultiple	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testUnsetMultiple()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'bar', 'thing' => 2]);$/;"	v
testMagicIsset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicIsset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
testMagicUnset	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testMagicUnset()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['unsetProperty']);$/;"	v
testIssetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testIssetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['id' => 1, 'name' => 'Juan', 'foo' => null]);$/;"	v
testGetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testGetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['get']);$/;"	v
testSetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testSetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['set']);$/;"	v
testUnsetArrayAccess	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testUnsetArrayAccess()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['unsetProperty']);$/;"	v
testMethodCache	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testMethodCache()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setFoo', '_getBar']);$/;"	v
request2	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request2 = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_setBar']);$/;"	v
testSetGetLongProperyNames	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testSetGetLongProperyNames()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getVeryLongProperty', '_setVeryLongProperty']);$/;"	v
testJsonSerialize	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testJsonSerialize()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $data = ['name' => 'James', 'age' => 20, 'phones' => ['123', '457']];$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testIsNew	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testIsNew()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $data = [$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testConstructorWithMarkNew	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testConstructorWithMarkNew()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMockBuilder('\\CakeDC\\OracleDriver\\ORM\\Request')$/;"	v
testToArray	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testToArray()$/;"	f
data	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $data = ['name' => 'James', 'age' => 20, 'phones' => ['123', '457']];$/;"	v
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request($data);$/;"	v
testToArrayWithAccessor	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testToArrayWithAccessor()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = $this->getMock('\\CakeDC\\OracleDriver\\ORM\\Request', ['_getName']);$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $expected = ['name' => 'Jose', 'email' => 'mark@example.com'];$/;"	v
testToString	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testToString()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['foo' => 1, 'bar' => 2]);$/;"	v
testDebugInfo	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testDebugInfo()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request(['foo' => 'bar'], ['markClean' => true]);$/;"	v
result	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $result = $request->__debugInfo();$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $expected = [$/;"	v
testRepository	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^\/\/    public function testRepository()$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^\/\/        $request = new Request;$/;"	v
emptyNamesProvider	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function emptyNamesProvider()$/;"	f
testEmptyProperties	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testEmptyProperties($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request();$/;"	v
testSetEmptyPropertyName	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^    public function testSetEmptyPropertyName($property)$/;"	f
request	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RequestTest.php	/^        $request = new Request();$/;"	v
ResultSetTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\ResultSetTest.php	/^class ResultSetTest extends CakeResultSetTest$/;"	c
RulesCheckerIntegrationTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\RulesCheckerIntegrationTest.php	/^class RulesCheckerIntegrationTest extends CakeRulesCheckerIntegrationTest$/;"	c
TableRegistryTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableRegistryTest.php	/^class TableRegistryTest extends CakeTableRegistryTest$/;"	c
TableTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^class TableTest extends CakeTableTest$/;"	c
fixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^    public $fixtures = [$/;"	v
fixtures	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^    public $fixtures = [$/;"	v
testFindListNoHydration	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^    public function testFindListNoHydration()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $table = new Table([$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $query = $table$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['fields' => ['id', 'username']])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['groupField' => 'odd'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
testFindListHydrated	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^    public function testFindListHydrated()$/;"	f
table	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $table = new Table([$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['fields' => ['id', 'username']])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
query	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $query = $table->find('list', ['groupField' => 'odd'])$/;"	v
expected	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $expected = [$/;"	v
testSaveReplaceSaveStrategyAdding	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^    public function testSaveReplaceSaveStrategyAdding()$/;"	f
articles	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $articles = new Table([$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->newEntity([$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->save($article, ['associated' => ['Comments']]);$/;"	v
commentId	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $commentId = $article->comments[0]->id;$/;"	v
sizeComments	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $sizeComments = count($article->comments);$/;"	v
articleId	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $articleId = $article->id;$/;"	v
article	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableTest.php	/^        $article = $articles->save($article, ['associated' => ['Comments']]);$/;"	v
TableUuidTest	.\vendor\cakedc\cakephp-oracle-driver.original.bad\tests\TestCase\ORM\TableUuidTest.php	/^class TableUuidTest extends CakeTableUuidTest$/;"	c
release	.\vendor\cakephp\bake\docs\config\all.py	/^release = '1.x'$/;"	v
search_version	.\vendor\cakephp\bake\docs\config\all.py	/^search_version = 'bake-1'$/;"	v
version_name	.\vendor\cakephp\bake\docs\config\all.py	/^version_name = ''$/;"	v
project	.\vendor\cakephp\bake\docs\config\all.py	/^project = 'CakePHP Bake'$/;"	v
version_list	.\vendor\cakephp\bake\docs\config\all.py	/^version_list = [$/;"	v
languages	.\vendor\cakephp\bake\docs\config\all.py	/^languages = ['en', 'es', 'fr', 'ja', 'pt', 'ru']$/;"	v
branch	.\vendor\cakephp\bake\docs\config\all.py	/^branch = 'master'$/;"	v
version	.\vendor\cakephp\bake\docs\config\all.py	/^version = '1.x'$/;"	v
language	.\vendor\cakephp\bake\docs\config\all.py	/^language = 'en'$/;"	v
show_root_link	.\vendor\cakephp\bake\docs\config\all.py	/^show_root_link = True$/;"	v
repository	.\vendor\cakephp\bake\docs\config\all.py	/^repository = 'cakephp\/bake'$/;"	v
source_path	.\vendor\cakephp\bake\docs\config\all.py	/^source_path = 'docs\/'$/;"	v
hide_page_contents	.\vendor\cakephp\bake\docs\config\all.py	/^hide_page_contents = ('search', '404', 'contents')$/;"	v
sys	.\vendor\cakephp\bake\docs\en\conf.py	/^import sys, os$/;"	i
os	.\vendor\cakephp\bake\docs\en\conf.py	/^import sys, os$/;"	i
language	.\vendor\cakephp\bake\docs\en\conf.py	/^language = 'en'$/;"	v
sys	.\vendor\cakephp\bake\docs\es\conf.py	/^import sys, os$/;"	i
os	.\vendor\cakephp\bake\docs\es\conf.py	/^import sys, os$/;"	i
language	.\vendor\cakephp\bake\docs\es\conf.py	/^language = 'es'$/;"	v
sys	.\vendor\cakephp\bake\docs\fr\conf.py	/^import sys, os$/;"	i
os	.\vendor\cakephp\bake\docs\fr\conf.py	/^import sys, os$/;"	i
language	.\vendor\cakephp\bake\docs\fr\conf.py	/^language = 'fr'$/;"	v
sys	.\vendor\cakephp\bake\docs\ja\conf.py	/^import sys, os$/;"	i
os	.\vendor\cakephp\bake\docs\ja\conf.py	/^import sys, os$/;"	i
language	.\vendor\cakephp\bake\docs\ja\conf.py	/^language = 'ja'$/;"	v
sys	.\vendor\cakephp\bake\docs\pt\conf.py	/^import sys, os$/;"	i
os	.\vendor\cakephp\bake\docs\pt\conf.py	/^import sys, os$/;"	i
language	.\vendor\cakephp\bake\docs\pt\conf.py	/^language = 'pt'$/;"	v
sys	.\vendor\cakephp\bake\docs\ru\conf.py	/^import sys, os$/;"	i
os	.\vendor\cakephp\bake\docs\ru\conf.py	/^import sys, os$/;"	i
language	.\vendor\cakephp\bake\docs\ru\conf.py	/^language = 'ru'$/;"	v
for	.\vendor\cakephp\bake\src\Plugin.php	/^ * Plugin class for bake$/;"	c
Plugin	.\vendor\cakephp\bake\src\Plugin.php	/^class Plugin extends BasePlugin$/;"	c
name	.\vendor\cakephp\bake\src\Plugin.php	/^    protected $name = 'Bake';$/;"	v
name	.\vendor\cakephp\bake\src\Plugin.php	/^    protected $name = 'Bake';$/;"	v
routes	.\vendor\cakephp\bake\src\Plugin.php	/^    public function routes($routes)$/;"	f
bootstrap	.\vendor\cakephp\bake\src\Plugin.php	/^    public function bootstrap(PluginApplicationInterface $app)$/;"	f
BakeShell	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^class BakeShell extends Shell$/;"	c
connection	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    public $connection = 'default';$/;"	v
connection	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    public $connection = 'default';$/;"	v
startup	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    public function startup()$/;"	f
task	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $task = $this->_camelize($this->command);$/;"	v
connection	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $this->connection = $this->params['connection'];$/;"	v
interactive	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $this->interactive = false;$/;"	v
main	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    public function main()$/;"	f
args	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $args = $this->args;$/;"	v
args	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $args = implode($args, ' ');$/;"	v
connections	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $connections = ConnectionManager::configured();$/;"	v
names	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $names = [];$/;"	v
loadTasks	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    public function loadTasks()$/;"	f
tasks	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $tasks = [];$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $tasks = $this->_findTasks($/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $tasks = $this->_findTasks($tasks, APP, Configure::read('App.namespace'));$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $this->tasks = array_values($tasks);$/;"	v
_findTasks	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    protected function _findTasks($tasks, $path, $namespace, $prefix = null)$/;"	f
prefix	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    protected function _findTasks($tasks, $path, $namespace, $prefix = null)$/;"	v
candidates	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $candidates = $this->_findClassFiles($path, $namespace);$/;"	v
classes	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $classes = $this->_findTaskClasses($candidates);$/;"	v
name	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $name = substr($name, 0, -4);$/;"	v
fullName	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $fullName = ($prefix ? $prefix . '.' : '') . $name;$/;"	v
_findClassFiles	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    protected function _findClassFiles($path, $namespace)$/;"	f
iterator	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $iterator = new \\DirectoryIterator($path);$/;"	v
candidates	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $candidates = [];$/;"	v
name	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $name = $item->getBasename('.php');$/;"	v
_findTaskClasses	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    protected function _findTaskClasses($files)$/;"	f
classes	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $classes = [];$/;"	v
reflect	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $reflect = new \\ReflectionClass($className);$/;"	v
all	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    public function all($name = null)$/;"	f
connection	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $this->connection = $this->params['connection'];$/;"	v
allTables	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $allTables = collection([$name]);$/;"	v
filteredTables	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $filteredTables = $allTables;$/;"	v
filteredTables	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $filteredTables = collection($this->Model->listUnskipped());$/;"	v
tableName	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^                $tableName = $this->_camelize($tableName);$/;"	v
getOptionParser	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^    public function getOptionParser()$/;"	f
parser	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $parser = parent::getOptionParser();$/;"	v
creation	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            ' If run with no command line arguments, Bake guides the user through the class creation process.' .$/;"	c
parser	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        $parser = $this->_setCommonOptions($parser);$/;"	v
task	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^        foreach ($this->_taskMap as $task => $config) {$/;"	v
taskParser	.\vendor\cakephp\bake\src\Shell\BakeShell.php	/^            $taskParser = $this->{$task}->getOptionParser();$/;"	v
for	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^ * Base class for Bake Tasks.$/;"	c
BakeTask	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^class BakeTask extends Shell$/;"	c
tablePrefix	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public $tablePrefix = null;$/;"	v
tablePrefix	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public $tablePrefix = null;$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public $pathFragment;$/;"	v
plugin	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public $plugin = null;$/;"	v
plugin	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public $plugin = null;$/;"	v
connection	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public $connection = null;$/;"	v
connection	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public $connection = null;$/;"	v
startup	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public function startup()$/;"	f
initialize	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public function initialize()$/;"	f
connection	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^            $this->connection = $this->params['connection'];$/;"	v
_getPrefix	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    protected function _getPrefix()$/;"	f
prefix	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $prefix = $this->param('prefix');$/;"	v
parts	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $parts = explode('\/', $prefix);$/;"	v
getPath	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public function getPath()$/;"	f
path	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $path = APP . $this->pathFragment;$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^            $path = $this->_pluginPath($this->plugin) . 'src\/' . $this->pathFragment;$/;"	v
prefix	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $prefix = $this->_getPrefix();$/;"	v
main	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public function main()$/;"	f
parts	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^            $parts = explode('\/', $this->params['plugin']);$/;"	v
plugin	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^            $this->plugin = implode('\/', array_map([$this, '_camelize'], $parts));$/;"	v
connection	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^            $this->connection = $this->params['connection'];$/;"	v
callProcess	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public function callProcess($command)$/;"	f
descriptorSpec	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $descriptorSpec = [$/;"	v
process	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $process = proc_open($/;"	v
output	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $output = stream_get_contents($pipes[1]);$/;"	v
error	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $error = stream_get_contents($pipes[2]);$/;"	v
exit	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $exit = proc_close($process);$/;"	v
_getName	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    protected function _getName($name)$/;"	f
plugin	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^            $this->plugin = $this->params['plugin'] = $plugin;$/;"	v
_deleteEmptyFile	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    protected function _deleteEmptyFile($path)$/;"	f
File	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^        $File = new File($path);$/;"	v
method	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^     * This base class method sets up some commonly used options.$/;"	c
getOptionParser	.\vendor\cakephp\bake\src\Shell\Task\BakeTask.php	/^    public function getOptionParser()$/;"	f
to	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^ * Used by other tasks to generate templated output, Acts as an interface to BakeView$/;"	i
BakeTemplateTask	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^class BakeTemplateTask extends Shell$/;"	c
View	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^    public $View;$/;"	v
getView	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^    public function getView()$/;"	f
theme	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^        $theme = isset($this->params['theme']) ? $this->params['theme'] : '';$/;"	v
viewOptions	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^        $viewOptions = [$/;"	v
view	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^        $view = new BakeView(new Request(), new Response(), null, $viewOptions);$/;"	v
event	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^        $event = new Event('Bake.initialize', $view);$/;"	v
view	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^        $view = $event->getSubject();$/;"	v
View	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^        $this->View = $view;$/;"	v
generate	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^    public function generate($template, $vars = null)$/;"	f
vars	.\vendor\cakephp\bake\src\Shell\Task\BakeTemplateTask.php	/^    public function generate($template, $vars = null)$/;"	v
BehaviorTask	.\vendor\cakephp\bake\src\Shell\Task\BehaviorTask.php	/^class BehaviorTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\BehaviorTask.php	/^    public $pathFragment = 'Model\/Behavior\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\BehaviorTask.php	/^    public $pathFragment = 'Model\/Behavior\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\BehaviorTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\BehaviorTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\BehaviorTask.php	/^    public function template()$/;"	f
CellTask	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^class CellTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public $pathFragment = 'View\/Cell\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public $pathFragment = 'View\/Cell\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public function template()$/;"	f
templateData	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public function templateData()$/;"	f
prefix	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^        $prefix = $this->_getPrefix();$/;"	v
prefix	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^            $prefix = '\\\\' . str_replace('\/', '\\\\', $prefix);$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^        $namespace = Configure::read('App.namespace');$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^            $namespace = $this->_pluginNamespace($this->plugin);$/;"	v
and	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^     * Bake the Cell class and template file.$/;"	c
bake	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public function bake($name)$/;"	f
bakeTemplate	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public function bakeTemplate($name)$/;"	f
restore	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^        $restore = $this->pathFragment;$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^        $this->pathFragment = 'Template\/Cell\/';$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^        $path = $this->getPath();$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^        $this->pathFragment = $restore;$/;"	v
getOptionParser	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^    public function getOptionParser()$/;"	f
parser	.\vendor\cakephp\bake\src\Shell\Task\CellTask.php	/^        $parser = parent::getOptionParser();$/;"	v
CommandTask	.\vendor\cakephp\bake\src\Shell\Task\CommandTask.php	/^class CommandTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\CommandTask.php	/^    public $pathFragment = 'Command\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\CommandTask.php	/^    public $pathFragment = 'Command\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\CommandTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\CommandTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\CommandTask.php	/^    public function template()$/;"	f
ComponentTask	.\vendor\cakephp\bake\src\Shell\Task\ComponentTask.php	/^class ComponentTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ComponentTask.php	/^    public $pathFragment = 'Controller\/Component\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ComponentTask.php	/^    public $pathFragment = 'Controller\/Component\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\ComponentTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\ComponentTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\ComponentTask.php	/^    public function template()$/;"	f
for	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^ * Task class for creating and updating controller files.$/;"	c
ControllerTask	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^class ControllerTask extends BakeTask$/;"	c
tasks	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public $tasks = [$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public $tasks = [$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public $pathFragment = 'Controller\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public $pathFragment = 'Controller\/';$/;"	v
main	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function main($name = null)$/;"	f
name	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $name = $this->_getName($name);$/;"	v
controller	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $controller = $this->_camelize($name);$/;"	v
all	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function all()$/;"	f
tables	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $tables = $this->listAll();$/;"	v
bake	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function bake($controllerName)$/;"	f
for	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $this->out("\\n" . sprintf('Baking controller class for %s...', $controllerName), 1, Shell::QUIET);$/;"	c
actions	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $actions = [];$/;"	v
actions	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $actions = ['index', 'view', 'add', 'edit', 'delete'];$/;"	v
actions	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $actions = array_map('trim', explode(',', $this->param('actions')));$/;"	v
actions	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $actions = array_filter($actions);$/;"	v
helpers	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $helpers = $this->getHelpers();$/;"	v
components	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $components = $this->getComponents();$/;"	v
prefix	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $prefix = $this->_getPrefix();$/;"	v
prefix	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $prefix = '\\\\' . str_replace('\/', '\\\\', $prefix);$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $namespace = Configure::read('App.namespace');$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $namespace = $this->_pluginNamespace($this->plugin);$/;"	v
currentModelName	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $currentModelName = $controllerName;$/;"	v
plugin	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $plugin = $this->plugin;$/;"	v
modelObj	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $modelObj = TableRegistry::getTableLocator()->get($plugin . $currentModelName);$/;"	v
modelObj	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $modelObj = TableRegistry::getTableLocator()->get($plugin . $currentModelName, [$/;"	v
pluralName	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $pluralName = $this->_variableName($currentModelName);$/;"	v
singularName	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $singularName = $this->_singularName($currentModelName);$/;"	v
singularHumanName	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $singularHumanName = $this->_singularHumanName($controllerName);$/;"	v
pluralHumanName	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $pluralHumanName = $this->_variableName($controllerName);$/;"	v
defaultModel	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $defaultModel = sprintf('%s\\Model\\Table\\%sTable', $namespace, $controllerName);$/;"	v
defaultModel	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $defaultModel = null;$/;"	v
entityClassName	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $entityClassName = $this->_entityName($modelObj->getAlias());$/;"	v
data	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $data = compact($/;"	v
out	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $out = $this->bakeController($controllerName, $data);$/;"	v
bakeController	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function bakeController($controllerName, array $data)$/;"	f
contents	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $contents = $this->BakeTemplate->generate('Controller\/controller');$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $path = $this->getPath();$/;"	v
filename	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $filename = $path . $controllerName . 'Controller.php';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^     * @param string $className Controller class name$/;"	c
bakeTest	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function bakeTest($className)$/;"	f
getComponents	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function getComponents()$/;"	f
components	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $components = [];$/;"	v
components	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $components = explode(',', $this->params['components']);$/;"	v
components	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $components = array_values(array_filter(array_map('trim', $components)));$/;"	v
getHelpers	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function getHelpers()$/;"	f
helpers	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $helpers = [];$/;"	v
helpers	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $helpers = explode(',', $this->params['helpers']);$/;"	v
helpers	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^            $helpers = array_values(array_filter(array_map('trim', $helpers)));$/;"	v
listAll	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function listAll()$/;"	f
getOptionParser	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^    public function getOptionParser()$/;"	f
parser	.\vendor\cakephp\bake\src\Shell\Task\ControllerTask.php	/^        $parser = parent::getOptionParser();$/;"	v
for	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^ * Task class for creating and updating fixtures files.$/;"	c
FixtureTask	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^class FixtureTask extends BakeTask$/;"	c
tasks	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public $tasks = [$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public $tasks = [$/;"	v
getPath	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public function getPath()$/;"	f
dir	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $dir = 'Fixture\/';$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $path = defined('TESTS') ? TESTS . $dir : ROOT . DS . 'tests' . DS . $dir;$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $path = $this->_pluginPath($this->plugin) . 'tests\/' . $dir;$/;"	v
getOptionParser	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public function getOptionParser()$/;"	f
parser	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $parser = parent::getOptionParser();$/;"	v
parser	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $parser = $parser->setDescription($/;"	v
main	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public function main($name = null)$/;"	f
name	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $name = $this->_getName($name);$/;"	v
table	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $table = null;$/;"	v
table	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $table = $this->params['table'];$/;"	v
model	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $model = $this->_camelize($name);$/;"	v
all	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public function all()$/;"	f
tables	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $tables = $this->Model->listUnskipped();$/;"	v
bake	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public function bake($model, $useTable = null)$/;"	f
useTable	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public function bake($model, $useTable = null)$/;"	v
table	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $table = $schema = $records = $import = $modelImport = null;$/;"	v
useTable	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $useTable = Inflector::tableize($model);$/;"	v
table	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $table = $useTable;$/;"	v
importBits	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $importBits = [];$/;"	v
modelImport	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $modelImport = true;$/;"	v
import	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $import = sprintf("[%s]", implode(', ', $importBits));$/;"	v
data	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $data = $this->readSchema($model, $useTable);$/;"	v
useTable	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $useTable = Inflector::underscore($model);$/;"	v
table	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $table = $useTable;$/;"	v
data	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $data = $this->readSchema($model, $useTable);$/;"	v
schema	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $schema = $this->_generateSchema($data);$/;"	v
recordCount	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $recordCount = 1;$/;"	v
recordCount	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                $recordCount = $this->params['count'];$/;"	v
records	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $records = $this->_makeRecordString($this->_generateRecords($data, $recordCount));$/;"	v
records	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $records = $this->_makeRecordString($this->_getRecordsFromTable($model, $useTable));$/;"	v
readSchema	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public function readSchema($name, $table)$/;"	f
connection	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $connection = ConnectionManager::get($this->connection);$/;"	v
model	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $model = TableRegistry::getTableLocator()->get($name);$/;"	v
model	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $model = TableRegistry::getTableLocator()->get($name, [$/;"	v
generateFixtureFile	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    public function generateFixtureFile($model, array $otherVars)$/;"	f
defaults	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $defaults = [$/;"	v
vars	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $vars = $otherVars + $defaults;$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $path = $this->getPath();$/;"	v
filename	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $filename = $vars['name'] . 'Fixture.php';$/;"	v
content	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $content = $this->BakeTemplate->generate('tests\/fixture');$/;"	v
emptyFile	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $emptyFile = $path . 'empty';$/;"	v
_generateSchema	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    protected function _generateSchema(TableSchema $table)$/;"	f
cols	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $cols = $indexes = $constraints = [];$/;"	v
fieldData	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $fieldData = $table->getColumn($field);$/;"	v
properties	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $properties = implode(', ', $this->_values($fieldData));$/;"	v
fieldData	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $fieldData = $table->getIndex($index);$/;"	v
properties	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $properties = implode(', ', $this->_values($fieldData));$/;"	v
fieldData	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $fieldData = $table->getConstraint($index);$/;"	v
properties	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $properties = implode(', ', $this->_values($fieldData));$/;"	v
options	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $options = $this->_values($table->getOptions());$/;"	v
content	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $content = implode("\\n", $cols) . "\\n";$/;"	v
option	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                $option = '            ' . $option;$/;"	v
_values	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    protected function _values($values)$/;"	f
vals	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $vals = [];$/;"	v
key	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        foreach ($values as $key => $val) {$/;"	v
val	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                $val = var_export($val, true);$/;"	v
val	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                    $val = 'null';$/;"	v
_generateRecords	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    protected function _generateRecords(TableSchema $table, $recordCount = 1)$/;"	f
recordCount	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    protected function _generateRecords(TableSchema $table, $recordCount = 1)$/;"	v
records	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $records = [];$/;"	v
record	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $record = [];$/;"	v
fieldInfo	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                $fieldInfo = $table->getColumn($field);$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                $insert = '';$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = $i + 1.5;$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = $i + 1;$/;"	v
isPrimary	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $isPrimary = in_array($field, $table->primaryKey());$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                            $insert = Text::uuid();$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                            $insert = "Lorem ipsum dolor sit amet";$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                                $insert = substr($insert, 0, (int)$fieldInfo['length'] > 2 ? (int)$fieldInfo['length'] - 2 : (int)$fieldInfo['length']);$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = time();$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = date('Y-m-d H:i:s');$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = date('Y-m-d');$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = date('H:i:s');$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = 1;$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = "Lorem ipsum dolor sit amet, aliquet feugiat.";$/;"	v
insert	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                        $insert = Text::uuid();$/;"	v
_makeRecordString	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    protected function _makeRecordString($records)$/;"	f
out	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $out = "[\\n";$/;"	v
values	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $values = [];$/;"	v
field	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            foreach ($record as $field => $value) {$/;"	v
value	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                    $value = $value->format('Y-m-d H:i:s');$/;"	v
val	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                $val = var_export($value, true);$/;"	v
val	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^                    $val = 'null';$/;"	v
_getRecordsFromTable	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    protected function _getRecordsFromTable($modelName, $useTable = null)$/;"	f
useTable	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^    protected function _getRecordsFromTable($modelName, $useTable = null)$/;"	v
recordCount	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $recordCount = (isset($this->params['count']) ? $this->params['count'] : 10);$/;"	v
conditions	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $conditions = (isset($this->params['conditions']) ? $this->params['conditions'] : '1=1');$/;"	v
model	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $model = TableRegistry::getTableLocator()->get($modelName);$/;"	v
model	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^            $model = TableRegistry::getTableLocator()->get($modelName, [$/;"	v
records	.\vendor\cakephp\bake\src\Shell\Task\FixtureTask.php	/^        $records = $model->find('all')$/;"	v
FormTask	.\vendor\cakephp\bake\src\Shell\Task\FormTask.php	/^class FormTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\FormTask.php	/^    public $pathFragment = 'Form\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\FormTask.php	/^    public $pathFragment = 'Form\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\FormTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\FormTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\FormTask.php	/^    public function template()$/;"	f
HelperTask	.\vendor\cakephp\bake\src\Shell\Task\HelperTask.php	/^class HelperTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\HelperTask.php	/^    public $pathFragment = 'View\/Helper\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\HelperTask.php	/^    public $pathFragment = 'View\/Helper\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\HelperTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\HelperTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\HelperTask.php	/^    public function template()$/;"	f
MailerTask	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^class MailerTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^    public $pathFragment = 'Mailer\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^    public $pathFragment = 'Mailer\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^    public function template()$/;"	f
and	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^     * Bake the Mailer class and html\/text layout files.$/;"	c
bake	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^    public function bake($name)$/;"	f
bakeLayouts	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^    public function bakeLayouts($name)$/;"	f
restore	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^        $restore = $this->pathFragment;$/;"	v
layoutsPath	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^        $layoutsPath = implode(DS, ['Template', 'Layout', 'Email']);$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^            $this->pathFragment = implode(DS, [$layoutsPath, $type, Inflector::underscore($name) . '.ctp']);$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^            $path = $this->getPath();$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\MailerTask.php	/^        $this->pathFragment = $restore;$/;"	v
MiddlewareTask	.\vendor\cakephp\bake\src\Shell\Task\MiddlewareTask.php	/^class MiddlewareTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\MiddlewareTask.php	/^    public $pathFragment = 'Middleware\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\MiddlewareTask.php	/^    public $pathFragment = 'Middleware\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\MiddlewareTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\MiddlewareTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\MiddlewareTask.php	/^    public function template()$/;"	f
for	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^ * Task class for generating model files.$/;"	c
ModelTask	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^class ModelTask extends BakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public $pathFragment = 'Model\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public $pathFragment = 'Model\/';$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public $tasks = [$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public $tasks = [$/;"	v
skipTables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public $skipTables = ['i18n', 'cake_sessions', 'phinxlog', 'users_phinxlog'];$/;"	v
skipTables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public $skipTables = ['i18n', 'cake_sessions', 'phinxlog', 'users_phinxlog'];$/;"	v
_tables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected $_tables = [];$/;"	v
_tables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected $_tables = [];$/;"	v
_modelNames	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected $_modelNames = [];$/;"	v
_modelNames	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected $_modelNames = [];$/;"	v
_validations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected $_validations = [];$/;"	v
_validations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected $_validations = [];$/;"	v
main	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function main($name = null)$/;"	f
name	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $name = $this->_getName($name);$/;"	v
bake	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function bake($name)$/;"	f
table	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $table = $this->getTable($name);$/;"	v
tableObject	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $tableObject = $this->getTableObject($name, $table);$/;"	v
data	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $data = $this->getTableContext($tableObject, $table, $name);$/;"	v
getTableContext	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getTableContext($tableObject, $table, $name)$/;"	f
associations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $associations = $this->getAssociations($tableObject);$/;"	v
associationInfo	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $associationInfo = $this->getAssociationInfo($tableObject);$/;"	v
primaryKey	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $primaryKey = $this->getPrimaryKey($tableObject);$/;"	v
displayField	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $displayField = $this->getDisplayField($tableObject);$/;"	v
propertySchema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $propertySchema = $this->getEntityPropertySchema($tableObject);$/;"	v
fields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $fields = $this->getFields($tableObject);$/;"	v
validation	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $validation = $this->getValidation($tableObject, $associations);$/;"	v
rulesChecker	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $rulesChecker = $this->getRules($tableObject, $associations);$/;"	v
behaviors	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $behaviors = $this->getBehaviors($tableObject);$/;"	v
connection	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $connection = $this->connection;$/;"	v
hidden	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $hidden = $this->getHiddenFields($tableObject);$/;"	v
all	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function all()$/;"	f
tables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $tables = $this->listUnskipped();$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^     * Get a model object for a class name.$/;"	c
you	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^     * @param string $className Name of class you want model to be.$/;"	c
getTableObject	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getTableObject($className, $table)$/;"	f
plugin	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $plugin = $this->param('plugin');$/;"	v
className	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $className = $plugin . '.' . $className;$/;"	v
getAssociations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getAssociations(Table $table)$/;"	f
associations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $associations = [$/;"	v
primary	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $primary = $table->getPrimaryKey();$/;"	v
associations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $associations = $this->findBelongsTo($table, $associations);$/;"	v
associations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $associations = $this->findHasMany($table, $associations);$/;"	v
associations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $associations = $this->findBelongsToMany($table, $associations);$/;"	v
cache	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^     * Composer's class cache prevents us from loading the$/;"	c
applyAssociations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function applyAssociations($model, $associations)$/;"	f
type	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        foreach ($associations as $type => $assocs) {$/;"	v
alias	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $alias = $assoc['alias'];$/;"	v
getAssociationInfo	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getAssociationInfo(Table $table)$/;"	f
info	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $info = [];$/;"	v
appNamespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $appNamespace = Configure::read('App.namespace');$/;"	v
tableClass	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $tableClass = get_class($association->getTarget());$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $namespace = $appNamespace;$/;"	v
className	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $className = $association->getClassName();$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                        $namespace = $plugin;$/;"	v
className	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                    $className = $association->getTarget()->getAlias();$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $namespace = str_replace('\/', '\\\\', trim($namespace, '\\\\'));$/;"	v
tableClass	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $tableClass = $namespace . '\\Model\\Table\\\\' . $className . 'Table';$/;"	v
findBelongsTo	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function findBelongsTo($model, array $associations)$/;"	f
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $model->getSchema();$/;"	v
className	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $className = ($this->plugin) ? $this->plugin . '.' . $model->getAlias() : $model->getAlias();$/;"	v
assoc	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $assoc = [$/;"	v
tmpModelName	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $tmpModelName = $this->_modelNameFromKey($fieldName);$/;"	v
found	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                    $found = $this->findTableReferencedBy($schema, $fieldName);$/;"	v
tmpModelName	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                        $tmpModelName = Inflector::camelize($found);$/;"	v
assoc	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $assoc = [$/;"	v
findTableReferencedBy	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function findTableReferencedBy($schema, $keyField)$/;"	f
constraintInfo	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $constraintInfo = $schema->getConstraint($constraint);$/;"	v
length	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $length = mb_strlen($this->tablePrefix);$/;"	v
findHasMany	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function findHasMany($model, array $associations)$/;"	f
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $model->getSchema();$/;"	v
primaryKey	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $primaryKey = $schema->primaryKey();$/;"	v
tableName	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $tableName = $schema->name();$/;"	v
foreignKey	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $foreignKey = $this->_modelKey($tableName);$/;"	v
tables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $tables = $this->listAll();$/;"	v
otherModel	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $otherModel = $this->getTableObject($this->_camelize($otherTableName), $otherTableName);$/;"	v
otherSchema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $otherSchema = $otherModel->getSchema();$/;"	v
pregTableName	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $pregTableName = preg_quote($tableName, '\/');$/;"	v
pregPattern	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $pregPattern = "\/^{$pregTableName}_|_{$pregTableName}$\/";$/;"	v
possibleHABTMTargetTable	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $possibleHABTMTargetTable = preg_replace($pregPattern, '', $otherTableName);$/;"	v
assoc	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $assoc = false;$/;"	v
fieldName	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                if (!in_array($fieldName, $primaryKey) && $fieldName === $foreignKey) {$/;"	v
assoc	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                    $assoc = [$/;"	v
fieldName	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                } elseif ($otherTableName === $tableName && $fieldName === 'parent_id') {$/;"	v
className	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                    $className = ($this->plugin) ? $this->plugin . '.' . $model->getAlias() : $model->getAlias();$/;"	v
assoc	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                    $assoc = [$/;"	v
findBelongsToMany	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function findBelongsToMany($model, array $associations)$/;"	f
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $model->getSchema();$/;"	v
tableName	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $tableName = $schema->name();$/;"	v
foreignKey	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $foreignKey = $this->_modelKey($tableName);$/;"	v
tables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $tables = $this->listAll();$/;"	v
assocTable	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $assocTable = null;$/;"	v
offset	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $offset = strpos($otherTableName, $tableName . '_');$/;"	v
otherOffset	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $otherOffset = strpos($otherTableName, '_' . $tableName);$/;"	v
assocTable	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $assocTable = substr($otherTableName, strlen($tableName . '_'));$/;"	v
assocTable	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $assocTable = substr($otherTableName, 0, $otherOffset);$/;"	v
habtmName	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $habtmName = $this->_camelize($assocTable);$/;"	v
assoc	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $assoc = [$/;"	v
getDisplayField	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getDisplayField($model)$/;"	f
getPrimaryKey	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getPrimaryKey($model)$/;"	f
fields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $fields = explode(',', $this->params['primary-key']);$/;"	v
for	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^     * `association` type it's the FQN of the entity class for the$/;"	c
getEntityPropertySchema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getEntityPropertySchema(Table $model)$/;"	f
properties	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $properties = [];$/;"	v
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $model->getSchema();$/;"	v
columnSchema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $columnSchema = $schema->getColumn($column);$/;"	v
entityClass	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $entityClass = '\\\\' . ltrim($association->getTarget()->getEntityClass(), '\\\\');$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $namespace = Configure::read('App.namespace');$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                    $namespace = $plugin;$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $namespace = str_replace('\/', '\\\\', trim($namespace, '\\\\'));$/;"	v
entityClass	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $entityClass = $this->_entityName($association->getTarget()->getAlias());$/;"	v
entityClass	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $entityClass = '\\\\' . $namespace . '\\Model\\Entity\\\\' . $entityClass;$/;"	v
getFields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getFields($table)$/;"	f
fields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $fields = explode(',', $this->params['fields']);$/;"	v
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $table->getSchema();$/;"	v
fields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $fields = $schema->columns();$/;"	v
primaryKey	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $primaryKey = $schema->primaryKey();$/;"	v
getHiddenFields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getHiddenFields($model)$/;"	f
fields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $fields = explode(',', $this->params['hidden']);$/;"	v
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $model->getSchema();$/;"	v
columns	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $columns = $schema->columns();$/;"	v
whitelist	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $whitelist = ['token', 'password', 'passwd'];$/;"	v
getValidation	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getValidation($model, $associations = [])$/;"	f
associations	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getValidation($model, $associations = [])$/;"	v
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $model->getSchema();$/;"	v
fields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $fields = $schema->columns();$/;"	v
validate	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $validate = [];$/;"	v
primaryKey	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $primaryKey = $schema->primaryKey();$/;"	v
foreignKeys	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $foreignKeys = [];$/;"	v
field	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $field = $schema->getColumn($fieldName);$/;"	v
validation	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $validation = $this->fieldValidation($schema, $fieldName, $field, $primaryKey);$/;"	v
fieldValidation	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function fieldValidation($schema, $fieldName, array $metaData, $primaryKey)$/;"	f
ignoreFields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $ignoreFields = ['lft', 'rght', 'created', 'modified', 'updated'];$/;"	v
rules	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $rules = [];$/;"	v
validation	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $validation = [];$/;"	v
rule	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        foreach ($rules as $rule => $args) {$/;"	v
constraint	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $constraint = $schema->getConstraint($constraint);$/;"	v
notDatetime	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $notDatetime = !in_array($metaData['type'], ['datetime', 'timestamp', 'date', 'time']);$/;"	v
getEmptyMethod	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected function getEmptyMethod($fieldName, array $metaData, $prefix = 'allow')$/;"	f
prefix	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected function getEmptyMethod($fieldName, array $metaData, $prefix = 'allow')$/;"	v
getRules	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getRules($model, array $associations)$/;"	f
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $model->getSchema();$/;"	v
fields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $fields = $schema->columns();$/;"	v
rules	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $rules = [];$/;"	v
constraint	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $constraint = $schema->getConstraint($name);$/;"	v
getBehaviors	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getBehaviors($model)$/;"	f
behaviors	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $behaviors = [];$/;"	v
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $model->getSchema();$/;"	v
fields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $fields = $schema->columns();$/;"	v
counterCache	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $counterCache = $this->getCounterCache($model);$/;"	v
getCounterCache	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getCounterCache($model)$/;"	f
belongsTo	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $belongsTo = $this->findBelongsTo($model, ['belongsTo' => []]);$/;"	v
counterCache	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $counterCache = [];$/;"	v
otherAlias	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $otherAlias = $otherTable['alias'];$/;"	v
otherModel	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $otherModel = $this->getTableObject($this->_camelize($otherAlias), Inflector::underscore($otherAlias));$/;"	v
otherSchema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^                $otherSchema = $otherModel->getSchema();$/;"	v
otherFields	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $otherFields = $otherSchema->columns();$/;"	v
alias	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $alias = $model->getAlias();$/;"	v
field	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $field = Inflector::singularize(Inflector::underscore($alias)) . '_count';$/;"	v
bakeEntity	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function bakeEntity($model, array $data = [])$/;"	f
data	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function bakeEntity($model, array $data = [])$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $name = $this->_entityName($model->getAlias());$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $namespace = Configure::read('App.namespace');$/;"	v
pluginPath	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $pluginPath = '';$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $namespace = $this->_pluginNamespace($this->plugin);$/;"	v
pluginPath	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $pluginPath = $this->plugin . '.';$/;"	v
out	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $out = $this->BakeTemplate->generate('Model\/entity');$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $path = $this->getPath();$/;"	v
filename	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $filename = $path . 'Entity' . DS . $name . '.php';$/;"	v
for	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $this->out("\\n" . sprintf('Baking entity class for %s...', $name), 1, Shell::QUIET);$/;"	c
emptyFile	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $emptyFile = $path . 'Entity' . DS . 'empty';$/;"	v
bakeTable	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function bakeTable($model, array $data = [])$/;"	f
data	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function bakeTable($model, array $data = [])$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $namespace = Configure::read('App.namespace');$/;"	v
pluginPath	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $pluginPath = '';$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^            $namespace = $this->_pluginNamespace($this->plugin);$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $name = $model->getAlias();$/;"	v
entity	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $entity = $this->_entityName($model->getAlias());$/;"	v
out	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $out = $this->BakeTemplate->generate('Model\/table');$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $path = $this->getPath();$/;"	v
filename	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $filename = $path . 'Table' . DS . $name . 'Table.php';$/;"	v
for	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $this->out("\\n" . sprintf('Baking table class for %s...', $name), 1, Shell::QUIET);$/;"	c
emptyFile	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $emptyFile = $path . 'Table' . DS . 'empty';$/;"	v
listAll	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function listAll()$/;"	f
_modelNames	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $this->_modelNames = [];$/;"	v
_tables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $this->_tables = $this->_getAllTables();$/;"	v
listUnskipped	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function listUnskipped()$/;"	f
_getPrefix	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected function _getPrefix()$/;"	f
_getAllTables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    protected function _getAllTables()$/;"	f
db	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $db = ConnectionManager::get($this->connection);$/;"	v
schema	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $schema = $db->getSchemaCollection();$/;"	v
tables	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $tables = $schema->listTables();$/;"	v
getTable	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getTable($name)$/;"	f
getOptionParser	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function getOptionParser()$/;"	f
parser	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^        $parser = parent::getOptionParser();$/;"	v
to	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^     * @param string $className Name of class to bake fixture for$/;"	c
bakeFixture	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function bakeFixture($className, $useTable = null)$/;"	f
useTable	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function bakeFixture($className, $useTable = null)$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^     * @param string $className Model class name$/;"	c
bakeTest	.\vendor\cakephp\bake\src\Shell\Task\ModelTask.php	/^    public function bakeTest($className)$/;"	f
PluginTask	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^class PluginTask extends BakeTask$/;"	c
tasks	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public $tasks = [$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public $tasks = [$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public $path;$/;"	v
initialize	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public function initialize()$/;"	f
path	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $this->path = current(App::path('Plugin'));$/;"	v
main	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public function main($name = null)$/;"	f
parts	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $parts = explode('\/', $name);$/;"	v
plugin	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $plugin = implode('\/', array_map([$this, '_camelize'], $parts));$/;"	v
pluginPath	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $pluginPath = $this->_pluginPath($plugin);$/;"	v
bake	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public function bake($plugin)$/;"	f
pathOptions	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $pathOptions = App::path('Plugin');$/;"	v
looksGood	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $looksGood = $this->in('Look okay?', ['y', 'n', 'q'], 'y');$/;"	v
emptyFile	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $emptyFile = $this->path . 'empty';$/;"	v
_modifyApplication	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    protected function _modifyApplication($plugin)$/;"	f
application	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $application = new File(ROOT . DS . 'src' . DS . 'Application.php', false);$/;"	v
_generateFiles	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    protected function _generateFiles($pluginName, $path)$/;"	f
namespace	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $namespace = str_replace('\/', '\\\\', $pluginName);$/;"	v
baseNamespace	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $baseNamespace = Configure::read('App.namespace');$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $name = $pluginName;$/;"	v
vendor	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $vendor = 'your-name-here';$/;"	v
package	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $package = $vendor . '\/' . $name;$/;"	v
root	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $root = $path . $pluginName . DS;$/;"	v
paths	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $paths = [];$/;"	v
paths	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $paths = array_merge($paths, Configure::read('App.paths.templates'));$/;"	v
templatesPath	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $templatesPath = array_shift($paths) . 'Bake\/Plugin';$/;"	v
templatesDir	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $templatesDir = new Folder($templatesPath);$/;"	v
templates	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $templates = $templatesDir->findRecursive('.*\\.(twig|ctp)');$/;"	v
template	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $template = substr($template, strrpos($template, 'Plugin' . DIRECTORY_SEPARATOR) + 7, -4);$/;"	v
template	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $template = rtrim($template, '.');$/;"	v
_generateFile	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    protected function _generateFile($template, $root)$/;"	f
out	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $out = $this->BakeTemplate->generate('Plugin\/' . $template);$/;"	v
_modifyAutoloader	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    protected function _modifyAutoloader($plugin, $path)$/;"	f
file	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $file = $this->_rootComposerFilePath();$/;"	v
autoloadPath	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $autoloadPath = str_replace(ROOT, '.', $this->path);$/;"	v
autoloadPath	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $autoloadPath = str_replace('\\\\', '\/', $autoloadPath);$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $namespace = str_replace('\/', '\\\\', $plugin);$/;"	v
config	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $config = json_decode(file_get_contents($file), true);$/;"	v
out	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $out = json_encode($config, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE) . "\\n";$/;"	v
composer	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $composer = $this->findComposer();$/;"	v
cwd	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $cwd = getcwd();$/;"	v
command	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $command = 'php ' . escapeshellarg($composer) . ' dump-autoload';$/;"	v
error	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $error = $e->getMessage();$/;"	v
_rootComposerFilePath	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    protected function _rootComposerFilePath()$/;"	f
findPath	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public function findPath(array $pathOptions)$/;"	f
valid	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $valid = false;$/;"	v
i	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        foreach ($pathOptions as $i => $path) {$/;"	v
pathOptions	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $pathOptions = array_values($pathOptions);$/;"	v
max	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $max = count($pathOptions);$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $this->path = $pathOptions[0];$/;"	v
choice	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $choice = null;$/;"	v
i	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            foreach ($pathOptions as $i => $option) {$/;"	v
prompt	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $prompt = 'Choose a plugin path from the paths above.';$/;"	v
choice	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $choice = $this->in($prompt, null, 1);$/;"	v
valid	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^                $valid = true;$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $this->path = $pathOptions[$choice - 1];$/;"	v
getOptionParser	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public function getOptionParser()$/;"	f
parser	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $parser = parent::getOptionParser();$/;"	v
and	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            'Create the directory structure, AppController class and testing setup for a new plugin. ' .$/;"	c
findComposer	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    public function findComposer()$/;"	f
path	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $path = $this->params['composer'];$/;"	v
composer	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $composer = false;$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $path = env('PATH');$/;"	v
paths	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $paths = explode(PATH_SEPARATOR, $path);$/;"	v
composer	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^            $composer = $this->_searchPath($paths);$/;"	v
_searchPath	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^    protected function _searchPath($path)$/;"	f
composer	.\vendor\cakephp\bake\src\Shell\Task\PluginTask.php	/^        $composer = ['composer.phar', 'composer'];$/;"	v
ShellHelperTask	.\vendor\cakephp\bake\src\Shell\Task\ShellHelperTask.php	/^class ShellHelperTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ShellHelperTask.php	/^    public $pathFragment = 'Shell\/Helper\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ShellHelperTask.php	/^    public $pathFragment = 'Shell\/Helper\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\ShellHelperTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\ShellHelperTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\ShellHelperTask.php	/^    public function template()$/;"	f
ShellTask	.\vendor\cakephp\bake\src\Shell\Task\ShellTask.php	/^class ShellTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ShellTask.php	/^    public $pathFragment = 'Shell\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\ShellTask.php	/^    public $pathFragment = 'Shell\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\ShellTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\ShellTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\ShellTask.php	/^    public function template()$/;"	f
for	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^ * Base class for simple bake tasks code generator.$/;"	c
SimpleBakeTask	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^abstract class SimpleBakeTask extends BakeTask$/;"	c
tasks	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    public $tasks = [$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    public $tasks = [$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    abstract public function name();$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    abstract public function fileName($name);$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    abstract public function template();$/;"	f
templateData	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    public function templateData()$/;"	f
namespace	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^        $namespace = Configure::read('App.namespace');$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^            $namespace = $this->_pluginNamespace($this->plugin);$/;"	v
main	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    public function main($name = null)$/;"	f
name	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^        $name = $this->_getName($name);$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^        $name = Inflector::camelize($name);$/;"	v
stub	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^     * Generate a class stub$/;"	c
bake	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    public function bake($name)$/;"	f
contents	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^        $contents = $this->BakeTemplate->generate($this->template());$/;"	v
filename	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^        $filename = $this->getPath() . $this->fileName($name);$/;"	v
emptyFile	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^        $emptyFile = $this->getPath() . 'empty';$/;"	v
to	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^     * @param string $className The class to bake a test for.$/;"	c
bakeTest	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    public function bakeTest($className)$/;"	f
getOptionParser	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^    public function getOptionParser()$/;"	f
parser	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^        $parser = parent::getOptionParser();$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^        $name = $this->name();$/;"	v
file	.\vendor\cakephp\bake\src\Shell\Task\SimpleBakeTask.php	/^            sprintf('Bake a %s class file.', $name)$/;"	c
TaskTask	.\vendor\cakephp\bake\src\Shell\Task\TaskTask.php	/^class TaskTask extends SimpleBakeTask$/;"	c
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\TaskTask.php	/^    public $pathFragment = 'Shell\/Task\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\TaskTask.php	/^    public $pathFragment = 'Shell\/Task\/';$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\TaskTask.php	/^    public function name()$/;"	f
fileName	.\vendor\cakephp\bake\src\Shell\Task\TaskTask.php	/^    public function fileName($name)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\TaskTask.php	/^    public function template()$/;"	f
for	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^ * Task class for creating and updating view template files.$/;"	c
TemplateTask	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^class TemplateTask extends BakeTask$/;"	c
tasks	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $tasks = [$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $tasks = [$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $pathFragment = 'Template\/';$/;"	v
pathFragment	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $pathFragment = 'Template\/';$/;"	v
controllerName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $controllerName = null;$/;"	v
controllerName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $controllerName = null;$/;"	v
controllerClass	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $controllerClass = null;$/;"	v
controllerClass	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $controllerClass = null;$/;"	v
modelName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $modelName = null;$/;"	v
modelName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $modelName = null;$/;"	v
scaffoldActions	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $scaffoldActions = ['index', 'view', 'add', 'edit'];$/;"	v
scaffoldActions	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $scaffoldActions = ['index', 'view', 'add', 'edit'];$/;"	v
_associationFilter	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    protected $_associationFilter = null;$/;"	v
_associationFilter	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    protected $_associationFilter = null;$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public $path;$/;"	v
initialize	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function initialize()$/;"	f
path	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $this->path = current(App::path('Template'));$/;"	v
main	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function main($name = null, $template = null, $action = null)$/;"	f
template	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function main($name = null, $template = null, $action = null)$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $name = $this->_getName($name);$/;"	v
controller	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $controller = null;$/;"	v
controller	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $controller = $this->params['controller'];$/;"	v
action	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        if ($template && $action === null) {$/;"	v
action	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $action = $template;$/;"	v
vars	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $vars = $this->_loadController();$/;"	v
methods	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $methods = $this->_methodsToBake();$/;"	v
content	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $content = $this->getContent($method, $vars);$/;"	v
for	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^     * Set the model class for the table.$/;"	c
model	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function model($table)$/;"	f
tableName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $tableName = $this->_camelize($table);$/;"	v
plugin	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $plugin = null;$/;"	v
plugin	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $plugin = $this->params['plugin'] . '.';$/;"	v
modelName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $this->modelName = $plugin . $tableName;$/;"	v
controller	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function controller($table, $controller = null)$/;"	f
controller	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function controller($table, $controller = null)$/;"	v
tableName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $tableName = $this->_camelize($table);$/;"	v
controller	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $controller = $tableName;$/;"	v
controllerName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $this->controllerName = $controller;$/;"	v
plugin	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $plugin = $this->param('plugin');$/;"	v
prefix	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $prefix = $this->_getPrefix();$/;"	v
controllerClass	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $this->controllerClass = (string)App::className($plugin . $prefix . $controller, 'Controller', 'Controller');$/;"	v
getPath	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function getPath()$/;"	f
path	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $path = parent::getPath();$/;"	v
_methodsToBake	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    protected function _methodsToBake()$/;"	f
base	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $base = Configure::read('App.namespace');$/;"	v
methods	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $methods = [];$/;"	v
methods	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $methods = array_diff($/;"	v
methods	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $methods = $this->scaffoldActions;$/;"	v
i	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        foreach ($methods as $i => $method) {$/;"	v
all	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function all()$/;"	f
tables	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $tables = $this->Model->listUnskipped();$/;"	v
_loadController	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    protected function _loadController()$/;"	f
modelObject	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $modelObject = TableRegistry::getTableLocator()->get($this->modelName);$/;"	v
modelObject	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $modelObject = TableRegistry::getTableLocator()->get($this->modelName, [$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $namespace = Configure::read('App.namespace');$/;"	v
primaryKey	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $primaryKey = (array)$modelObject->getPrimaryKey();$/;"	v
displayField	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $displayField = $modelObject->getDisplayField();$/;"	v
singularVar	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $singularVar = $this->_singularName($this->controllerName);$/;"	v
singularHumanName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $singularHumanName = $this->_singularHumanName($this->controllerName);$/;"	v
schema	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $schema = $modelObject->getSchema();$/;"	v
fields	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $fields = $schema->columns();$/;"	v
modelClass	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $modelClass = $this->modelName;$/;"	v
entityClass	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $entityClass = sprintf('%s\\Model\\Entity\\%s', $namespace, $entityClass);$/;"	v
entityClass	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $entityClass = EntityInterface::class;$/;"	v
associations	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $associations = $this->_filteredAssociations($modelObject);$/;"	v
keyFields	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $keyFields = [];$/;"	v
pluralVar	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $pluralVar = Inflector::variable($this->controllerName);$/;"	v
pluralHumanName	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $pluralHumanName = $this->_pluralHumanName($this->controllerName);$/;"	v
bake	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function bake($template, $content = '', $outputFile = null)$/;"	f
content	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function bake($template, $content = '', $outputFile = null)$/;"	v
outputFile	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $outputFile = $template;$/;"	v
content	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $content = $this->getContent($template);$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $path = $this->getPath();$/;"	v
filename	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $filename = $path . Inflector::underscore($outputFile) . '.ctp';$/;"	v
getContent	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function getContent($action, $vars = null)$/;"	f
vars	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function getContent($action, $vars = null)$/;"	v
vars	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $vars = $this->_loadController();$/;"	v
getOptionParser	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    public function getOptionParser()$/;"	f
parser	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^        $parser = parent::getOptionParser();$/;"	v
_filteredAssociations	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^    protected function _filteredAssociations(Table $model)$/;"	f
_associationFilter	.\vendor\cakephp\bake\src\Shell\Task\TemplateTask.php	/^            $this->_associationFilter = new AssociationFilter();$/;"	v
for	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^ * Task class for creating and updating test files.$/;"	c
TestTask	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^class TestTask extends BakeTask$/;"	c
tasks	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public $tasks = ['Bake.BakeTemplate'];$/;"	v
tasks	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public $tasks = ['Bake.BakeTemplate'];$/;"	v
types	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * class types that methods can be generated for$/;"	c
classTypes	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public $classTypes = [$/;"	v
classTypes	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public $classTypes = [$/;"	v
types	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * class types that methods can be generated for$/;"	c
classSuffixes	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public $classSuffixes = [$/;"	v
classSuffixes	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public $classSuffixes = [$/;"	v
_fixtures	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    protected $_fixtures = [];$/;"	v
_fixtures	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    protected $_fixtures = [];$/;"	v
main	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function main($type = null, $name = null)$/;"	f
name	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function main($type = null, $name = null)$/;"	v
type	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $type = $this->normalize($type);$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $name = $this->_getName($name);$/;"	v
types	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * Output a list of class types you can bake a test for.$/;"	c
outputTypeChoices	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function outputTypeChoices()$/;"	f
type	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            'You must provide a class type to bake a test for. The valid types are:',$/;"	c
i	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $i = 0;$/;"	v
option	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        foreach ($this->classTypes as $option => $package) {$/;"	v
outputClassChoices	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function outputClassChoices($typeName)$/;"	f
type	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $type = $this->mapType($typeName);$/;"	v
to	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            'You must provide a class to bake a test for. Some possible options are:',$/;"	c
options	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $options = $this->_getClassOptions($type);$/;"	v
i	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $i = 0;$/;"	v
_bakeAll	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    protected function _bakeAll($type)$/;"	f
mappedType	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $mappedType = $this->mapType($type);$/;"	v
classes	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $classes = $this->_getClassOptions($mappedType);$/;"	v
_getClassOptions	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    protected function _getClassOptions($namespace)$/;"	f
classes	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $classes = [];$/;"	v
base	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $base = APP;$/;"	v
base	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $base = Plugin::classPath($this->plugin);$/;"	v
path	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $path = $base . str_replace('\\\\', DS, $namespace);$/;"	v
folder	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $folder = new Folder($path);$/;"	v
ie	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * @param string $className the 'cake name' for the class ie. Posts for the PostsController$/;"	c
bake	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function bake($type, $className)$/;"	f
type	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $type = $this->normalize($type);$/;"	v
fullClassName	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $fullClassName = $this->getRealClassName($type, $className);$/;"	v
fixtures	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^                $fixtures = array_map('trim', explode(',', $this->params['fixtures']));$/;"	v
_fixtures	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^                $this->_fixtures = array_filter($fixtures);$/;"	v
testSubject	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^                $testSubject = $this->buildTestSubject($type, $fullClassName);$/;"	v
methods	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $methods = [];$/;"	v
methods	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $methods = $this->getTestableMethods($fullClassName);$/;"	v
mock	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $mock = $this->hasMockClass($type);$/;"	v
uses	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $uses = $this->generateUses($type, $fullClassName);$/;"	v
subject	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $subject = $className;$/;"	v
baseNamespace	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $baseNamespace = Configure::read('App.namespace');$/;"	v
baseNamespace	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $baseNamespace = $this->_pluginNamespace($this->plugin);$/;"	v
subNamespace	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $subNamespace = substr($namespace, strlen($baseNamespace) + 1);$/;"	v
properties	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $properties = $this->generateProperties($type, $subject, $fullClassName);$/;"	v
out	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $out = $this->BakeTemplate->generate('tests\/test_case');$/;"	v
filename	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $filename = $this->testCaseFileName($type, $fullClassName);$/;"	v
emptyFile	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $emptyFile = $this->getPath() . $this->getSubspacePath($type) . DS . 'empty';$/;"	v
typeCanDetectFixtures	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function typeCanDetectFixtures($type)$/;"	f
to	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * Construct an instance of the class to be tested.$/;"	c
the	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * @param string $class The classname of the class the test is being generated for.$/;"	c
that	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * @return object And instance of the class that is going to be tested.$/;"	c
buildTestSubject	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function buildTestSubject($type, $class)$/;"	f
name	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $name = str_replace('Table', '', $name);$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^                $name = $this->plugin . '.' . $name;$/;"	v
instance	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^                $instance = TableRegistry::getTableLocator()->get($name);$/;"	v
instance	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^                $instance = TableRegistry::getTableLocator()->get($name, [$/;"	v
instance	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $instance = new $class(new Request(), new Response());$/;"	v
instance	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $instance = new $class();$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * Gets the real class name from the cake short form. If the class name is already$/;"	c
the	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * @param string $class the Classname of the class the test is being generated for.$/;"	c
name	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * @return string Real class name$/;"	c
getRealClassName	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function getRealClassName($type, $class)$/;"	f
namespace	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $namespace = Configure::read('App.namespace');$/;"	v
namespace	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $namespace = str_replace('\/', '\\\\', $this->plugin);$/;"	v
suffix	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $suffix = $this->classSuffixes[$type];$/;"	v
subSpace	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $subSpace = $this->mapType($type);$/;"	v
prefix	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $prefix = $this->_getPrefix();$/;"	v
getSubspacePath	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function getSubspacePath($type)$/;"	f
subspace	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $subspace = $this->mapType($type);$/;"	v
mapType	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function mapType($type)$/;"	f
given	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * Get methods declared in the class given.$/;"	c
to	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * @param string $className Name of class to look at.$/;"	c
getTestableMethods	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function getTestableMethods($className)$/;"	f
class	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $class = new ReflectionClass($className);$/;"	v
out	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $out = [];$/;"	v
generateFixtureList	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    public function generateFixtureList($subject)$/;"	f
_fixtures	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $this->_fixtures = [];$/;"	v
to	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * @param \\Cake\\ORM\\Table $subject A Model class to scan for associations and pull fixtures off of.$/;"	c
_processModel	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    protected function _processModel($subject)$/;"	f
assoc	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $assoc = $subject->getAssociation($alias);$/;"	v
target	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $target = $assoc->getTarget();$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $name = $target->getAlias();$/;"	v
subjectClass	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $subjectClass = get_class($subject);$/;"	v
subjectClass	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            if ($subjectClass !== 'Cake\\ORM\\Table' && $subjectClass === get_class($target)) {$/;"	v
_processController	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    protected function _processController($subject)$/;"	f
models	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $models = [$subject->modelClass];$/;"	v
name	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * Add class name to the fixture list.$/;"	c
that	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^     * @param string $name Name of the Model class that a fixture might be required for.$/;"	c
_addFixture	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^    protected function _addFixture($name)$/;"	f
prefix	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $prefix = 'plugin.' . $this->plugin . '.';$/;"	v
prefix	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^            $prefix = 'app.';$/;"	v
fixture	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	/^        $fixture = $prefix . $this->_fixtureName($name);$/;"	v
required	.\vendor\cakephp\bake\src\Shell\Task\TestTask.php	